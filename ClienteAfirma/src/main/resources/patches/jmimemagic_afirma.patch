diff -Nru old\magic.dtd new\magic.dtd
--- old\magic.dtd	Thu Jan 01 01:00:00 1970
+++ new\magic.dtd	Tue Nov 10 18:49:04 2009
@@ -0,0 +1,17 @@
+<!ELEMENT magic (info?,detectorlist)>
+<!ELEMENT info (version?,author?,description?)>
+<!ELEMENT version (#PCDATA)>
+<!ELEMENT author (#PCDATA)>
+<!ELEMENT description (#PCDATA)>
+<!ELEMENT detectorlist (detector*)>
+<!ELEMENT detector (mimetype,extension,designation,test,childlist?)>
+<!ELEMENT extension (#PCDATA)>
+<!ELEMENT mimetype (#PCDATA)>
+<!ELEMENT designation (#PCDATA)>
+<!ELEMENT test (#PCDATA)>
+<!ATTLIST test offset CDATA "0">
+<!ATTLIST test type CDATA "string">
+<!ATTLIST test comparator CDATA "=">
+<!ELEMENT childlist (detector+)>
+	       
+               
diff -Nru old\magic.xml new\magic.xml
--- old\magic.xml	Thu Jan 01 01:00:00 1970
+++ new\magic.xml	Tue Nov 10 18:49:04 2009
@@ -0,0 +1,3472 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE magic PUBLIC "-//jmimemagic//DTD magic config 1.0//EN" "magic_1_0.dtd">
+<magic>
+<info>
+<version>0.2</version>
+<author>dcastro</author>
+<description>magic file</description>
+</info>
+<match-list>
+<match>
+	<mimetype>audio/mp3</mimetype>
+	<extension></extension>
+	<description>MP3</description>
+	<test type="beshort" offset="0" length="" bitmask="0xfffe" comparator="=">0xfffa</test>
+	<match-list>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, 32 kBits</description>
+		<property name="bitrate" value="32"/>
+		<test type="byte" offset="2" length="" bitmask="0xf0" comparator="=">0x10</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, 40 kBits</description>
+		<property name="bitrate" value="40"/>
+		<test type="byte" offset="2" length="" bitmask="0xf0" comparator="=">0x20</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, 48 kBits</description>
+		<property name="bitrate" value="48"/>
+		<test type="byte" offset="2" length="" bitmask="0xf0" comparator="=">0x30</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, 56 kBits</description>
+		<property name="bitrate" value="56"/>
+		<test type="byte" offset="2" length="" bitmask="0xf0" comparator="=">0x40</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, 64 kBits</description>
+		<property name="bitrate" value="64"/>
+		<test type="byte" offset="2" length="" bitmask="0xf0" comparator="=">0x50</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, 80 kBits</description>
+		<property name="bitrate" value="80"/>
+		<test type="byte" offset="2" length="" bitmask="0xf0" comparator="=">0x60</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, 96 kBits</description>
+		<property name="bitrate" value="96"/>
+		<test type="byte" offset="2" length="" bitmask="0xf0" comparator="=">0x70</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, 112 kBits</description>
+		<property name="bitrate" value="112"/>
+		<test type="byte" offset="2" length="" bitmask="0xf0" comparator="=">0x80</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, 128 kBits</description>
+		<property name="bitrate" value="128"/>
+		<test type="byte" offset="2" length="" bitmask="0xf0" comparator="=">0x90</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, 160 kBits</description>
+		<property name="bitrate" value="160"/>
+		<test type="byte" offset="2" length="" bitmask="0xf0" comparator="=">0xA0</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, 192 kBits</description>
+		<property name="bitrate" value="192"/>
+		<test type="byte" offset="2" length="" bitmask="0xf0" comparator="=">0xB0</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, 224 kBits</description>
+		<property name="bitrate" value="224"/>
+		<test type="byte" offset="2" length="" bitmask="0xf0" comparator="=">0xC0</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, 256 kBits</description>
+		<property name="bitrate" value="256"/>
+		<test type="byte" offset="2" length="" bitmask="0xf0" comparator="=">0xD0</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, 320 kBits</description>
+		<property name="bitrate" value="320"/>
+		<test type="byte" offset="2" length="" bitmask="0xf0" comparator="=">0xE0</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, 44.1 kHz</description>
+		<property name="samplingrate" value="44.1"/>
+		<test type="byte" offset="2" length="" bitmask="0x0C" comparator="=">0x00</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, 48 kHz</description>
+		<property name="samplingrate" value="48"/>
+		<test type="byte" offset="2" length="" bitmask="0x0C" comparator="=">0x04</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, 32 kHz</description>
+		<property name="samplingrate" value="32"/>
+		<test type="byte" offset="2" length="" bitmask="0x0C" comparator="=">0x08</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, Stereo</description>
+		<property name="channels" value="stereo"/>
+		<test type="byte" offset="3" length="" bitmask="0xC0" comparator="=">0x00</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, JStereo</description>
+		<property name="channels" value="jstereo"/>
+		<test type="byte" offset="3" length="" bitmask="0xC0" comparator="=">0x40</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, Dual-Ch</description>
+		<property name="channels" value="dual"/>
+		<test type="byte" offset="3" length="" bitmask="0xC0" comparator="=">0x80</test>
+	</match>
+	<match>
+		<mimetype></mimetype>
+		<extension></extension>
+		<description>b, Mono</description>
+		<property name="channels" value="mono"/>
+		<test type="byte" offset="3" length="" bitmask="0xC0" comparator="=">0xC0</test>
+	</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>image/gif</mimetype>
+	<extension></extension>
+	<description>GIF image data</description>
+	<test type="string" offset="0" length="" bitmask="" comparator="=">GIF8</test>
+	<match-list>
+	<match>
+		<mimetype>b, version 8%s,</mimetype>
+		<extension></extension>
+		<description>b, version 8%s,</description>
+		<test type="string" offset="4" length="" bitmask="" comparator="=">7a</test>
+	</match>
+	<match>
+		<mimetype>b, version 8%s,</mimetype>
+		<extension></extension>
+		<description>b, version 8%s,</description>
+		<test type="string" offset="4" length="" bitmask="" comparator="=">9a</test>
+	</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>video/mpeg</mimetype>
+	<extension>mpg</extension>
+	<description>MPEG video stream data</description>
+	<test offset="0" type="belong" comparator="=">0x1b3</test>
+</match>
+<match>
+	<mimetype>video/mpeg</mimetype>
+	<extension>mpg</extension>
+	<description>MPEG system stream data</description>
+	<test offset="0" type="belong" comparator="=">0x1ba</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>MP</description>
+	<test offset="0" type="beshort" comparator="&amp;">0xfff0</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>\b</description>
+			<test offset="1" type="byte" comparator="=">0x8</test>
+			<match-list>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>\b3</description>
+					<test offset="1" type="byte" comparator="&amp;">0x2</test>
+					<match-list>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description> 32 kBits</description>
+							<test offset="2" type="byte" comparator="=">0x10</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description> 40 kBits</description>
+							<test offset="2" type="byte" comparator="=">0x20</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description> 48 kBits</description>
+							<test offset="2" type="byte" comparator="=">0x30</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description> 56 kBits</description>
+							<test offset="2" type="byte" comparator="=">0x40</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description> 64 kBits</description>
+							<test offset="2" type="byte" comparator="=">0x50</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description> 80 kBits</description>
+							<test offset="2" type="byte" comparator="=">0x60</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description> 96 kBits</description>
+							<test offset="2" type="byte" comparator="=">0x70</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>112 kBits</description>
+							<test offset="2" type="byte" comparator="=">0x80</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>128 kBits</description>
+							<test offset="2" type="byte" comparator="=">0x90</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>160 kBits</description>
+							<test offset="2" type="byte" comparator="=">0xa0</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>192 kBits</description>
+							<test offset="2" type="byte" comparator="=">0xb0</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>224 kBits</description>
+							<test offset="2" type="byte" comparator="=">0xc0</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>256 kBits</description>
+							<test offset="2" type="byte" comparator="=">0xd0</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>320 kBits</description>
+							<test offset="2" type="byte" comparator="=">0xe0</test>
+						</match>
+					</match-list>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>\b2</description>
+					<test offset="1" type="byte" comparator="&amp;">0x4</test>
+					<match-list>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description> 32 kBits</description>
+							<test offset="2" type="byte" comparator="=">0x10</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description> 48 kBits</description>
+							<test offset="2" type="byte" comparator="=">0x20</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description> 56 kBits</description>
+							<test offset="2" type="byte" comparator="=">0x30</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description> 64 kBits</description>
+							<test offset="2" type="byte" comparator="=">0x40</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description> 80 kBits</description>
+							<test offset="2" type="byte" comparator="=">0x50</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description> 96 kBits</description>
+							<test offset="2" type="byte" comparator="=">0x60</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>112 kBits</description>
+							<test offset="2" type="byte" comparator="=">0x70</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>128 kBits</description>
+							<test offset="2" type="byte" comparator="=">0x80</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>160 kBits</description>
+							<test offset="2" type="byte" comparator="=">0x90</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>192 kBits</description>
+							<test offset="2" type="byte" comparator="=">0xa0</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>224 kBits</description>
+							<test offset="2" type="byte" comparator="=">0xb0</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>256 kBits</description>
+							<test offset="2" type="byte" comparator="=">0xc0</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>320 kBits</description>
+							<test offset="2" type="byte" comparator="=">0xd0</test>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>384 kBits</description>
+							<test offset="2" type="byte" comparator="=">0xe0</test>
+						</match>
+					</match-list>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>44.1 kHz</description>
+					<test offset="2" type="byte" comparator="=">0x0</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>48 kHz</description>
+					<test offset="2" type="byte" comparator="=">0x4</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>32 kHz</description>
+					<test offset="2" type="byte" comparator="=">0x8</test>
+				</match>
+			</match-list>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>\b</description>
+			<test offset="1" type="byte" comparator="=">0x0</test>
+			<match-list>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>\b3</description>
+					<test offset="1" type="byte" comparator="&amp;">0x2</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>\b2</description>
+					<test offset="1" type="byte" comparator="&amp;">0x4</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>  8 kBits</description>
+					<test offset="2" type="byte" comparator="=">0x10</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description> 16 kBits</description>
+					<test offset="2" type="byte" comparator="=">0x20</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description> 24 kBits</description>
+					<test offset="2" type="byte" comparator="=">0x30</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description> 32 kBits</description>
+					<test offset="2" type="byte" comparator="=">0x40</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description> 40 kBits</description>
+					<test offset="2" type="byte" comparator="=">0x50</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description> 48 kBits</description>
+					<test offset="2" type="byte" comparator="=">0x60</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description> 56 kBits</description>
+					<test offset="2" type="byte" comparator="=">0x70</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description> 64 kBits</description>
+					<test offset="2" type="byte" comparator="=">0x80</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description> 80 kBits</description>
+					<test offset="2" type="byte" comparator="=">0x90</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description> 96 kBits</description>
+					<test offset="2" type="byte" comparator="=">0xa0</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>112 kBits</description>
+					<test offset="2" type="byte" comparator="=">0xb0</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>128 kBits</description>
+					<test offset="2" type="byte" comparator="=">0xc0</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>144 kBits</description>
+					<test offset="2" type="byte" comparator="=">0xd0</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>160 kBits</description>
+					<test offset="2" type="byte" comparator="=">0xe0</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>22.05 kHz</description>
+					<test offset="2" type="byte" comparator="=">0x0</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>24 kHz</description>
+					<test offset="2" type="byte" comparator="=">0x4</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>16 kHz</description>
+					<test offset="2" type="byte" comparator="=">0x8</test>
+				</match>
+			</match-list>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Stereo</description>
+			<test offset="3" type="byte" comparator="=">0x0</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>JStereo</description>
+			<test offset="3" type="byte" comparator="=">0x40</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Dual-Ch</description>
+			<test offset="3" type="byte" comparator="=">0x80</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Mono</description>
+			<test offset="3" type="byte" comparator="=">0xc0</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>FLI file</description>
+	<test offset="4" type="leshort" comparator="=">0xaf11</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>- %d frames,</description>
+			<test offset="6" type="leshort" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>width=%d pixels,</description>
+			<test offset="8" type="leshort" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>height=%d pixels,</description>
+			<test offset="10" type="leshort" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>depth=%d,</description>
+			<test offset="12" type="leshort" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>ticks/frame=%d</description>
+			<test offset="16" type="leshort" comparator="="></test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>FLC file</description>
+	<test offset="4" type="leshort" comparator="=">0xaf12</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>- %d frames</description>
+			<test offset="6" type="leshort" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>width=%d pixels,</description>
+			<test offset="8" type="leshort" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>height=%d pixels,</description>
+			<test offset="10" type="leshort" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>depth=%d,</description>
+			<test offset="12" type="leshort" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>ticks/frame=%d</description>
+			<test offset="16" type="leshort" comparator="="></test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>Silicon Graphics movie file</description>
+	<test offset="0" type="string" comparator="=">MOVI</test>
+</match>
+<match>
+	<mimetype>video/quicktime</mimetype>
+	<extension>mov</extension>
+	<description>Apple QuickTime movie file (moov)</description>
+	<test offset="4" type="string" comparator="=">moov</test>
+</match>
+<match>
+	<mimetype>video/quicktime</mimetype>
+	<extension>mov</extension>
+	<description>Apple QuickTime movie file (mdat)</description>
+	<test offset="4" type="string" comparator="=">mdat</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>Applixware</description>
+	<test offset="0" type="string" comparator="=">*BEGIN</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Words Document</description>
+			<test offset="7" type="string" comparator="=">WORDS</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Graphic</description>
+			<test offset="7" type="string" comparator="=">GRAPHICS</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Bitmap</description>
+			<test offset="7" type="string" comparator="=">RASTER</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Spreadsheet</description>
+			<test offset="7" type="string" comparator="=">SPREADSHEETS</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Macro</description>
+			<test offset="7" type="string" comparator="=">MACRO</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Builder Object</description>
+			<test offset="7" type="string" comparator="=">BUILDER</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>application/x-tar</mimetype>
+	<extension>tar</extension>
+	<description>POSIX tar archive</description>
+	<test offset="257" type="string" comparator="=">ustar </test>
+</match>
+<match>
+	<mimetype>application/x-tar</mimetype>
+	<extension>tar</extension>
+	<description>tar archive</description>
+	<test offset="257" type="string" comparator="=">ustar  \000GNU</test>
+</match>
+<match>
+	<mimetype>application/zip</mimetype>
+	<extension>zip</extension>
+	<description>Zip archive data</description>
+	<test offset="0" type="string" comparator="=">PK\003\004</test>
+	<match-list>
+		<match>
+			<mimetype>application/zip</mimetype>
+			<extension>zip</extension>
+			<description>at least v0.9 to extract</description>
+			<test offset="4" type="byte" comparator="=">0x9</test>
+		</match>
+		<match>
+			<mimetype>application/zip</mimetype>
+			<extension>zip</extension>
+			<description>at least v1.0 to extract</description>
+			<test offset="4" type="byte" comparator="=">0xa</test>
+		</match>
+		<match>
+			<mimetype>application/zip</mimetype>
+			<extension>zip</extension>
+			<description>at least v1.1 to extract</description>
+			<test offset="4" type="byte" comparator="=">0xb</test>
+		</match>
+		<match>
+			<mimetype>application/zip</mimetype>
+			<extension>zip</extension>
+			<description>at least v2.0 to extract</description>
+			<test offset="4" type="byte" comparator="=">0x14</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>Standard MIDI data</description>
+	<test offset="0" type="string" comparator="=">MThd</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>(format %d)</description>
+			<test offset="9" type="byte" comparator="&gt;">0x0</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>using %d tracks</description>
+			<test offset="11" type="byte" comparator="&gt;">0x1</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>Creative Music (CMF) data</description>
+	<test offset="0" type="string" comparator="=">CTMF</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>SoundBlaster instrument data</description>
+	<test offset="0" type="string" comparator="=">SBI</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>Creative Labs voice data</description>
+	<test offset="0" type="string" comparator="=">Creative Voice File</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description></description>
+			<test offset="19" type="byte" comparator="=">0x1a</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>- version %d</description>
+			<test offset="23" type="byte" comparator="&gt;">0x0</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>\b.%d</description>
+			<test offset="22" type="byte" comparator="&gt;">0x0</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>Extended MOD sound data,</description>
+	<test offset="0" type="string" comparator="=">EMOD</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>version %d</description>
+			<test offset="4" type="byte" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>\b.%d,</description>
+			<test offset="4" type="byte" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>%d instruments</description>
+			<test offset="45" type="byte" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>(module)</description>
+			<test offset="83" type="byte" comparator="=">0x0</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>(song)</description>
+			<test offset="83" type="byte" comparator="=">0x1</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>realaudio sound file</description>
+	<test offset="0" type="belong" comparator="=">0x2e7261fd</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>file        </description>
+	<test offset="0" type="string" comparator="=">.RMF\000\000\000realmedia</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>data</description>
+	<test offset="0" type="string" comparator="=">\037\235compress'd</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>block compressed</description>
+			<test offset="2" type="byte" comparator="&gt;">0x0</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>%d bits</description>
+			<test offset="2" type="byte" comparator="="></test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>application/x-gzip</mimetype>
+	<extension>gz</extension>
+	<description>gzip compressed data</description>
+	<test offset="0" type="string" comparator="=">\037\213</test>
+	<match-list>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>reserved method,</description>
+			<test offset="2" type="byte" comparator="&lt;">0x8</test>
+		</match>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>deflated,</description>
+			<test offset="2" type="byte" comparator="=">0x8</test>
+		</match>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>ASCII,</description>
+			<test offset="3" type="byte" comparator="&amp;">0x1</test>
+		</match>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>continuation,</description>
+			<test offset="3" type="byte" comparator="&amp;">0x2</test>
+		</match>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>extra field,</description>
+			<test offset="3" type="byte" comparator="&amp;">0x4</test>
+		</match>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>original filename,</description>
+			<test offset="3" type="byte" comparator="&amp;">0x8</test>
+		</match>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>comment,</description>
+			<test offset="3" type="byte" comparator="&amp;">0x10</test>
+		</match>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>encrypted,</description>
+			<test offset="3" type="byte" comparator="&amp;">0x20</test>
+		</match>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>last modified: %s,</description>
+			<test offset="4" type="ledate" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>max compression,</description>
+			<test offset="8" type="byte" comparator="=">0x2</test>
+		</match>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>max speed,</description>
+			<test offset="8" type="byte" comparator="=">0x4</test>
+		</match>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>os: MS-DOS</description>
+			<test offset="9" type="byte" comparator="=">0x0</test>
+		</match>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>os: Amiga</description>
+			<test offset="9" type="byte" comparator="=">0x1</test>
+		</match>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>os: VMS</description>
+			<test offset="9" type="byte" comparator="=">0x2</test>
+		</match>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>os: Unix</description>
+			<test offset="9" type="byte" comparator="=">0x3</test>
+		</match>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>os: Atari</description>
+			<test offset="9" type="byte" comparator="=">0x5</test>
+		</match>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>os: OS/2</description>
+			<test offset="9" type="byte" comparator="=">0x6</test>
+		</match>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>os: MacOS</description>
+			<test offset="9" type="byte" comparator="=">0x7</test>
+		</match>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>os: Tops/20</description>
+			<test offset="9" type="byte" comparator="=">0xa</test>
+		</match>
+		<match>
+			<mimetype>application/x-gzip</mimetype>
+			<extension>gz</extension>
+			<description>os: Win/32</description>
+			<test offset="9" type="byte" comparator="=">0xb</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>application/x-bzip2</mimetype>
+	<extension>bz2</extension>
+	<description>bzip2 compressed data</description>
+	<test offset="0" type="string" comparator="=">BZh</test>
+	<match-list>
+		<match>
+			<mimetype>application/x-bzip2</mimetype>
+			<extension>bz2</extension>
+			<description>block size = %c00k</description>
+			<test offset="3" type="byte" comparator="&gt;">0x2f</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>application/x-shockwave-flash</mimetype>
+	<extension>swf</extension>
+	<description>Macromedia Flash data,</description>
+	<test offset="0" type="string" comparator="=">FWS</test>
+	<match-list>
+		<match>
+			<mimetype>application/x-shockwave-flash</mimetype>
+			<extension>swf</extension>
+			<description>version %d</description>
+			<test offset="3" type="byte" comparator="="></test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>PostScript Type 1 font text</description>
+	<test offset="0" type="string" comparator="=">%!PS-AdobeFont-1.</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>(%s)</description>
+			<test offset="20" type="string" comparator="&gt;">\000</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>PostScript Type 1 font program data</description>
+	<test offset="6" type="string" comparator="=">%!PS-AdobeFont-1.0</test>
+</match>
+<match>
+	<mimetype>application/postscript</mimetype>
+	<extension>ps</extension>
+	<description>PostScript Level 2 program data</description>
+	<test offset="0" type="string" comparator="=">%!PS-Adobe-2.0</test>
+</match>
+<match>
+	<mimetype>application/vnd.framemaker</mimetype>
+	<extension>???</extension>
+	<description>FrameMaker document</description>
+	<test offset="0" type="string" comparator="=">&lt;MakerFile</test>
+	<match-list>
+		<match>
+			<mimetype>application/vnd.framemaker</mimetype>
+			<extension>???</extension>
+			<description>(5.5</description>
+			<test offset="11" type="string" comparator="=">5.5</test>
+		</match>
+		<match>
+			<mimetype>application/vnd.framemaker</mimetype>
+			<extension>???</extension>
+			<description>(5.0</description>
+			<test offset="11" type="string" comparator="=">5.0</test>
+		</match>
+		<match>
+			<mimetype>application/vnd.framemaker</mimetype>
+			<extension>???</extension>
+			<description>(4.0</description>
+			<test offset="11" type="string" comparator="=">4.0</test>
+		</match>
+		<match>
+			<mimetype>application/vnd.framemaker</mimetype>
+			<extension>???</extension>
+			<description>(3.0</description>
+			<test offset="11" type="string" comparator="=">3.0</test>
+		</match>
+		<match>
+			<mimetype>application/vnd.framemaker</mimetype>
+			<extension>???</extension>
+			<description>(2.0</description>
+			<test offset="11" type="string" comparator="=">2.0</test>
+		</match>
+		<match>
+			<mimetype>application/vnd.framemaker</mimetype>
+			<extension>???</extension>
+			<description>(1.0</description>
+			<test offset="11" type="string" comparator="=">1.0</test>
+		</match>
+		<match>
+			<mimetype>application/vnd.framemaker</mimetype>
+			<extension>???</extension>
+			<description>%c)</description>
+			<test offset="14" type="byte" comparator="="></test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>FrameMaker MIF (ASCII) file</description>
+	<test offset="0" type="string" comparator="=">&lt;MIFFile</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>(4.0)</description>
+			<test offset="9" type="string" comparator="=">4.0</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>(3.0)</description>
+			<test offset="9" type="string" comparator="=">3.0</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>(2.0)</description>
+			<test offset="9" type="string" comparator="=">2.0</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>(1.x)</description>
+			<test offset="9" type="string" comparator="=">1.0</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>FrameMaker Dictionary text</description>
+	<test offset="0" type="string" comparator="=">&lt;MakerDictionary</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>(3.0)</description>
+			<test offset="17" type="string" comparator="=">3.0</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>(2.0)</description>
+			<test offset="17" type="string" comparator="=">2.0</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>(1.x)</description>
+			<test offset="17" type="string" comparator="=">1.0</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>FrameMaker Font file</description>
+	<test offset="0" type="string" comparator="=">&lt;MakerScreenFont</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>(%s)</description>
+			<test offset="17" type="string" comparator="=">1.01</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>FrameMaker MML file</description>
+	<test offset="0" type="string" comparator="=">&lt;MML</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>FrameMaker Book file</description>
+	<test offset="0" type="string" comparator="=">&lt;BookFile</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>(3.0</description>
+			<test offset="10" type="string" comparator="=">3.0</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>(2.0</description>
+			<test offset="10" type="string" comparator="=">2.0</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>(1.0</description>
+			<test offset="10" type="string" comparator="=">1.0</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>%c)</description>
+			<test offset="13" type="byte" comparator="="></test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>Intermediate Print File	FrameMaker IPL file</description>
+	<test offset="0" type="string" comparator="=">&lt;Maker</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>GIMP gradient data</description>
+	<test offset="0" type="string" comparator="=">GIMP Gradient</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>GIMP XCF image data,</description>
+	<test offset="0" type="string" comparator="=">gimp xcf file</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>%ld x</description>
+			<test offset="14" type="belong" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>%ld,</description>
+			<test offset="18" type="belong" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>RGB Color</description>
+			<test offset="22" type="belong" comparator="=">0x0</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Greyscale</description>
+			<test offset="22" type="belong" comparator="=">0x1</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Indexed Color</description>
+			<test offset="22" type="belong" comparator="=">0x2</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>GIMP pattern data,</description>
+	<test offset="20" type="string" comparator="=">GPAT</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>%s</description>
+			<test offset="24" type="string" comparator="="></test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>GIMP brush data</description>
+	<test offset="20" type="string" comparator="=">GIMP</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>PBM image text</description>
+	<test offset="0" type="string" comparator="=">P1</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>PGM image text</description>
+	<test offset="0" type="string" comparator="=">P2</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>PPM image text</description>
+	<test offset="0" type="string" comparator="=">P3</test>
+</match>
+<match>
+	<mimetype>image/x-portable-bitmap</mimetype>
+	<extension>pbm</extension>
+	<description>PBM "rawbits" image data</description>
+	<test offset="0" type="string" comparator="=">P4</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>PGM "rawbits" image data</description>
+	<test offset="0" type="string" comparator="=">P5</test>
+</match>
+<match>
+	<mimetype>image/x-portable-graymap</mimetype>
+	<extension>???</extension>
+	<description>PPM "rawbits" image data</description>
+	<test offset="0" type="string" comparator="=">P6</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>NIFF image data</description>
+	<test offset="0" type="string" comparator="=">IIN1</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>image data, big-endian</description>
+	<test offset="0" type="string" comparator="=">MM\000*TIFF</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>image data, little-endian</description>
+	<test offset="0" type="string" comparator="=">II*\000TIFF</test>
+</match>
+<match>
+	<mimetype>image/png</mimetype>
+	<extension>png</extension>
+	<description>PNG image data,</description>
+	<test offset="0" type="string" comparator="=">\211NG</test>
+	<match-list>
+		<match>
+			<mimetype>image/png</mimetype>
+			<extension>png</extension>
+			<description>CORRUPTED,</description>
+			<test offset="4" type="belong" comparator="=">0xd0a1a0a</test>
+		</match>
+		<match>
+			<mimetype>image/png</mimetype>
+			<extension>png</extension>
+			<description></description>
+			<test offset="4" type="belong" comparator="=">0xd0a1a0a</test>
+			<match-list>
+				<match>
+					<mimetype>image/png</mimetype>
+					<extension>png</extension>
+					<description>%ld x</description>
+					<test offset="16" type="belong" comparator="="></test>
+				</match>
+				<match>
+					<mimetype>image/png</mimetype>
+					<extension>png</extension>
+					<description>%ld,</description>
+					<test offset="20" type="belong" comparator="="></test>
+				</match>
+				<match>
+					<mimetype>image/png</mimetype>
+					<extension>png</extension>
+					<description>%d-bit</description>
+					<test offset="24" type="byte" comparator="="></test>
+				</match>
+				<match>
+					<mimetype>image/png</mimetype>
+					<extension>png</extension>
+					<description>grayscale,</description>
+					<test offset="25" type="byte" comparator="=">0x0</test>
+				</match>
+				<match>
+					<mimetype>image/png</mimetype>
+					<extension>png</extension>
+					<description>\b/color RGB,</description>
+					<test offset="25" type="byte" comparator="=">0x2</test>
+				</match>
+				<match>
+					<mimetype>image/png</mimetype>
+					<extension>png</extension>
+					<description>colormap,</description>
+					<test offset="25" type="byte" comparator="=">0x3</test>
+				</match>
+				<match>
+					<mimetype>image/png</mimetype>
+					<extension>png</extension>
+					<description>gray+alpha,</description>
+					<test offset="25" type="byte" comparator="=">0x4</test>
+				</match>
+				<match>
+					<mimetype>image/png</mimetype>
+					<extension>png</extension>
+					<description>\b/color RGBA,</description>
+					<test offset="25" type="byte" comparator="=">0x6</test>
+				</match>
+				<match>
+					<mimetype>image/png</mimetype>
+					<extension>png</extension>
+					<description>non-interlaced</description>
+					<test offset="28" type="byte" comparator="=">0x0</test>
+				</match>
+				<match>
+					<mimetype>image/png</mimetype>
+					<extension>png</extension>
+					<description>interlaced</description>
+					<test offset="28" type="byte" comparator="=">0x1</test>
+				</match>
+			</match-list>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>image/png</mimetype>
+	<extension>png</extension>
+	<description>PNG image data, CORRUPTED</description>
+	<test offset="1" type="string" comparator="=">PNG</test>
+</match>
+<match>
+	<mimetype>image/gif</mimetype>
+	<extension>gif</extension>
+	<description>GIF image data</description>
+	<test offset="0" type="string" comparator="=">GIF8</test>
+	<match-list>
+		<match>
+			<mimetype>image/gif</mimetype>
+			<extension>gif</extension>
+			<description>version 8%s,</description>
+			<test offset="4" type="string" comparator="=">7a</test>
+		</match>
+		<match>
+			<mimetype>image/gif</mimetype>
+			<extension>gif</extension>
+			<description>version 8%s,</description>
+			<test offset="4" type="string" comparator="=">9a</test>
+		</match>
+		<match>
+			<mimetype>image/gif</mimetype>
+			<extension>gif</extension>
+			<description>%hd x</description>
+			<test offset="6" type="leshort" comparator="&gt;">0x0</test>
+		</match>
+		<match>
+			<mimetype>image/gif</mimetype>
+			<extension>gif</extension>
+			<description>%hd,</description>
+			<test offset="8" type="leshort" comparator="&gt;">0x0</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>window manager raster image data</description>
+	<test offset="0" type="string" comparator="=">\361\000@\273CMU</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>%d x</description>
+			<test offset="4" type="lelong" comparator="&gt;">0x0</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>%d,</description>
+			<test offset="8" type="lelong" comparator="&gt;">0x0</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>%d-bit</description>
+			<test offset="12" type="lelong" comparator="&gt;">0x0</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>application/x-miff</mimetype>
+	<extension>miff</extension>
+	<description>MIFF image data</description>
+	<test offset="0" type="string" comparator="=">id=ImageMagick</test>
+</match>
+<match>
+	<mimetype>image/g3fax</mimetype>
+	<extension>fax</extension>
+	<description>group 3 fax data</description>
+	<test offset="1" type="string" comparator="=">PC Research, Inc</test>
+	<match-list>
+		<match>
+			<mimetype>image/g3fax</mimetype>
+			<extension>fax</extension>
+			<description>normal resolution (204x98 DPI)</description>
+			<test offset="29" type="byte" comparator="=">0x0</test>
+		</match>
+		<match>
+			<mimetype>image/g3fax</mimetype>
+			<extension>fax</extension>
+			<description>fine resolution (204x196 DPI)</description>
+			<test offset="29" type="byte" comparator="=">0x1</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>image/jpeg</mimetype>
+	<extension>jpg</extension>
+	<description>JPEG image data</description>
+	<test offset="0" type="beshort" comparator="=">0xffd8</test>
+	<match-list>
+		<match>
+			<mimetype>image/jpeg</mimetype>
+			<extension>jpg</extension>
+			<description>JFIF standard</description>
+			<test offset="6" type="string" comparator="=">JFIF</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>image/jpeg</mimetype>
+	<extension>jpg</extension>
+	<description>JPEG image data, HSI proprietary</description>
+	<test offset="0" type="string" comparator="=">hsi1</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>PC icon data</description>
+	<test offset="0" type="string" comparator="=">IC</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>PC pointer image data</description>
+	<test offset="0" type="string" comparator="=">PI</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>PC color icon data</description>
+	<test offset="0" type="string" comparator="=">CI</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>PC color pointer image data</description>
+	<test offset="0" type="string" comparator="=">CP</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>X pixmap image text</description>
+	<test offset="0" type="string" comparator="=">/* XPM */</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>iff image data</description>
+	<test offset="0" type="string" comparator="=">Imagefile version-</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>%s</description>
+			<test offset="10" type="string" comparator="&gt;">\000</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>Kodak Photo CD image pack file</description>
+	<test offset="2048" type="string" comparator="=">PCD_IPI</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>Kodak Photo CD overview pack file</description>
+	<test offset="0" type="string" comparator="=">PCD_OPA</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>%s</description>
+	<test offset="1536" type="string" comparator="=">Visio (TM) Drawing</test>
+</match>
+<match>
+	<mimetype>application/java</mimetype>
+	<extension>class</extension>
+	<description>compiled Java class data</description>
+	<test offset="0" type="belong" comparator="=">0xcafebabe</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>Java serialization data</description>
+	<test offset="0" type="beshort" comparator="=">0xaced</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>version %d</description>
+			<test offset="2" type="beshort" comparator="&gt;">0x4</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>application/mac-binhex40</mimetype>
+	<extension>???</extension>
+	<description>BinHex binary text</description>
+	<test offset="11" type="string" comparator="=">must be converted with BinHex</test>
+	<match-list>
+		<match>
+			<mimetype>application/mac-binhex40</mimetype>
+			<extension>???</extension>
+			<description>version %.3s</description>
+			<test offset="41" type="string" comparator="="></test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>StuffIt Archive (data)</description>
+	<test offset="0" type="string" comparator="=">SIT!</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>: %s</description>
+			<test offset="2" type="string" comparator="="></test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>StuffIt Archive (rsrc + data)</description>
+	<test offset="65" type="string" comparator="=">SIT!</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>: %s</description>
+			<test offset="2" type="string" comparator="="></test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>StuffIt Deluxe (data)</description>
+	<test offset="0" type="string" comparator="=">SITD</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>: %s</description>
+			<test offset="2" type="string" comparator="="></test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>StuffIt Deluxe (rsrc + data)</description>
+	<test offset="65" type="string" comparator="=">SITD</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>: %s</description>
+			<test offset="2" type="string" comparator="="></test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>StuffIt Deluxe Segment (data)</description>
+	<test offset="0" type="string" comparator="=">Seg</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>: %s</description>
+			<test offset="2" type="string" comparator="="></test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>StuffIt Deluxe Segment (rsrc + data)</description>
+	<test offset="65" type="string" comparator="=">Seg</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>: %s</description>
+			<test offset="2" type="string" comparator="="></test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>application/pdf</mimetype>
+	<extension>pdf</extension>
+	<description>Macintosh PDF File (data)</description>
+	<test offset="0" type="string" comparator="=">PDF</test>
+	<match-list>
+		<match>
+			<mimetype>application/pdf</mimetype>
+			<extension>pdf</extension>
+			<description>: %s</description>
+			<test offset="2" type="string" comparator="="></test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>application/pdf</mimetype>
+	<extension>pdf</extension>
+	<description>Macintosh PDF File(rsrc + data)</description>
+	<test offset="65" type="string" comparator="=">PDF</test>
+	<match-list>
+		<match>
+			<mimetype>application/pdf</mimetype>
+			<extension>pdf</extension>
+			<description>: %s</description>
+			<test offset="2" type="string" comparator="="></test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>MIME entity text</description>
+	<test offset="0" type="string" comparator="=">MIME-Version:</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description></description>
+	<test offset="0" type="string" comparator="=">Content-Type:</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>%s</description>
+			<test offset="14" type="string" comparator="&gt;">\000</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description></description>
+	<test offset="0" type="string" comparator="=">Content-Type</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>%s</description>
+			<test offset="13" type="string" comparator="&gt;">\000</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>MS-DOS batch file text</description>
+	<test offset="0" type="string" comparator="=">@echo off</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>Windows PE</description>
+	<test offset="128" type="string" comparator="=">PE\000\000MS</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>32-bit</description>
+			<test offset="150" type="leshort" comparator="&gt;">0x0</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>unknown processor</description>
+			<test offset="132" type="leshort" comparator="=">0x0</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Intel 80386</description>
+			<test offset="132" type="leshort" comparator="=">0x14c</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>MIPS R4000</description>
+			<test offset="132" type="leshort" comparator="=">0x166</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Alpha</description>
+			<test offset="132" type="leshort" comparator="=">0x184</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Motorola 68000</description>
+			<test offset="132" type="leshort" comparator="=">0x268</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>PowerPC</description>
+			<test offset="132" type="leshort" comparator="=">0x1f0</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>PA-RISC</description>
+			<test offset="132" type="leshort" comparator="=">0x290</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description></description>
+			<test offset="148" type="leshort" comparator="&gt;">0x1b</test>
+			<match-list>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>unknown subsystem</description>
+					<test offset="220" type="leshort" comparator="=">0x0</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>native</description>
+					<test offset="220" type="leshort" comparator="=">0x1</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>GUI</description>
+					<test offset="220" type="leshort" comparator="=">0x2</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>console</description>
+					<test offset="220" type="leshort" comparator="=">0x3</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>POSIX</description>
+					<test offset="220" type="leshort" comparator="=">0x7</test>
+				</match>
+			</match-list>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>executable</description>
+			<test offset="150" type="leshort" comparator="=">0x0</test>
+			<match-list>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>not relocatable</description>
+					<test offset="150" type="leshort" comparator="&gt;">0x0</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>system file</description>
+					<test offset="150" type="leshort" comparator="&gt;">0x0</test>
+				</match>
+			</match-list>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>DLL</description>
+			<test offset="150" type="leshort" comparator="&gt;">0x0</test>
+			<match-list>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>not relocatable</description>
+					<test offset="150" type="leshort" comparator="&gt;">0x0</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>system file</description>
+					<test offset="150" type="leshort" comparator="&gt;">0x0</test>
+				</match>
+			</match-list>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>MS Windows COFF Intel 80386 object file</description>
+	<test offset="0" type="leshort" comparator="=">0x14c</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>MS-DOS executable (EXE)</description>
+	<test offset="0" type="string" comparator="=">MZ</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>OS/2 or MS Windows</description>
+			<test offset="24" type="string" comparator="=">@</test>
+			<match-list>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>%s</description>
+					<test offset="231" type="string" comparator="=">LH/2 Self-Extract</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>%s</description>
+					<test offset="233" type="string" comparator="=">PKSFX2</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>%s</description>
+					<test offset="122" type="string" comparator="=">Windows self-extracting ZIP</test>
+				</match>
+			</match-list>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>ARJ SFX</description>
+			<test offset="28" type="string" comparator="=">RJSX\377\377b,</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>diet compressed</description>
+			<test offset="28" type="string" comparator="=">diet\371\234b,</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>PKSFX</description>
+			<test offset="30" type="string" comparator="=">Copyright 1989-1990 PKWARE Inc.</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>%.6s compressed</description>
+			<test offset="30" type="string" comparator="=">PKLITE Copr.</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>%.15s</description>
+			<test offset="36" type="string" comparator="=">LHa's SFX</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>%.15s</description>
+			<test offset="36" type="string" comparator="=">LHA's SFX</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>LHa SFX archive v2.13S</description>
+			<test offset="1638" type="string" comparator="=">-lh5-</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>RAR self-extracting archive</description>
+			<test offset="7195" type="string" comparator="=">Rar!</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>PKZIP SFX archive v1.1</description>
+			<test offset="11696" type="string" comparator="=">PK\003\004b,</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>PKZIP SFX archive v1.93a</description>
+			<test offset="13297" type="string" comparator="=">PK\003\004b,</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>PKZIP2 SFX archive v1.09</description>
+			<test offset="15588" type="string" comparator="=">PK\003\004b,</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>PKZIP SFX archive v2.04g</description>
+			<test offset="15770" type="string" comparator="=">PK\003\004b,</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>PKZIP2 SFX archive v1.02</description>
+			<test offset="28374" type="string" comparator="=">PK\003\004b,</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Info-ZIP SFX archive v5.12</description>
+			<test offset="25115" type="string" comparator="=">PK\003\004b,</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Info-ZIP SFX archive v5.12 w/decryption</description>
+			<test offset="26331" type="string" comparator="=">PK\003\004b,</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Info-ZIP SFX archive v5.12</description>
+			<test offset="47031" type="string" comparator="=">PK\003\004b,</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Info-ZIP SFX archive v5.12 w/decryption</description>
+			<test offset="49845" type="string" comparator="=">PK\003\004b,</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Info-ZIP NT SFX archive v5.12 w/decryption</description>
+			<test offset="69120" type="string" comparator="=">PK\003\004b,</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>CODEC archive v3.21</description>
+			<test offset="49801" type="string" comparator="=">y\377\200\377v\377b,</test>
+			<match-list>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>1 file</description>
+					<test offset="49824" type="leshort" comparator="=">0x1</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>%u files</description>
+					<test offset="49824" type="leshort" comparator="&gt;">0x1</test>
+				</match>
+			</match-list>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>MS-DOS executable (built-in)</description>
+	<test offset="0" type="string" comparator="=">LZ</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>Windows NT Registry file</description>
+	<test offset="0" type="string" comparator="=">regf</test>
+</match>
+<match>
+	<mimetype>application/msword</mimetype>
+	<extension>doc</extension>
+	<description>%s</description>
+	<test offset="2080" type="string" comparator="=">Microsoft Word 6.0 Document</test>
+</match>
+<match>
+	<mimetype>application/msword</mimetype>
+	<extension>doc</extension>
+	<description>Spanish Microsoft Word 6 document data</description>
+	<test offset="2080" type="string" comparator="=">Documento Microsoft Word 6</test>
+</match>
+<match>
+	<mimetype>application/msword</mimetype>
+	<extension>doc</extension>
+	<description>Microsoft Word document data</description>
+	<test offset="2112" type="string" comparator="=">MSWordDoc</test>
+</match>
+<match>
+	<mimetype>application/msword</mimetype>
+	<extension>doc</extension>
+	<description>Microsoft Word Document</description>
+	<test offset="0" type="belong" comparator="=">0x31be0000</test>
+</match>
+<match>
+	<mimetype>application/msword</mimetype>
+	<extension>doc</extension>
+	<description>Microsoft Word 6.0 Document</description>
+	<test offset="0" type="string" comparator="=">PO^Q`</test>
+</match>
+<match>
+	<mimetype>application/msword</mimetype>
+	<extension>doc</extension>
+	<description>Microsoft Office Document</description>
+	<test offset="0" type="string" comparator="=">\376\067\000\043</test>
+</match>
+<match>
+	<mimetype>application/msword</mimetype>
+	<extension>doc</extension>
+	<description>Microsoft Office Document</description>
+	<test offset="0" type="string" comparator="=">\320\317\021\340\241\261</test>
+</match>
+<match>
+	<mimetype>application/msword</mimetype>
+	<extension>doc</extension>
+	<description>Microsoft Office Document</description>
+	<test offset="0" type="string" comparator="=">\333\245-\000\000\000</test>
+</match>
+<match>
+	<mimetype>application/msexcel</mimetype>
+	<extension>???</extension>
+	<description>%s</description>
+	<test offset="2080" type="string" comparator="=">Microsoft Excel 5.0 Worksheet</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>Microsoft Excel 5.0 Worksheet</description>
+	<test offset="2114" type="string" comparator="=">Biff5</test>
+</match>
+<match>
+	<mimetype>text/xml</mimetype>
+	<extension>???</extension>
+	<description>XML 1.0 Document</description>
+	<test offset="0" type="string" comparator="=">&lt;?xml version="1.0"?&gt;</test>
+	<match-list>
+		<match>
+			<mimetype>application/msexcel</mimetype>
+			<extension>???</extension>
+			<description>Microsoft Excel Spreadsheet</description>
+			<test offset="23" type="string" comparator="=">&lt;Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet"</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>Lotus 1-2-3</description>
+	<test offset="0" type="belong" comparator="=">0x1a00</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>wk3 document data</description>
+			<test offset="4" type="belong" comparator="=">0x100400</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>wk4 document data</description>
+			<test offset="4" type="belong" comparator="=">0x2100400</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>fm3 or fmb document data</description>
+			<test offset="4" type="belong" comparator="=">0x7800100</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>fm3 or fmb document data</description>
+			<test offset="4" type="belong" comparator="=">0x7800000</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>Lotus 1-2-3</description>
+	<test offset="0" type="belong" comparator="=">0x200</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>wk1 document data</description>
+			<test offset="4" type="belong" comparator="=">0x6040600</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>fmt document data</description>
+			<test offset="4" type="belong" comparator="=">0x6800200</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>WordPerfect document</description>
+	<test offset="1" type="string" comparator="=">WPC</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>MS Windows Help Data</description>
+	<test offset="0" type="string" comparator="=">?_\003\000</test>
+</match>
+<!--<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>"compact bitmap" format (Poskanzer)</description>
+	<test offset="0" type="short" comparator="="></test>
+</match>-->
+<match>
+	<mimetype>application/pdf</mimetype>
+	<extension>pdf</extension>
+	<description>PDF document</description>
+	<test offset="0" type="string" comparator="=">%PDF-</test>
+	<match-list>
+		<match>
+			<mimetype>application/pdf</mimetype>
+			<extension>pdf</extension>
+			<description>version %c</description>
+			<test offset="5" type="byte" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>application/pdf</mimetype>
+			<extension>pdf</extension>
+			<description>\b.%c</description>
+			<test offset="7" type="byte" comparator="="></test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>DOS EPS Binary File</description>
+	<test offset="0" type="belong" comparator="=">0xc5d0d3c6</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Postscript starts at byte %d</description>
+			<test offset="4" type="long" comparator="&gt;"></test>
+			<match-list>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>length %d</description>
+					<test offset="8" type="long" comparator="&gt;"></test>
+					<match-list>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>Metafile starts at byte %d</description>
+							<test offset="12" type="long" comparator="&gt;"></test>
+							<match-list>
+								<match>
+									<mimetype>???</mimetype>
+									<extension>???</extension>
+									<description>length %d</description>
+									<test offset="16" type="long" comparator="&gt;"></test>
+								</match>
+							</match-list>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>TIFF starts at byte %d</description>
+							<test offset="20" type="long" comparator="&gt;"></test>
+							<match-list>
+								<match>
+									<mimetype>???</mimetype>
+									<extension>???</extension>
+									<description>length %d</description>
+									<test offset="24" type="long" comparator="&gt;"></test>
+								</match>
+							</match-list>
+						</match>
+					</match-list>
+				</match>
+			</match-list>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>PPD file</description>
+	<test offset="0" type="string" comparator="=">*PPD-Adobe:</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>ve</description>
+			<test offset="13" type="string" comparator="="></test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>RIFF (little-endian) data</description>
+	<test offset="0" type="string" comparator="=">RIFF</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>palette</description>
+			<test offset="8" type="string" comparator="=">PAL</test>
+			<match-list>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>version %d</description>
+					<test offset="16" type="leshort" comparator="="></test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>%d entries</description>
+					<test offset="18" type="leshort" comparator="="></test>
+				</match>
+			</match-list>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>device-independent bitmap</description>
+			<test offset="8" type="string" comparator="=">RDIB</test>
+			<match-list>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description></description>
+					<test offset="16" type="string" comparator="=">BM</test>
+					<match-list>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>OS/2 1.x format</description>
+							<test offset="30" type="leshort" comparator="=">0xc</test>
+							<match-list>
+								<match>
+									<mimetype>???</mimetype>
+									<extension>???</extension>
+									<description>%d x</description>
+									<test offset="34" type="leshort" comparator="="></test>
+								</match>
+								<match>
+									<mimetype>???</mimetype>
+									<extension>???</extension>
+									<description>%d</description>
+									<test offset="36" type="leshort" comparator="="></test>
+								</match>
+							</match-list>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>OS/2 2.x format</description>
+							<test offset="30" type="leshort" comparator="=">0x40</test>
+							<match-list>
+								<match>
+									<mimetype>???</mimetype>
+									<extension>???</extension>
+									<description>%d x</description>
+									<test offset="34" type="leshort" comparator="="></test>
+								</match>
+								<match>
+									<mimetype>???</mimetype>
+									<extension>???</extension>
+									<description>%d</description>
+									<test offset="36" type="leshort" comparator="="></test>
+								</match>
+							</match-list>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>Windows 3.x format</description>
+							<test offset="30" type="leshort" comparator="=">0x28</test>
+							<match-list>
+								<match>
+									<mimetype>???</mimetype>
+									<extension>???</extension>
+									<description>%d x</description>
+									<test offset="34" type="lelong" comparator="="></test>
+								</match>
+								<match>
+									<mimetype>???</mimetype>
+									<extension>???</extension>
+									<description>%d x</description>
+									<test offset="38" type="lelong" comparator="="></test>
+								</match>
+								<match>
+									<mimetype>???</mimetype>
+									<extension>???</extension>
+									<description>%d</description>
+									<test offset="44" type="leshort" comparator="="></test>
+								</match>
+							</match-list>
+						</match>
+					</match-list>
+				</match>
+			</match-list>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>MIDI</description>
+			<test offset="8" type="string" comparator="=">RMID</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>multimedia movie</description>
+			<test offset="8" type="string" comparator="=">RMMP</test>
+		</match>
+		<match>
+			<mimetype>application/x-wav</mimetype>
+			<extension>wav</extension>
+			<description>WAVE audio</description>
+			<test offset="8" type="string" comparator="=">WAVE</test>
+			<match-list>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>Microsoft PCM</description>
+					<test offset="20" type="leshort" comparator="=">0x1</test>
+					<match-list>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>%d bit</description>
+							<test offset="34" type="leshort" comparator="&gt;">0x0</test>
+						</match>
+					</match-list>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>mono</description>
+					<test offset="22" type="leshort" comparator="=">0x1</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>stereo</description>
+					<test offset="22" type="leshort" comparator="=">0x2</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>%d channels</description>
+					<test offset="22" type="leshort" comparator="&gt;">0x2</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>%d Hz</description>
+					<test offset="24" type="lelong" comparator="&gt;">0x0</test>
+				</match>
+			</match-list>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>AVI</description>
+			<test offset="8" type="string" comparator="=">AVI </test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>animated cursor</description>
+			<test offset="8" type="string" comparator="=">ACON</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>RIFF (big-endian) data</description>
+	<test offset="0" type="string" comparator="=">RIFX</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>palette</description>
+			<test offset="8" type="string" comparator="=">PAL</test>
+			<match-list>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>version %d</description>
+					<test offset="16" type="beshort" comparator="="></test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>%d entries</description>
+					<test offset="18" type="beshort" comparator="="></test>
+				</match>
+			</match-list>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>device-independent bitmap</description>
+			<test offset="8" type="string" comparator="=">RDIB</test>
+			<match-list>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description></description>
+					<test offset="16" type="string" comparator="=">BM</test>
+					<match-list>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>OS/2 1.x format</description>
+							<test offset="30" type="beshort" comparator="=">0xc</test>
+							<match-list>
+								<match>
+									<mimetype>???</mimetype>
+									<extension>???</extension>
+									<description>%d x</description>
+									<test offset="34" type="beshort" comparator="="></test>
+								</match>
+								<match>
+									<mimetype>???</mimetype>
+									<extension>???</extension>
+									<description>%d</description>
+									<test offset="36" type="beshort" comparator="="></test>
+								</match>
+							</match-list>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>OS/2 2.x format</description>
+							<test offset="30" type="beshort" comparator="=">0x40</test>
+							<match-list>
+								<match>
+									<mimetype>???</mimetype>
+									<extension>???</extension>
+									<description>%d x</description>
+									<test offset="34" type="beshort" comparator="="></test>
+								</match>
+								<match>
+									<mimetype>???</mimetype>
+									<extension>???</extension>
+									<description>%d</description>
+									<test offset="36" type="beshort" comparator="="></test>
+								</match>
+							</match-list>
+						</match>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>Windows 3.x format</description>
+							<test offset="30" type="beshort" comparator="=">0x28</test>
+							<match-list>
+								<match>
+									<mimetype>???</mimetype>
+									<extension>???</extension>
+									<description>%d x</description>
+									<test offset="34" type="belong" comparator="="></test>
+								</match>
+								<match>
+									<mimetype>???</mimetype>
+									<extension>???</extension>
+									<description>%d x</description>
+									<test offset="38" type="belong" comparator="="></test>
+								</match>
+								<match>
+									<mimetype>???</mimetype>
+									<extension>???</extension>
+									<description>%d</description>
+									<test offset="44" type="beshort" comparator="="></test>
+								</match>
+							</match-list>
+						</match>
+					</match-list>
+				</match>
+			</match-list>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>MIDI</description>
+			<test offset="8" type="string" comparator="=">RMID</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>multimedia movie</description>
+			<test offset="8" type="string" comparator="=">RMMP</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WAVE audio</description>
+			<test offset="8" type="string" comparator="=">WAVE</test>
+			<match-list>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>Microsoft PCM</description>
+					<test offset="20" type="leshort" comparator="=">0x1</test>
+					<match-list>
+						<match>
+							<mimetype>???</mimetype>
+							<extension>???</extension>
+							<description>%d bit</description>
+							<test offset="34" type="leshort" comparator="&gt;">0x0</test>
+						</match>
+					</match-list>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>mono</description>
+					<test offset="22" type="beshort" comparator="=">0x1</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>stereo</description>
+					<test offset="22" type="beshort" comparator="=">0x2</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>%d channels</description>
+					<test offset="22" type="beshort" comparator="&gt;">0x2</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>%d Hz</description>
+					<test offset="24" type="belong" comparator="&gt;">0x0</test>
+				</match>
+			</match-list>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>AVI</description>
+			<test offset="8" type="string" comparator="=">AVI </test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>animated cursor</description>
+			<test offset="8" type="string" comparator="=">ACON</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Notation Interchange File Format</description>
+			<test offset="8" type="string" comparator="=">NIFF</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description></description>
+	<test offset="0" type="beshort" comparator="=">0xedab</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>RPM</description>
+			<test offset="2" type="beshort" comparator="=">0xeedb</test>
+			<match-list>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>v%d</description>
+					<test offset="4" type="byte" comparator="="></test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>bin</description>
+					<test offset="6" type="beshort" comparator="=">0x0</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>src</description>
+					<test offset="6" type="beshort" comparator="=">0x1</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>i386</description>
+					<test offset="8" type="beshort" comparator="=">0x1</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>Alpha</description>
+					<test offset="8" type="beshort" comparator="=">0x2</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>Sparc</description>
+					<test offset="8" type="beshort" comparator="=">0x3</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>MIPS</description>
+					<test offset="8" type="beshort" comparator="=">0x4</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>PowerPC</description>
+					<test offset="8" type="beshort" comparator="=">0x5</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>68000</description>
+					<test offset="8" type="beshort" comparator="=">0x6</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>SGI</description>
+					<test offset="8" type="beshort" comparator="=">0x7</test>
+				</match>
+				<match>
+					<mimetype>???</mimetype>
+					<extension>???</extension>
+					<description>%s</description>
+					<test offset="10" type="string" comparator="="></test>
+				</match>
+			</match-list>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>text/rtf</mimetype>
+	<extension>rtf</extension>
+	<description>Rich Text Format data,</description>
+	<test offset="0" type="string" comparator="=">{\rtf</test>
+	<match-list>
+		<match>
+			<mimetype>text/rtf</mimetype>
+			<extension>rtf</extension>
+			<description>version %c,</description>
+			<test offset="5" type="byte" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>text/rtf</mimetype>
+			<extension>rtf</extension>
+			<description>ANSI</description>
+			<test offset="6" type="string" comparator="=">\ansi</test>
+		</match>
+		<match>
+			<mimetype>text/rtf</mimetype>
+			<extension>rtf</extension>
+			<description>Apple Macintosh</description>
+			<test offset="6" type="string" comparator="=">\mac</test>
+		</match>
+		<match>
+			<mimetype>text/rtf</mimetype>
+			<extension>rtf</extension>
+			<description>IBM PC, code page 437</description>
+			<test offset="6" type="string" comparator="=">\pc</test>
+		</match>
+		<match>
+			<mimetype>text/rtf</mimetype>
+			<extension>rtf</extension>
+			<description>IBM PS/2, code page 850</description>
+			<test offset="6" type="string" comparator="=">\pca</test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>text/html</mimetype>
+	<extension>html</extension>
+	<description>HTML document text</description>
+	<test offset="0" type="string" comparator="=">&lt;!DOCTYPE HTML</test>
+</match>
+<match>
+	<mimetype>text/html</mimetype>
+	<extension>html</extension>
+	<description>HTML document text</description>
+	<test offset="0" type="string" comparator="=">&lt;!doctype html</test>
+</match>
+<match>
+	<mimetype>text/html</mimetype>
+	<extension>html</extension>
+	<description>HTML document text</description>
+	<test offset="0" type="string" comparator="=">&lt;HEAD</test>
+</match>
+<match>
+	<mimetype>text/html</mimetype>
+	<extension>html</extension>
+	<description>HTML document text</description>
+	<test offset="0" type="string" comparator="=">&lt;head</test>
+</match>
+<match>
+	<mimetype>text/html</mimetype>
+	<extension>html</extension>
+	<description>HTML document text</description>
+	<test offset="0" type="string" comparator="=">&lt;TITLE</test>
+</match>
+<match>
+	<mimetype>text/html</mimetype>
+	<extension>html</extension>
+	<description>HTML document text</description>
+	<test offset="0" type="string" comparator="=">&lt;title</test>
+</match>
+<match>
+	<mimetype>text/html</mimetype>
+	<extension>html</extension>
+	<description>HTML document text</description>
+	<test offset="0" type="string" comparator="=">&lt;html</test>
+</match>
+<match>
+	<mimetype>text/html</mimetype>
+	<extension>html</extension>
+	<description>HTML document text</description>
+	<test offset="0" type="string" comparator="=">&lt;HTML</test>
+</match>
+<match>
+	<mimetype>text/sgml</mimetype>
+	<extension>sgml</extension>
+	<description>exported SGML document text</description>
+	<test offset="0" type="string" comparator="=">&lt;!DOCTYPE</test>
+</match>
+<match>
+	<mimetype>text/sgml</mimetype>
+	<extension>sgml</extension>
+	<description>exported SGML document text</description>
+	<test offset="0" type="string" comparator="=">&lt;!doctype</test>
+</match>
+<match>
+	<mimetype>text/sgml</mimetype>
+	<extension>sgml</extension>
+	<description>exported SGML subdocument text</description>
+	<test offset="0" type="string" comparator="=">&lt;!SUBDOC</test>
+</match>
+<match>
+	<mimetype>text/sgml</mimetype>
+	<extension>sgml</extension>
+	<description>exported SGML subdocument text</description>
+	<test offset="0" type="string" comparator="=">&lt;!subdoc</test>
+</match>
+<match>
+	<mimetype>text/sgml</mimetype>
+	<extension>sgml</extension>
+	<description>exported SGML document text</description>
+	<test offset="0" type="string" comparator="=">&lt;!--</test>
+</match>
+<match>
+	<mimetype>???</mimetype>
+	<extension>???</extension>
+	<description>(Corel/WP)</description>
+	<test offset="1" type="string" comparator="=">WPC</test>
+	<match-list>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect macro</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect help file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect keyboard file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect document</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect dictionary</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect thesaurus</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect block</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect rectangular block</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect column block</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect printer data</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect printer data</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect driver resource data</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect hyphenation code</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect hyphenation data</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect macro resource data</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect hyphenation lex</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect wordlist</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect equation resource data</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect spell rules</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect dictionary rules</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect spell rules (Microlytics)</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect settings file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect 4.2 document</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect dialog file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect button bar</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Shell macro</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Shell definition</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Notebook macro</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Notebook help file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Notebook keyboard file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Notebook definition</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Calculator help file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Calendar help file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Calendar data file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Editor macro</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Editor help file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Editor keyboard file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Editor macro resource file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Macro editor macro</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Macro editor help file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Macro editor keyboard file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>PlanPerfect macro</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>PlanPerfect help file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>PlanPerfect keyboard file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>PlanPerfect worksheet</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>PlanPerfect printer definition</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>PlanPerfect graphic definition</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>PlanPerfect data</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>PlanPerfect temporary printer</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>PlanPerfect macro resource data</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Mail</description>
+			<test offset="8" type="byte" comparator="=">0xb</test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>help file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>distribution list</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>out box</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>in box</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>users archived mailbox</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>archived message database</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>archived attachments</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Printer temporary file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Scheduler help file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Scheduler in file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Scheduler out file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>GroupWise settings file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>GroupWise directory services</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>GroupWise settings file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Terminal resource data</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Terminal resource data</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Terminal resource data</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>GUI loadable text</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>graphics resource data</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>printer settings file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>port definition file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>print queue parameters</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>compressed file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Network service msg file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Network service msg file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>Async gateway login msg</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>GroupWise message file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>GroupWise admin domain database</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>GroupWise admin host database</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>GroupWise admin remote host database</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>GroupWise admin ADS deferment data file</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>IntelliTAG (SGML) compiled DTD</description>
+			<test offset="8" type="short" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect graphic image (1.0)</description>
+			<test offset="8" type="long" comparator="="></test>
+		</match>
+		<match>
+			<mimetype>???</mimetype>
+			<extension>???</extension>
+			<description>WordPerfect graphic image (2.0)</description>
+			<test offset="8" type="long" comparator="="></test>
+		</match>
+	</match-list>
+</match>
+<match>
+	<mimetype>text/x-java</mimetype>
+	<extension>java</extension>
+	<description>Java source file</description>
+	<test offset="0" type="regex" comparator="=">/^\s*package/</test>
+</match>
+<match>
+	<mimetype>text/x-perl</mimetype>
+	<extension>pl</extension>
+	<description>Perl source file</description>
+	<test offset="0" type="regex" comparator="=">/^#!\/usr\/bin\/perl/</test>
+</match>
+<match>
+	<mimetype>text/x-c</mimetype>
+	<extension>c</extension>
+	<description>C source file</description>
+	<test offset="0" type="regex" comparator="=">/^#include/m</test>
+</match>
+<match>
+	<mimetype>application/x-sh</mimetype>
+	<extension>.sh</extension>
+	<description>sh script</description>
+	<test offset="0" type="regex" comparator="=">/^#!\/bin\/sh/</test>
+</match>
+<match>
+	<mimetype>application/x-bash</mimetype>
+	<extension>.sh</extension>
+	<description>bash script</description>
+	<test offset="0" type="regex" comparator="=">/^#!\/bin\/bash/</test>
+</match>
+<match>
+	<mimetype>application/x-csh</mimetype>
+	<extension>.sh</extension>
+	<description>csh script</description>
+	<test offset="0" type="regex" comparator="=">/^#!\/bin\/csh/</test>
+</match>
+<match>
+	<mimetype>application/x-ksh</mimetype>
+	<extension>.sh</extension>
+	<description>ksh script</description>
+	<test offset="0" type="regex" comparator="=">/^#!\/bin\/ksh/</test>
+</match>
+<match>
+	<mimetype>text/html</mimetype>
+	<extension>.html</extension>
+	<description>HTML Document</description>
+	<test offset="0" type="regex" comparator="=">/^\s*&lt;!DOCTYPE HTML PUBLIC/</test>
+</match>
+<match>
+	<mimetype>text/html</mimetype>
+	<extension>.html</extension>
+	<description>HTML Document</description>
+	<test offset="0" type="regex" comparator="=">/^\s*&lt;html&gt;/</test>
+</match>
+<!-- 
+<match>
+	<mimetype>text/plain</mimetype>
+	<extension>.txt</extension>
+	<description>ASCII Text Document</description>
+	<test offset="0" type="regex" comparator="!">/[^[:ascii:][:space:]]/</test>
+</match>
+-->
+<match>
+	<mimetype>text/plain</mimetype>
+	<extension></extension>
+	<description>net.sf.jmimemagic.detectors.TextFileDetector</description>
+	<test type="detector" offset="0" length="" bitmask="" comparator="=">net.sf.jmimemagic.detectors.TextFileDetector</test>
+</match>
+</match-list>
+</magic>
diff -Nru old\magic_1_0.dtd new\magic_1_0.dtd
--- old\magic_1_0.dtd	Thu Jan 01 01:00:00 1970
+++ new\magic_1_0.dtd	Tue Nov 10 18:49:04 2009
@@ -0,0 +1,18 @@
+<!ELEMENT magic (info?,match-list)>
+<!ELEMENT info (version?,author?,description?)>
+<!ELEMENT version (#PCDATA)>
+<!ELEMENT author (#PCDATA)>
+<!ELEMENT description (#PCDATA)>
+<!ELEMENT match-list (match*)>
+<!ELEMENT match (mimetype,extension,description,test,submatch-list?)>
+<!ELEMENT extension (#PCDATA)>
+<!ELEMENT mimetype (#PCDATA)>
+<!ELEMENT description (#PCDATA)>
+<!ELEMENT test (#PCDATA)>
+<!ATTLIST test offset CDATA "0">
+<!ATTLIST test type CDATA "string">
+<!ATTLIST test bitmask CDATA "">
+<!ATTLIST test comparator CDATA "=">
+<!ELEMENT submatch-list (match+)>
+	       
+               
diff -Nru old\net\.svn\dir-wcprops new\net\.svn\dir-wcprops
--- old\net\.svn\dir-wcprops	Tue Sep 05 22:54:40 2006
+++ new\net\.svn\dir-wcprops	Thu Jan 01 01:00:00 1970
@@ -1,5 +0,0 @@
-K 25
-svn:wc:ra_dav:version-url
-V 49
-/svnroot/jmimemagic/!svn/ver/5/trunk/src/java/net
-END
diff -Nru old\net\.svn\entries new\net\.svn\entries
--- old\net\.svn\entries	Tue Sep 05 22:54:40 2006
+++ new\net\.svn\entries	Thu Jan 01 01:00:00 1970
@@ -1,16 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<wc-entries
-   xmlns="svn:">
-<entry
-   committed-rev="5"
-   name=""
-   committed-date="2006-09-06T05:38:42.573029Z"
-   url="https://svn.sourceforge.net/svnroot/jmimemagic/trunk/src/java/net"
-   last-author="arimus"
-   kind="dir"
-   uuid="e6599ef2-c01c-0410-b8c8-fa748ffdab45"
-   revision="5"/>
-<entry
-   name="sf"
-   kind="dir"/>
-</wc-entries>
diff -Nru old\net\.svn\format new\net\.svn\format
--- old\net\.svn\format	Tue Sep 05 21:18:04 2006
+++ new\net\.svn\format	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-4
diff -Nru old\net\.svn\README.txt new\net\.svn\README.txt
--- old\net\.svn\README.txt	Tue Sep 05 21:18:04 2006
+++ new\net\.svn\README.txt	Thu Jan 01 01:00:00 1970
@@ -1,2 +0,0 @@
-This is a Subversion working copy administrative directory.
-Visit http://subversion.tigris.org/ for more information.
diff -Nru old\net\sf\.svn\dir-wcprops new\net\sf\.svn\dir-wcprops
--- old\net\sf\.svn\dir-wcprops	Tue Sep 05 22:54:40 2006
+++ new\net\sf\.svn\dir-wcprops	Thu Jan 01 01:00:00 1970
@@ -1,5 +0,0 @@
-K 25
-svn:wc:ra_dav:version-url
-V 52
-/svnroot/jmimemagic/!svn/ver/5/trunk/src/java/net/sf
-END
diff -Nru old\net\sf\.svn\entries new\net\sf\.svn\entries
--- old\net\sf\.svn\entries	Tue Sep 05 22:54:40 2006
+++ new\net\sf\.svn\entries	Thu Jan 01 01:00:00 1970
@@ -1,16 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<wc-entries
-   xmlns="svn:">
-<entry
-   committed-rev="5"
-   name=""
-   committed-date="2006-09-06T05:38:42.573029Z"
-   url="https://svn.sourceforge.net/svnroot/jmimemagic/trunk/src/java/net/sf"
-   last-author="arimus"
-   kind="dir"
-   uuid="e6599ef2-c01c-0410-b8c8-fa748ffdab45"
-   revision="5"/>
-<entry
-   name="jmimemagic"
-   kind="dir"/>
-</wc-entries>
diff -Nru old\net\sf\.svn\format new\net\sf\.svn\format
--- old\net\sf\.svn\format	Tue Sep 05 21:18:04 2006
+++ new\net\sf\.svn\format	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-4
diff -Nru old\net\sf\.svn\README.txt new\net\sf\.svn\README.txt
--- old\net\sf\.svn\README.txt	Tue Sep 05 21:18:04 2006
+++ new\net\sf\.svn\README.txt	Thu Jan 01 01:00:00 1970
@@ -1,2 +0,0 @@
-This is a Subversion working copy administrative directory.
-Visit http://subversion.tigris.org/ for more information.
diff -Nru old\net\sf\jmimemagic\.svn\dir-wcprops new\net\sf\jmimemagic\.svn\dir-wcprops
--- old\net\sf\jmimemagic\.svn\dir-wcprops	Tue Sep 05 22:54:40 2006
+++ new\net\sf\jmimemagic\.svn\dir-wcprops	Thu Jan 01 01:00:00 1970
@@ -1,5 +0,0 @@
-K 25
-svn:wc:ra_dav:version-url
-V 63
-/svnroot/jmimemagic/!svn/ver/5/trunk/src/java/net/sf/jmimemagic
-END
diff -Nru old\net\sf\jmimemagic\.svn\entries new\net\sf\jmimemagic\.svn\entries
--- old\net\sf\jmimemagic\.svn\entries	Tue Sep 05 22:54:40 2006
+++ new\net\sf\jmimemagic\.svn\entries	Thu Jan 01 01:00:00 1970
@@ -1,97 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<wc-entries
-   xmlns="svn:">
-<entry
-   committed-rev="5"
-   name=""
-   committed-date="2006-09-06T05:38:42.573029Z"
-   url="https://svn.sourceforge.net/svnroot/jmimemagic/trunk/src/java/net/sf/jmimemagic"
-   last-author="arimus"
-   kind="dir"
-   uuid="e6599ef2-c01c-0410-b8c8-fa748ffdab45"
-   revision="5"/>
-<entry
-   committed-rev="5"
-   name="MagicException.java"
-   text-time="2006-09-06T05:10:59.000000Z"
-   committed-date="2006-09-06T05:38:42.573029Z"
-   checksum="a2f19e3e15ade380f0d3e28f4c41d0fc"
-   last-author="arimus"
-   kind="file"
-   prop-time="2006-09-06T04:18:04.000000Z"/>
-<entry
-   committed-rev="5"
-   name="Magic.java"
-   text-time="2006-09-06T05:09:06.000000Z"
-   committed-date="2006-09-06T05:38:42.573029Z"
-   checksum="cba74d420a924d6fb02d7f0d2bc4351d"
-   last-author="arimus"
-   kind="file"
-   prop-time="2006-09-06T04:18:04.000000Z"/>
-<entry
-   committed-rev="5"
-   name="MagicMatcher.java"
-   text-time="2006-09-06T05:17:00.000000Z"
-   committed-date="2006-09-06T05:38:42.573029Z"
-   checksum="457f02fb38345163adfa3c9bddedd115"
-   last-author="arimus"
-   kind="file"
-   prop-time="2006-09-06T04:18:04.000000Z"/>
-<entry
-   committed-rev="5"
-   name="MagicMatchNotFoundException.java"
-   text-time="2006-09-06T05:13:19.000000Z"
-   committed-date="2006-09-06T05:38:42.573029Z"
-   checksum="054da7f2a423f973b516edce200c5785"
-   last-author="arimus"
-   kind="file"
-   prop-time="2006-09-06T04:18:04.000000Z"/>
-<entry
-   committed-rev="5"
-   name="UnsupportedTypeException.java"
-   text-time="2006-09-06T05:14:47.000000Z"
-   committed-date="2006-09-06T05:38:42.573029Z"
-   checksum="89c1026ef3803b8745db497564dec48b"
-   last-author="arimus"
-   kind="file"
-   prop-time="2006-09-06T04:18:04.000000Z"/>
-<entry
-   committed-rev="5"
-   name="MagicDetector.java"
-   text-time="2006-09-06T05:10:51.000000Z"
-   committed-date="2006-09-06T05:38:42.573029Z"
-   checksum="4d029d34d84508210b2a369d101a16e2"
-   last-author="arimus"
-   kind="file"
-   prop-time="2006-09-06T04:18:04.000000Z"/>
-<entry
-   committed-rev="5"
-   name="MagicParseException.java"
-   text-time="2006-09-06T05:14:05.000000Z"
-   committed-date="2006-09-06T05:38:42.573029Z"
-   checksum="2ab4a1a2b0b937dc52c44a05a4cb9e35"
-   last-author="arimus"
-   kind="file"
-   prop-time="2006-09-06T04:18:04.000000Z"/>
-<entry
-   name="detectors"
-   kind="dir"/>
-<entry
-   committed-rev="5"
-   name="MagicMatch.java"
-   text-time="2006-09-06T05:15:51.000000Z"
-   committed-date="2006-09-06T05:38:42.573029Z"
-   checksum="e216f1693e256d18765316d47788d06e"
-   last-author="arimus"
-   kind="file"
-   prop-time="2006-09-06T04:18:04.000000Z"/>
-<entry
-   committed-rev="5"
-   name="MagicParser.java"
-   text-time="2006-09-06T05:17:45.000000Z"
-   committed-date="2006-09-06T05:38:42.573029Z"
-   checksum="f277ba676a4f796c87e0329528925207"
-   last-author="arimus"
-   kind="file"
-   prop-time="2006-09-06T04:18:04.000000Z"/>
-</wc-entries>
diff -Nru old\net\sf\jmimemagic\.svn\format new\net\sf\jmimemagic\.svn\format
--- old\net\sf\jmimemagic\.svn\format	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\format	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-4
diff -Nru old\net\sf\jmimemagic\.svn\prop-base\Magic.java.svn-base new\net\sf\jmimemagic\.svn\prop-base\Magic.java.svn-base
--- old\net\sf\jmimemagic\.svn\prop-base\Magic.java.svn-base	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\prop-base\Magic.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\.svn\prop-base\MagicDetector.java.svn-base new\net\sf\jmimemagic\.svn\prop-base\MagicDetector.java.svn-base
--- old\net\sf\jmimemagic\.svn\prop-base\MagicDetector.java.svn-base	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\prop-base\MagicDetector.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\.svn\prop-base\MagicException.java.svn-base new\net\sf\jmimemagic\.svn\prop-base\MagicException.java.svn-base
--- old\net\sf\jmimemagic\.svn\prop-base\MagicException.java.svn-base	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\prop-base\MagicException.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\.svn\prop-base\MagicMatch.java.svn-base new\net\sf\jmimemagic\.svn\prop-base\MagicMatch.java.svn-base
--- old\net\sf\jmimemagic\.svn\prop-base\MagicMatch.java.svn-base	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\prop-base\MagicMatch.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\.svn\prop-base\MagicMatcher.java.svn-base new\net\sf\jmimemagic\.svn\prop-base\MagicMatcher.java.svn-base
--- old\net\sf\jmimemagic\.svn\prop-base\MagicMatcher.java.svn-base	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\prop-base\MagicMatcher.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\.svn\prop-base\MagicMatchNotFoundException.java.svn-base new\net\sf\jmimemagic\.svn\prop-base\MagicMatchNotFoundException.java.svn-base
--- old\net\sf\jmimemagic\.svn\prop-base\MagicMatchNotFoundException.java.svn-base	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\prop-base\MagicMatchNotFoundException.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\.svn\prop-base\MagicParseException.java.svn-base new\net\sf\jmimemagic\.svn\prop-base\MagicParseException.java.svn-base
--- old\net\sf\jmimemagic\.svn\prop-base\MagicParseException.java.svn-base	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\prop-base\MagicParseException.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\.svn\prop-base\MagicParser.java.svn-base new\net\sf\jmimemagic\.svn\prop-base\MagicParser.java.svn-base
--- old\net\sf\jmimemagic\.svn\prop-base\MagicParser.java.svn-base	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\prop-base\MagicParser.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\.svn\prop-base\UnsupportedTypeException.java.svn-base new\net\sf\jmimemagic\.svn\prop-base\UnsupportedTypeException.java.svn-base
--- old\net\sf\jmimemagic\.svn\prop-base\UnsupportedTypeException.java.svn-base	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\prop-base\UnsupportedTypeException.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\.svn\props\Magic.java.svn-work new\net\sf\jmimemagic\.svn\props\Magic.java.svn-work
--- old\net\sf\jmimemagic\.svn\props\Magic.java.svn-work	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\props\Magic.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\.svn\props\MagicDetector.java.svn-work new\net\sf\jmimemagic\.svn\props\MagicDetector.java.svn-work
--- old\net\sf\jmimemagic\.svn\props\MagicDetector.java.svn-work	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\props\MagicDetector.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\.svn\props\MagicException.java.svn-work new\net\sf\jmimemagic\.svn\props\MagicException.java.svn-work
--- old\net\sf\jmimemagic\.svn\props\MagicException.java.svn-work	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\props\MagicException.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\.svn\props\MagicMatch.java.svn-work new\net\sf\jmimemagic\.svn\props\MagicMatch.java.svn-work
--- old\net\sf\jmimemagic\.svn\props\MagicMatch.java.svn-work	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\props\MagicMatch.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\.svn\props\MagicMatcher.java.svn-work new\net\sf\jmimemagic\.svn\props\MagicMatcher.java.svn-work
--- old\net\sf\jmimemagic\.svn\props\MagicMatcher.java.svn-work	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\props\MagicMatcher.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\.svn\props\MagicMatchNotFoundException.java.svn-work new\net\sf\jmimemagic\.svn\props\MagicMatchNotFoundException.java.svn-work
--- old\net\sf\jmimemagic\.svn\props\MagicMatchNotFoundException.java.svn-work	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\props\MagicMatchNotFoundException.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\.svn\props\MagicParseException.java.svn-work new\net\sf\jmimemagic\.svn\props\MagicParseException.java.svn-work
--- old\net\sf\jmimemagic\.svn\props\MagicParseException.java.svn-work	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\props\MagicParseException.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\.svn\props\MagicParser.java.svn-work new\net\sf\jmimemagic\.svn\props\MagicParser.java.svn-work
--- old\net\sf\jmimemagic\.svn\props\MagicParser.java.svn-work	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\props\MagicParser.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\.svn\props\UnsupportedTypeException.java.svn-work new\net\sf\jmimemagic\.svn\props\UnsupportedTypeException.java.svn-work
--- old\net\sf\jmimemagic\.svn\props\UnsupportedTypeException.java.svn-work	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\props\UnsupportedTypeException.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\.svn\README.txt new\net\sf\jmimemagic\.svn\README.txt
--- old\net\sf\jmimemagic\.svn\README.txt	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\.svn\README.txt	Thu Jan 01 01:00:00 1970
@@ -1,2 +0,0 @@
-This is a Subversion working copy administrative directory.
-Visit http://subversion.tigris.org/ for more information.
diff -Nru old\net\sf\jmimemagic\.svn\text-base\Magic.java.svn-base new\net\sf\jmimemagic\.svn\text-base\Magic.java.svn-base
--- old\net\sf\jmimemagic\.svn\text-base\Magic.java.svn-base	Tue Sep 05 22:38:46 2006
+++ new\net\sf\jmimemagic\.svn\text-base\Magic.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1,516 +0,0 @@
-/*
-jMimeMagic(TM) is a Java library for determining the content type of files or
-streams.
-
-Copyright (C) 2004 David Castro
-
-This library is free software; you can redistribute it and/or
-modify it under the terms of the GNU Lesser General Public
-License as published by the Free Software Foundation; either
-version 2.1 of the License, or (at your option) any later version.
-
-This library is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-Lesser General Public License for more details.
-
-You should have received a copy of the GNU Lesser General Public
-License along with this library; if not, write to the Free Software
-Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-
-For more information, please email arimus@users.sourceforge.net
-*/
-package net.sf.jmimemagic;
-
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-
-import java.io.File;
-import java.io.IOException;
-import java.io.PrintStream;
-
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.HashMap;
-import java.util.Iterator;
-
-
-/**
- * This class is the primary class for jMimeMagic
- *
- * @author $Author: arimus $
- * @version $Revision: 1.8 $
- */
-public class Magic
-{
-    private static Log log = LogFactory.getLog(Magic.class);
-    private static boolean initialized = false;
-    private static MagicParser magicParser = null;
-    private static HashMap hintMap = new HashMap();
-
-    /**
-     * constructor
-     */
-    public Magic()
-    {
-        log.debug("instantiated");
-    }
-
-    /**
-     * Add a hint to use the specified matcher for the given extension
-     * 
-     * @param extension DOCUMENT ME!
-     * @param matcher DOCUMENT ME!
-     */
-    private static void addHint(String extension, MagicMatcher matcher)
-    {
-        if (hintMap.keySet().contains(extension)) {
-            ArrayList a = (ArrayList) hintMap.get(extension);
-            a.add(matcher);
-        } else {
-            ArrayList a = new ArrayList();
-            a.add(matcher);
-            hintMap.put(extension, a);
-        }
-    }
-
-    /**
-     * create a parser and initialize it
-     *
-     * @throws MagicParseException DOCUMENT ME!
-     */
-    public static synchronized void initialize()
-        throws MagicParseException
-    {
-        log.debug("initialize()");
-
-        if (!initialized) {
-            log.debug("initializing");
-            magicParser = new MagicParser();
-            magicParser.initialize();
-
-            // build hint map
-            Iterator i = magicParser.getMatchers().iterator();
-
-            while (i.hasNext()) {
-                MagicMatcher matcher = (MagicMatcher) i.next();
-                String ext = matcher.getMatch().getExtension();
-
-                if ((ext != null) && !ext.trim().equals("")) {
-                    if (log.isDebugEnabled()) {
-                        log.debug("adding hint mapping for extension '" + ext + "'");
-                    }
-
-                    addHint(ext, matcher);
-                } else if (matcher.getMatch().getType().equals("detector")) {
-                    String[] exts = matcher.getDetectorExtensions();
-
-                    for (int j = 0; j < exts.length; j++) {
-                        if (log.isDebugEnabled()) {
-                            log.debug("adding hint mapping for extension '" + exts[j] + "'");
-                        }
-
-                        addHint(exts[j], matcher);
-                    }
-                }
-            }
-
-            initialized = true;
-        }
-    }
-
-    /**
-     * return the parsed MagicMatch objects that were created from the magic.xml
-     * definitions
-     *
-     * @return the parsed MagicMatch objects
-     *
-     * @throws MagicParseException DOCUMENT ME!
-     */
-    public static Collection getMatchers()
-        throws MagicParseException
-    {
-        log.debug("getMatchers()");
-
-        if (!initialized) {
-            initialize();
-        }
-
-        Iterator i = magicParser.getMatchers().iterator();
-        ArrayList m = new ArrayList();
-
-        while (i.hasNext()) {
-            MagicMatcher matcher = (MagicMatcher) i.next();
-
-            try {
-                m.add(matcher.clone());
-            } catch (CloneNotSupportedException e) {
-                log.error("failed to clone matchers");
-                throw new MagicParseException("failed to clone matchers");
-            }
-        }
-
-        return m;
-    }
-
-    /**
-     * get a match from a stream of data
-     *
-     * @param data DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     *
-     * @throws MagicParseException DOCUMENT ME!
-     * @throws MagicMatchNotFoundException DOCUMENT ME!
-     * @throws MagicException DOCUMENT ME!
-     */
-    public static MagicMatch getMagicMatch(byte[] data)
-        throws MagicParseException, MagicMatchNotFoundException, MagicException
-    {
-        return getMagicMatch(data, false);
-    }
-
-    /**
-     * get a match from a stream of data
-     *
-     * @param data DOCUMENT ME!
-     * @param onlyMimeMatch DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     *
-     * @throws MagicParseException DOCUMENT ME!
-     * @throws MagicMatchNotFoundException DOCUMENT ME!
-     * @throws MagicException DOCUMENT ME!
-     */
-    public static MagicMatch getMagicMatch(byte[] data, boolean onlyMimeMatch)
-        throws MagicParseException, MagicMatchNotFoundException, MagicException
-    {
-        log.debug("getMagicMatch(byte[])");
-
-        if (!initialized) {
-            initialize();
-        }
-
-        Collection matchers = magicParser.getMatchers();
-        log.debug("getMagicMatch(byte[]): have " + matchers.size() + " matchers");
-
-        MagicMatcher matcher = null;
-        MagicMatch match = null;
-        Iterator i = matchers.iterator();
-
-        while (i.hasNext()) {
-            matcher = (MagicMatcher) i.next();
-
-            log.debug("getMagicMatch(byte[]): trying to match: " +
-                matcher.getMatch().getMimeType());
-
-            try {
-                if ((match = matcher.test(data, onlyMimeMatch)) != null) {
-                    log.debug("getMagicMatch(byte[]): matched " + matcher.getMatch().getMimeType());
-
-                    return match;
-                }
-            } catch (IOException e) {
-                log.error("getMagicMatch(byte[]): " + e);
-                throw new MagicException(e);
-            } catch (UnsupportedTypeException e) {
-                log.error("getMagicMatch(byte[]): " + e);
-                throw new MagicException(e);
-            }
-        }
-
-        throw new MagicMatchNotFoundException();
-    }
-
-    /**
-     * get a match from a file
-     *
-     * @param file the file to match content in
-     * @param extensionHints whether or not to use extension to optimize order of content tests
-     *
-     * @return the MagicMatch object representing a match in the file
-     *
-     * @throws MagicParseException DOCUMENT ME!
-     * @throws MagicMatchNotFoundException DOCUMENT ME!
-     * @throws MagicException DOCUMENT ME!
-     */
-    public static MagicMatch getMagicMatch(File file, boolean extensionHints)
-        throws MagicParseException, MagicMatchNotFoundException, MagicException
-    {
-        return getMagicMatch(file, extensionHints, false);
-    }
-
-    /**
-     * get a match from a file
-     *
-     * @param file the file to match content in
-     * @param extensionHints whether or not to use extension to optimize order of content tests
-     * @param onlyMimeMatch only try to get mime type, no submatches are processed when true
-     *
-     * @return the MagicMatch object representing a match in the file
-     *
-     * @throws MagicParseException DOCUMENT ME!
-     * @throws MagicMatchNotFoundException DOCUMENT ME!
-     * @throws MagicException DOCUMENT ME!
-     */
-    public static MagicMatch getMagicMatch(File file, boolean extensionHints, boolean onlyMimeMatch)
-        throws MagicParseException, MagicMatchNotFoundException, MagicException
-    {
-        log.debug("getMagicMatch(File)");
-
-        if (!initialized) {
-            initialize();
-        }
-
-        long start = System.currentTimeMillis();
-
-        MagicMatcher matcher = null;
-        MagicMatch match = null;
-
-        // check for extension hints
-        ArrayList checked = new ArrayList();
-
-        if (extensionHints) {
-            log.debug("trying to use hints first");
-
-            String name = file.getName();
-            int pos = name.lastIndexOf('.');
-
-            if (pos > -1) {
-                String ext = name.substring(pos + 1, name.length());
-
-                if ((ext != null) && !ext.equals("")) {
-                    if (log.isDebugEnabled()) {
-                        log.debug("using extension '" + ext + "' for hinting");
-                    }
-
-                    Collection c = (Collection) hintMap.get(ext);
-
-                    if (c != null) {
-                        Iterator i = c.iterator();
-
-                        while (i.hasNext()) {
-                            matcher = (MagicMatcher) i.next();
-
-                            log.debug("getMagicMatch(File): trying to match: " +
-                                matcher.getMatch().getDescription());
-
-                            try {
-                                if ((match = matcher.test(file, onlyMimeMatch)) != null) {
-                                    log.debug("getMagicMatch(File): matched " +
-                                        matcher.getMatch().getDescription());
-
-                                    if (log.isDebugEnabled()) {
-                                        long end = System.currentTimeMillis();
-                                        log.debug("found match in '" + (end - start) +
-                                            "' milliseconds");
-                                    }
-
-                                    return match;
-                                }
-                            } catch (UnsupportedTypeException e) {
-                                log.error("getMagicMatch(File): " + e);
-                                throw new MagicException(e);
-                            } catch (IOException e) {
-                                log.error("getMagicMatch(File): " + e);
-                                throw new MagicException(e);
-                            }
-
-                            // add to the already checked list
-                            checked.add(matcher);
-                        }
-                    }
-                } else {
-                    log.debug("no file extension, ignoring hints");
-                }
-            } else {
-                log.debug("no file extension, ignoring hints");
-            }
-        }
-
-        Collection matchers = magicParser.getMatchers();
-        log.debug("getMagicMatch(File): have " + matchers.size() + " matches");
-
-        Iterator i = matchers.iterator();
-
-        while (i.hasNext()) {
-            matcher = (MagicMatcher) i.next();
-
-            if (!checked.contains(matcher)) {
-                log.debug("getMagicMatch(File): trying to match: " +
-                    matcher.getMatch().getDescription());
-
-                try {
-                    if ((match = matcher.test(file, onlyMimeMatch)) != null) {
-                        log.debug("getMagicMatch(File): matched " +
-                            matcher.getMatch().getDescription());
-
-                        if (log.isDebugEnabled()) {
-                            long end = System.currentTimeMillis();
-                            log.debug("found match in '" + (end - start) + "' milliseconds");
-                        }
-
-                        return match;
-                    }
-                } catch (UnsupportedTypeException e) {
-                    log.error("getMagicMatch(File): " + e);
-                    throw new MagicException(e);
-                } catch (IOException e) {
-                    log.error("getMagicMatch(File): " + e);
-                    throw new MagicException(e);
-                }
-            } else {
-                log.debug("getMagicMatch(File): already checked, skipping: " +
-                    matcher.getMatch().getDescription());
-            }
-        }
-
-        throw new MagicMatchNotFoundException();
-    }
-
-    /**
-     * print the contents of a magic file
-     *
-     * @param stream DOCUMENT ME!
-     *
-     * @throws MagicParseException DOCUMENT ME!
-     */
-    public static void printMagicFile(PrintStream stream)
-        throws MagicParseException
-    {
-        if (!initialized) {
-            initialize();
-        }
-
-        Collection matchers = Magic.getMatchers();
-        log.debug("have " + matchers.size() + " matches");
-
-        MagicMatcher matcher = null;
-        Iterator i = matchers.iterator();
-
-        while (i.hasNext()) {
-            matcher = (MagicMatcher) i.next();
-            log.debug("printing");
-            printMagicMatcher(stream, matcher, "");
-        }
-    }
-
-    /**
-     * print a magic match
-     *
-     * @param stream DOCUMENT ME!
-     * @param matcher DOCUMENT ME!
-     * @param spacing DOCUMENT ME!
-     */
-    private static void printMagicMatcher(PrintStream stream, MagicMatcher matcher, String spacing)
-    {
-        stream.println(spacing + "name: " + matcher.getMatch().getDescription());
-        stream.println(spacing + "children: ");
-
-        Collection matchers = matcher.getSubMatchers();
-        Iterator i = matchers.iterator();
-
-        while (i.hasNext()) {
-            printMagicMatcher(stream, (MagicMatcher) i.next(), spacing + "  ");
-        }
-    }
-
-    /**
-     * print a magic match
-     *
-     * @param stream DOCUMENT ME!
-     * @param match DOCUMENT ME!
-     * @param spacing DOCUMENT ME!
-     */
-    public static void printMagicMatch(PrintStream stream, MagicMatch match, String spacing)
-    {
-        stream.println(spacing + "=============================");
-        stream.println(spacing + "mime type: " + match.getMimeType());
-        stream.println(spacing + "description: " + match.getDescription());
-        stream.println(spacing + "extension: " + match.getExtension());
-        stream.println(spacing + "test: " + new String(match.getTest().array()));
-        stream.println(spacing + "bitmask: " + match.getBitmask());
-        stream.println(spacing + "offset: " + match.getOffset());
-        stream.println(spacing + "length: " + match.getLength());
-        stream.println(spacing + "type: " + match.getType());
-        stream.println(spacing + "comparator: " + match.getComparator());
-        stream.println(spacing + "=============================");
-
-        Collection submatches = match.getSubMatches();
-        Iterator i = submatches.iterator();
-
-        while (i.hasNext()) {
-            printMagicMatch(stream, (MagicMatch) i.next(), spacing + "    ");
-        }
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @param args DOCUMENT ME!
-     */
-    public static void main(String[] args)
-    {
-        //		Magic magic = new Magic();
-        try {
-            //Magic.initialize();
-            File f = new File(args[0]);
-
-            if (f.exists()) {
-                MagicMatch match = Magic.getMagicMatch(f, true, false);
-
-                System.out.println("filename: " + args[0]);
-                printMagicMatch(System.out, match, "");
-
-                //				Collection submatches = match.getSubMatches();
-                //				if (match == null) {
-                //					System.out.println(args[0]+": unknown");
-                //				} else {
-                //					System.out.println("=============================");
-                //					System.out.println("filename: "+args[0]);
-                //					System.out.println("mime type: "+match.getMimeType());
-                //					System.out.println("description: "+match.getDescription());
-                //					System.out.println("extension: "+match.getExtension());
-                //					System.out.println("test: "+new String(match.getTest().array()));
-                //					System.out.println("bitmask: "+match.getBitmask());
-                //					System.out.println("offset: "+match.getOffset());
-                //					System.out.println("length: "+match.getLength());
-                //					System.out.println("type: "+match.getType());
-                //					System.out.println("comparator: "+match.getComparator());
-                //					System.out.println("=============================");
-                //
-                //					Iterator i = submatches.iterator();
-                //					while (i.hasNext()) {
-                //						System.out.println("== SUBMATCH =================");
-                //						MagicMatch m = (MagicMatch)i.next();
-                //						System.out.println(m.print());
-                //						System.out.println("=============================");
-                //					}
-                //				}
-
-                //				FileInputStream fis = new FileInputStream(f);
-                //				ByteBuffer buffer = ByteBuffer.allocate((int)f.length());
-                //				byte []buf = new byte[2048];
-                //				int size = 0;
-                //				while ((size = fis.read(buf, 0, 2048)) > 0) {
-                //					buffer.put(buf, 0, size);
-                //				}
-                //				byte []tmp = buffer.array();
-                //				match = parser.getMagicMatch(tmp);
-                //				if (match == null) {
-                //					System.out.println(args[0]+": unknown");
-                //				} else {
-                //					System.out.println(args[0]+": "+match.getDescription());
-                //					System.out.println(match.getMimeType());
-                //				}
-            } else {
-                System.err.println("file '" + f.getCanonicalPath() + "' not found");
-            }
-        } catch (MagicMatchNotFoundException e) {
-            System.out.println("no match found");
-        } catch (Exception e) {
-            System.err.println("error: " + e);
-            e.printStackTrace(System.err);
-        }
-    }
-}
diff -Nru old\net\sf\jmimemagic\.svn\text-base\MagicDetector.java.svn-base new\net\sf\jmimemagic\.svn\text-base\MagicDetector.java.svn-base
--- old\net\sf\jmimemagic\.svn\text-base\MagicDetector.java.svn-base	Tue Sep 05 22:38:46 2006
+++ new\net\sf\jmimemagic\.svn\text-base\MagicDetector.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1,111 +0,0 @@
-/*
-jMimeMagic(TM) is a Java library for determining the content type of files or
-streams.
-
-Copyright (C) 2004 David Castro
-
-This library is free software; you can redistribute it and/or
-modify it under the terms of the GNU Lesser General Public
-License as published by the Free Software Foundation; either
-version 2.1 of the License, or (at your option) any later version.
-
-This library is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-Lesser General Public License for more details.
-
-You should have received a copy of the GNU Lesser General Public
-License along with this library; if not, write to the Free Software
-Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-
-For more information, please email arimus@users.sourceforge.net
-*/
-package net.sf.jmimemagic;
-
-import java.io.File;
-
-import java.util.Map;
-
-
-/**
- * DOCUMENT ME!
- *
- * @author $Author$
- * @version $Revision$
-  */
-public interface MagicDetector
-{
-    // get the short name of this detector
-    /**
-     * DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     */
-    public String getName();
-
-    // get the display name of this detector
-    /**
-     * DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     */
-    public String getDisplayName();
-
-    // get the version of this plugin
-    /**
-     * DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     */
-    public String getVersion();
-
-    // get a list of types this detector handles
-    /**
-     * DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     */
-    public String[] getHandledTypes();
-
-    // get a list of file extensions this detector typically deals with
-    /**
-     * DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     */
-    public String[] getHandledExtensions();
-
-    // process the stream and return all matching content types
-    /**
-     * DOCUMENT ME!
-     *
-     * @param data DOCUMENT ME!
-     * @param offset DOCUMENT ME!
-     * @param length DOCUMENT ME!
-     * @param bitmask DOCUMENT ME!
-     * @param comparator DOCUMENT ME!
-     * @param mimeType DOCUMENT ME!
-     * @param params DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     */
-    public String[] process(byte[] data, int offset, int length, long bitmask, char comparator,
-        String mimeType, Map params);
-
-    // process the file and return all matching content types
-    /**
-     * DOCUMENT ME!
-     *
-     * @param file DOCUMENT ME!
-     * @param offset DOCUMENT ME!
-     * @param length DOCUMENT ME!
-     * @param bitmask DOCUMENT ME!
-     * @param comparator DOCUMENT ME!
-     * @param mimeType DOCUMENT ME!
-     * @param params DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     */
-    public String[] process(File file, int offset, int length, long bitmask, char comparator,
-        String mimeType, Map params);
-}
diff -Nru old\net\sf\jmimemagic\.svn\text-base\MagicException.java.svn-base new\net\sf\jmimemagic\.svn\text-base\MagicException.java.svn-base
--- old\net\sf\jmimemagic\.svn\text-base\MagicException.java.svn-base	Tue Sep 05 22:38:46 2006
+++ new\net\sf\jmimemagic\.svn\text-base\MagicException.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1,72 +0,0 @@
-/*
-jMimeMagic(TM) is a Java library for determining the content type of files or
-streams.
-
-Copyright (C) 2004 David Castro
-
-This library is free software; you can redistribute it and/or
-modify it under the terms of the GNU Lesser General Public
-License as published by the Free Software Foundation; either
-version 2.1 of the License, or (at your option) any later version.
-
-This library is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-Lesser General Public License for more details.
-
-You should have received a copy of the GNU Lesser General Public
-License along with this library; if not, write to the Free Software
-Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-
-For more information, please email arimus@users.sourceforge.net
-*/
-package net.sf.jmimemagic;
-
-/**
- * Basic JMimeMagic parse exception. This is simply a holder to identify a parsing problem. It
- * should be extended to identify more specific issues.
- *
- * @author $Author: arimus $
- * @version $Revision: 1.1 $
- */
-public class MagicException extends Exception
-{
-/**
-         * Default constructor
-         */
-    public MagicException()
-    {
-        super();
-    }
-
-/**
-         * Create exception with error message
-         * 
-         * @param message The error message for this exception
-         */
-    public MagicException(String message)
-    {
-        super(message);
-    }
-
-/**
-         * Create exception based on an existing Throwable
-         * 
-         * @param cause The throwable on which we'll base this exception
-         */
-    public MagicException(Throwable cause)
-    {
-        super(cause);
-    }
-
-/**
-         * Create an exception with custom message and throwable info
-         * 
-         * @param message The message
-         * @param cause The target Throwable
-         */
-    public MagicException(String message, Throwable cause)
-    {
-        super(message, cause);
-    }
-}
diff -Nru old\net\sf\jmimemagic\.svn\text-base\MagicMatch.java.svn-base new\net\sf\jmimemagic\.svn\text-base\MagicMatch.java.svn-base
--- old\net\sf\jmimemagic\.svn\text-base\MagicMatch.java.svn-base	Tue Sep 05 22:38:46 2006
+++ new\net\sf\jmimemagic\.svn\text-base\MagicMatch.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1,423 +0,0 @@
-/*
-jMimeMagic(TM) is a Java library for determining the content type of files or
-streams.
-
-Copyright (C) 2004 David Castro
-
-This library is free software; you can redistribute it and/or
-modify it under the terms of the GNU Lesser General Public
-License as published by the Free Software Foundation; either
-version 2.1 of the License, or (at your option) any later version.
-
-This library is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-Lesser General Public License for more details.
-
-You should have received a copy of the GNU Lesser General Public
-License along with this library; if not, write to the Free Software
-Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-
-For more information, please email arimus@users.sourceforge.net
-*/
-package net.sf.jmimemagic;
-
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-
-import java.nio.ByteBuffer;
-
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.HashMap;
-import java.util.Iterator;
-import java.util.Map;
-
-
-/**
- * This class represents a single match test
- *
- * @author $Author: arimus $
- * @version $Revision: 1.10 $
- */
-public class MagicMatch implements Cloneable
-{
-    private static Log log = LogFactory.getLog(MagicMatch.class);
-    private String mimeType = null;
-    private String extension = null;
-    private String description = null;
-    private ByteBuffer test = null;
-    private int offset = 0;
-    private int length = 0;
-
-    // possible types:
-    //     byte, short, long, string, date, beshort, belong, bedate, leshort,
-    //     lelong, ledate, regex
-    private String type = "";
-    private long bitmask = 0xFFFFFFFFL;
-    private char comparator = '\0';
-    private ArrayList subMatches = new ArrayList(0);
-    private Map properties;
-
-    /** 
-     * constructor 
-     */
-    public MagicMatch()
-    {
-        log.debug("instantiated");
-    }
-
-    /**
-     * print information about this match
-     *
-     * @return DOCUMENT ME!
-     */
-    public String print()
-    {
-        StringBuffer string = new StringBuffer();
-        string.append("\n");
-        string.append("mime type: ").append(mimeType).append("\n");
-        string.append("description: ").append(description).append("\n");
-        string.append("extension: ").append(extension).append("\n");
-        string.append("offset: ").append(offset).append("\n");
-        string.append("length: ").append(length).append("\n");
-        string.append("test: ").append(new String(test.array())).append("\n");
-        string.append("type: ").append(type).append("\n");
-        string.append("comparator: ").append(comparator).append("\n");
-        string.append("bitmask: ").append(bitmask);
-
-        return string.toString();
-    }
-
-    /**
-     * set the mime type for this magic match
-     *
-     * @param value DOCUMENT ME!
-     */
-    public void setMimeType(String value)
-    {
-        mimeType = value;
-    }
-
-    /**
-     * get the magic match for this magic match
-     *
-     * @return the mime type for this magic match
-     */
-    public String getMimeType()
-    {
-        return mimeType;
-    }
-
-    /**
-     * set the extension for this magic match
-     *
-     * @param value DOCUMENT ME!
-     */
-    public void setExtension(String value)
-    {
-        extension = value;
-    }
-
-    /**
-     * get the extension for this magic match
-     *
-     * @return the extension for this magic match
-     */
-    public String getExtension()
-    {
-        return extension;
-    }
-
-    /**
-     * set the description for this magic match
-     *
-     * @param value DOCUMENT ME!
-     */
-    public void setDescription(String value)
-    {
-        description = value;
-    }
-
-    /**
-     * get the description for this magic match
-     *
-     * @return the description for thie magic match
-     */
-    public String getDescription()
-    {
-        return description;
-    }
-
-    /**
-     * set the test value for thie magic match
-     *
-     * @param value DOCUMENT ME!
-     */
-    public void setTest(ByteBuffer value)
-    {
-        test = value;
-    }
-
-    /**
-     * get the test value for this magic match
-     *
-     * @return DOCUMENT ME!
-     */
-    public ByteBuffer getTest()
-    {
-        return test;
-    }
-
-    /**
-     * set the offset in the stream we are comparing to the test value for this magic match
-     *
-     * @param value DOCUMENT ME!
-     */
-    public void setOffset(int value)
-    {
-        this.offset = value;
-    }
-
-    /**
-     * get the offset in the stream we are comparing to the test value for this magic match
-     *
-     * @return the offset for this magic match
-     */
-    public int getOffset()
-    {
-        return offset;
-    }
-
-    /**
-     * set the length we are restricting the comparison to for this magic match
-     *
-     * @param value DOCUMENT ME!
-     */
-    public void setLength(int value)
-    {
-        this.length = value;
-    }
-
-    /**
-     * get the length we are restricting the comparison to for this magic match
-     *
-     * @return DOCUMENT ME!
-     */
-    public int getLength()
-    {
-        return length;
-    }
-
-    /**
-     * set the type of match to perform for this magic match
-     *
-     * @param value DOCUMENT ME!
-     */
-    public void setType(String value)
-    {
-        this.type = value;
-    }
-
-    /**
-     * get the type of match for this magic match
-     *
-     * @return DOCUMENT ME!
-     */
-    public String getType()
-    {
-        return type;
-    }
-
-    /**
-     * set the bitmask that will be applied for this magic match
-     *
-     * @param value DOCUMENT ME!
-     */
-    public void setBitmask(String value)
-    {
-        if (value != null) {
-            this.bitmask = Long.decode(value).intValue();
-        }
-    }
-
-    /**
-     * get the bitmask that will be applied for this magic match
-     *
-     * @return the bitmask for this magic match
-     */
-    public long getBitmask()
-    {
-        return bitmask;
-    }
-
-    /**
-     * set the comparator for this magic match
-     *
-     * @param value DOCUMENT ME!
-     */
-    public void setComparator(String value)
-    {
-        this.comparator = value.charAt(0);
-    }
-
-    /**
-     * get the comparator for this magic match
-     *
-     * @return the comparator for this magic match
-     */
-    public char getComparator()
-    {
-        return comparator;
-    }
-
-    /**
-     * set the properties for this magic match
-     *
-     * @param properties DOCUMENT ME!
-     */
-    public void setProperties(Map properties)
-    {
-        this.properties = properties;
-    }
-
-    /**
-     * get the properties for this magic match
-     *
-     * @return the properties for this magic match
-     */
-    public Map getProperties()
-    {
-        return properties;
-    }
-
-    /**
-     * add a submatch to this magic match
-     *
-     * @param m a magic match
-     */
-    public void addSubMatch(MagicMatch m)
-    {
-        log.debug("adding submatch '" + m.getDescription() + "' to '" + getDescription() + "'");
-        subMatches.add(m);
-    }
-
-    /**
-     * set all submatches
-     *
-     * @param a a collection of submatches
-     */
-    public void setSubMatches(Collection a)
-    {
-        log.debug("setting submatches for '" + getDescription() + "'");
-        subMatches.clear();
-        subMatches.addAll(a);
-    }
-
-    /**
-     * get all submatches for this magic match
-     *
-     * @return a collection of submatches
-     */
-    public Collection getSubMatches()
-    {
-        return subMatches;
-    }
-
-    /**
-     * determine if this match or any submatches has the description
-     *
-     * @param desc DOCUMENT ME!
-     *
-     * @return whether or not the description matches
-     */
-    public boolean descriptionMatches(String desc)
-    {
-        if ((description != null) && description.equals(desc)) {
-            return true;
-        }
-
-        Collection submatches = getSubMatches();
-        Iterator i = submatches.iterator();
-        MagicMatch m = null;
-
-        while (i.hasNext()) {
-            m = (MagicMatch) i.next();
-
-            if (m.descriptionMatches(desc)) {
-                return true;
-            }
-        }
-
-        return false;
-    }
-
-    /**
-     * determine if this match or any submatches has the description
-     *
-     * @param desc DOCUMENT ME!
-     *
-     * @return whether or not the description matches
-     */
-    public boolean mimeTypeMatches(String desc)
-    {
-        if ((mimeType != null) && mimeType.equals(desc)) {
-            return true;
-        }
-
-        Collection submatches = getSubMatches();
-        Iterator i = submatches.iterator();
-        MagicMatch m = null;
-
-        while (i.hasNext()) {
-            m = (MagicMatch) i.next();
-
-            if (m.mimeTypeMatches(desc)) {
-                return true;
-            }
-        }
-
-        return false;
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     *
-     * @throws CloneNotSupportedException DOCUMENT ME!
-     */
-    protected Object clone()
-        throws CloneNotSupportedException
-    {
-        MagicMatch clone = new MagicMatch();
-        clone.setBitmask(Long.toString(bitmask, 8));
-        clone.setComparator("" + comparator);
-        clone.setDescription(description);
-        clone.setExtension(extension);
-        clone.setLength(length);
-        clone.setMimeType(mimeType);
-        clone.setOffset(offset);
-
-        // these properties should only be String types, so we shouldn't have to clone them
-        HashMap m = new HashMap();
-        m.putAll(properties);
-        clone.setProperties(m);
-
-        Iterator i = subMatches.iterator();
-        ArrayList a = new ArrayList();
-
-        while (i.hasNext()) {
-            MagicMatch mm = (MagicMatch) i.next();
-            a.add(mm);
-        }
-
-        clone.setSubMatches(a);
-
-        clone.setTest(test);
-        clone.setType(type);
-
-        // TODO Auto-generated method stub
-        return clone;
-    }
-}
diff -Nru old\net\sf\jmimemagic\.svn\text-base\MagicMatcher.java.svn-base new\net\sf\jmimemagic\.svn\text-base\MagicMatcher.java.svn-base
--- old\net\sf\jmimemagic\.svn\text-base\MagicMatcher.java.svn-base	Tue Sep 05 22:38:46 2006
+++ new\net\sf\jmimemagic\.svn\text-base\MagicMatcher.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1,816 +0,0 @@
-/*
-jMimeMagic(TM) is a Java library for determining the content type of files or
-streams.
-
-Copyright (C) 2004 David Castro
-
-This library is free software; you can redistribute it and/or
-modify it under the terms of the GNU Lesser General Public
-License as published by the Free Software Foundation; either
-version 2.1 of the License, or (at your option) any later version.
-
-This library is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-Lesser General Public License for more details.
-
-You should have received a copy of the GNU Lesser General Public
-License along with this library; if not, write to the Free Software
-Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-
-For more information, please email arimus@users.sourceforge.net
-*/
-package net.sf.jmimemagic;
-
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.apache.oro.text.perl.Perl5Util;
-
-import java.io.File;
-import java.io.IOException;
-import java.io.RandomAccessFile;
-
-import java.nio.ByteBuffer;
-import java.nio.ByteOrder;
-
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.Iterator;
-
-
-/**
- * This class represents a single match test
- *
- * @author $Author: arimus $
- * @version $Revision: 1.1 $
- */
-public class MagicMatcher implements Cloneable
-{
-    private static Log log = LogFactory.getLog(MagicMatcher.class);
-    private ArrayList subMatchers = new ArrayList(0);
-    private MagicMatch match = null;
-
-    /** 
-     * constructor 
-     */
-    public MagicMatcher()
-    {
-        log.debug("instantiated");
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @param match DOCUMENT ME!
-     */
-    public void setMatch(MagicMatch match)
-    {
-        log.debug("setMatch()");
-        this.match = match;
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     */
-    public MagicMatch getMatch()
-    {
-        log.debug("getMatch()");
-
-        return this.match;
-    }
-
-    /**
-     * test to see if everything is in order for this match
-     *
-     * @return whether or not this match has enough data to be valid
-     */
-    public boolean isValid()
-    {
-        log.debug("isValid()");
-
-        if ((match == null) || (match.getTest() == null)) {
-            return false;
-        }
-
-        String type = new String(match.getTest().array());
-        char comparator = match.getComparator();
-        String description = match.getDescription();
-        String test = new String(match.getTest().array());
-
-        if ((type != null) && !type.equals("") && (comparator != '\0') &&
-                ((comparator == '=') || (comparator == '!') || (comparator == '>') ||
-                (comparator == '<')) && (description != null) && !description.equals("") &&
-                (test != null) && !test.equals("")) {
-            return true;
-        }
-
-        return false;
-    }
-
-    /**
-     * add a submatch to this magic match
-     *
-     * @param m a magic match
-     */
-    public void addSubMatcher(MagicMatcher m)
-    {
-        log.debug("addSubMatcher()");
-        subMatchers.add(m);
-    }
-
-    /**
-     * set all submatches
-     *
-     * @param a a collection of submatches
-     */
-    public void setSubMatchers(Collection a)
-    {
-        log.debug("setSubMatchers(): for match '" + match.getDescription() + "'");
-        subMatchers.clear();
-        subMatchers.addAll(a);
-    }
-
-    /**
-     * get all submatches for this magic match
-     *
-     * @return a collection of submatches
-     */
-    public Collection getSubMatchers()
-    {
-        log.debug("getSubMatchers()");
-
-        return subMatchers;
-    }
-
-    /**
-     * test to see if this match or any submatches match
-     *
-     * @param f the file that should be used to test the match
-     * @param onlyMimeMatch DOCUMENT ME!
-     *
-     * @return the deepest magic match object that matched
-     *
-     * @throws IOException DOCUMENT ME!
-     * @throws UnsupportedTypeException DOCUMENT ME!
-     */
-    public MagicMatch test(File f, boolean onlyMimeMatch)
-        throws IOException, UnsupportedTypeException
-    {
-        log.debug("test(File)");
-
-        int offset = match.getOffset();
-        String description = match.getDescription();
-        String type = match.getType();
-        String mimeType = match.getMimeType();
-
-        log.debug("test(File): testing '" + f.getName() + "' for '" + description + "'");
-
-        log.debug("test(File): \n=== BEGIN MATCH INFO ==");
-        log.debug(match.print());
-        log.debug("test(File): \n=== END MATCH INFO ====\n");
-
-        RandomAccessFile file = null;
-        file = new RandomAccessFile(f, "r");
-
-        try {
-            int length = 0;
-
-            if (type.equals("byte")) {
-                length = 1;
-            } else if (type.equals("short") || type.equals("leshort") || type.equals("beshort")) {
-                length = 4;
-            } else if (type.equals("long") || type.equals("lelong") || type.equals("belong")) {
-                length = 8;
-            } else if (type.equals("string")) {
-                length = match.getTest().capacity();
-            } else if (type.equals("regex")) {
-                length = (int) file.length() - offset;
-
-                if (length < 0) {
-                    length = 0;
-                }
-            } else if (type.equals("detector")) {
-                length = (int) file.length() - offset;
-
-                if (length < 0) {
-                    length = 0;
-                }
-            } else {
-                throw new UnsupportedTypeException("unsupported test type '" + type + "'");
-            }
-
-            // we know this match won't work since there isn't enough data for the test
-            if (length > (file.length() - offset)) {
-                return null;
-            }
-
-            byte[] buf = new byte[length];
-            file.seek(offset);
-
-            int bytesRead = 0;
-            int size = 0;
-            boolean gotAllBytes = false;
-            boolean done = false;
-
-            while (!done) {
-                size = file.read(buf, 0, length - bytesRead);
-
-                if (size == -1) {
-                    throw new IOException("reached end of file before all bytes were read");
-                }
-
-                bytesRead += size;
-
-                if (bytesRead == length) {
-                    gotAllBytes = true;
-                    done = true;
-                }
-            }
-
-            log.debug("test(File): stream size is '" + buf.length + "'");
-
-            MagicMatch match = null;
-            MagicMatch submatch = null;
-
-            if (testInternal(buf)) {
-                // set the top level match to this one
-                match = getMatch();
-
-                log.debug("test(File): testing matched '" + description + "'");
-
-                // set the data on this match
-                if ((onlyMimeMatch == false) && (subMatchers != null) && (subMatchers.size() > 0)) {
-                    log.debug("test(File): testing " + subMatchers.size() + " submatches for '" +
-                        description + "'");
-
-                    for (int i = 0; i < subMatchers.size(); i++) {
-                        log.debug("test(File): testing submatch " + i);
-
-                        MagicMatcher m = (MagicMatcher) subMatchers.get(i);
-
-                        if ((submatch = m.test(f, false)) != null) {
-                            log.debug("test(File): submatch " + i + " matched with '" +
-                                submatch.getDescription() + "'");
-                            match.addSubMatch(submatch);
-                        } else {
-                            log.debug("test(File): submatch " + i + " doesn't match");
-                        }
-                    }
-                }
-            }
-
-            return match;
-        } finally {
-            try {
-                file.close();
-            } catch (Exception fce) {
-            }
-        }
-    }
-
-    /**
-     * test to see if this match or any submatches match
-     *
-     * @param data the data that should be used to test the match
-     * @param onlyMimeMatch DOCUMENT ME!
-     *
-     * @return the deepest magic match object that matched
-     *
-     * @throws IOException DOCUMENT ME!
-     * @throws UnsupportedTypeException DOCUMENT ME!
-     */
-    public MagicMatch test(byte[] data, boolean onlyMimeMatch)
-        throws IOException, UnsupportedTypeException
-    {
-        log.debug("test(byte[])");
-
-        int offset = match.getOffset();
-        String description = match.getDescription();
-        String type = match.getType();
-        String test = new String(match.getTest().array());
-        String mimeType = match.getMimeType();
-
-        log.debug("test(byte[]): testing byte[] data for '" + description + "'");
-
-        log.debug("test(byte[]): \n=== BEGIN MATCH INFO ==");
-        log.debug(match.print());
-        log.debug("test(byte[]): \n=== END MATCH INFO ====\n");
-
-        int length = 0;
-
-        if (type.equals("byte")) {
-            length = 1;
-        } else if (type.equals("short") || type.equals("leshort") || type.equals("beshort")) {
-            length = 4;
-        } else if (type.equals("long") || type.equals("lelong") || type.equals("belong")) {
-            length = 8;
-        } else if (type.equals("string")) {
-            length = match.getTest().capacity();
-        } else if (type.equals("regex")) {
-            // FIXME - something wrong here, shouldn't have to subtract 1???
-            length = data.length - offset - 1;
-
-            if (length < 0) {
-                length = 0;
-            }
-        } else if (type.equals("detector")) {
-            // FIXME - something wrong here, shouldn't have to subtract 1???
-            length = data.length - offset - 1;
-
-            if (length < 0) {
-                length = 0;
-            }
-        } else {
-            throw new UnsupportedTypeException("unsupported test type " + type);
-        }
-
-        byte[] buf = new byte[length];
-        log.debug("test(byte[]): offset=" + offset + ",length=" + length + ",data length=" +
-            data.length);
-
-        if ((offset + length) < data.length) {
-            System.arraycopy(data, offset, buf, 0, length);
-
-            log.debug("test(byte[]): stream size is '" + buf.length + "'");
-
-            MagicMatch match = null;
-            MagicMatch submatch = null;
-
-            if (testInternal(buf)) {
-                // set the top level match to this one
-                match = getMatch();
-
-                log.debug("test(byte[]): testing matched '" + description + "'");
-
-                // set the data on this match
-                if ((onlyMimeMatch == false) && (subMatchers != null) && (subMatchers.size() > 0)) {
-                    log.debug("test(byte[]): testing " + subMatchers.size() + " submatches for '" +
-                        description + "'");
-
-                    for (int i = 0; i < subMatchers.size(); i++) {
-                        log.debug("test(byte[]): testing submatch " + i);
-
-                        MagicMatcher m = (MagicMatcher) subMatchers.get(i);
-
-                        if ((submatch = m.test(data, false)) != null) {
-                            log.debug("test(byte[]): submatch " + i + " matched with '" +
-                                submatch.getDescription() + "'");
-                            match.addSubMatch(submatch);
-                        } else {
-                            log.debug("test(byte[]): submatch " + i + " doesn't match");
-                        }
-                    }
-                }
-            }
-
-            return match;
-        } else {
-            return null;
-        }
-    }
-
-    /**
-     * internal test switch
-     * 
-     * @param data DOCUMENT ME!
-     * @return DOCUMENT ME!
-     */
-    private boolean testInternal(byte[] data)
-    {
-        log.debug("testInternal(byte[])");
-
-        if (data.length == 0) {
-            return false;
-        }
-
-        String type = match.getType();
-        String test = new String(match.getTest().array());
-        String mimeType = match.getMimeType();
-        String description = match.getDescription();
-
-        ByteBuffer buffer = ByteBuffer.allocate(data.length);
-
-        if ((type != null) && (test != null) && (test.length() > 0)) {
-            if (type.equals("string")) {
-                buffer = buffer.put(data);
-
-                return testString(buffer);
-            } else if (type.equals("byte")) {
-                buffer = buffer.put(data);
-
-                return testByte(buffer);
-            } else if (type.equals("short")) {
-                buffer = buffer.put(data);
-
-                return testShort(buffer);
-            } else if (type.equals("leshort")) {
-                buffer = buffer.put(data);
-                buffer.order(ByteOrder.LITTLE_ENDIAN);
-
-                return testShort(buffer);
-            } else if (type.equals("beshort")) {
-                buffer = buffer.put(data);
-                buffer.order(ByteOrder.BIG_ENDIAN);
-
-                return testShort(buffer);
-            } else if (type.equals("long")) {
-                buffer = buffer.put(data);
-
-                return testLong(buffer);
-            } else if (type.equals("lelong")) {
-                buffer = buffer.put(data);
-                buffer.order(ByteOrder.LITTLE_ENDIAN);
-
-                return testLong(buffer);
-            } else if (type.equals("belong")) {
-                buffer = buffer.put(data);
-                buffer.order(ByteOrder.BIG_ENDIAN);
-
-                return testLong(buffer);
-            } else if (type.equals("regex")) {
-                return testRegex(new String(data));
-            } else if (type.equals("detector")) {
-                buffer = buffer.put(data);
-
-                return testDetector(buffer);
-
-                //			} else if (type.equals("date")) {
-                //				return testDate(data, BIG_ENDIAN);
-                //			} else if (type.equals("ledate")) {
-                //				return testDate(data, LITTLE_ENDIAN);
-                //			} else if (type.equals("bedate")) {
-                //				return testDate(data, BIG_ENDIAN);
-            } else {
-                log.error("testInternal(byte[]): invalid test type '" + type + "'");
-            }
-        } else {
-            log.error("testInternal(byte[]): type or test is empty for '" + mimeType + " - " +
-                description + "'");
-        }
-
-        return false;
-    }
-
-    /**
-     * test the data against the test byte
-     *
-     * @param data the data we are testing
-     *
-     * @return if we have a match
-     */
-    private boolean testByte(ByteBuffer data)
-    {
-        log.debug("testByte()");
-
-        String test = new String(match.getTest().array());
-        char comparator = match.getComparator();
-        long bitmask = match.getBitmask();
-
-        String s = test;
-        byte b = data.get(0);
-        b = (byte) (b & bitmask);
-        log.debug("testByte(): decoding '" + test + "' to byte");
-
-        int tst = Integer.decode(test).byteValue();
-        byte t = (byte) (tst & 0xff);
-        log.debug("testByte(): applying bitmask '" + bitmask + "' to '" + tst + "', result is '" +
-            t + "'");
-        log.debug("testByte(): comparing byte '" + b + "' to '" + t + "'");
-
-        switch (comparator) {
-        case '=':
-            return t == b;
-
-        case '!':
-            return t != b;
-
-        case '>':
-            return t > b;
-
-        case '<':
-            return t < b;
-        }
-
-        return false;
-    }
-
-    /**
-     * test the data against the byte array
-     *
-     * @param data the data we are testing
-     *
-     * @return if we have a match
-     */
-    private boolean testString(ByteBuffer data)
-    {
-        log.debug("testString()");
-
-        ByteBuffer test = match.getTest();
-        char comparator = match.getComparator();
-
-        byte[] b = data.array();
-        byte[] t = test.array();
-
-        boolean diff = false;
-        int i = 0;
-
-        for (i = 0; i < t.length; i++) {
-            log.debug("testing byte '" + b[i] + "' from '" + new String(data.array()) +
-                "' against byte '" + t[i] + "' from '" + new String(test.array()) + "'");
-
-            if (t[i] != b[i]) {
-                diff = true;
-
-                break;
-            }
-        }
-
-        switch (comparator) {
-        case '=':
-            return !diff;
-
-        case '!':
-            return diff;
-
-        case '>':
-            return t[i] > b[i];
-
-        case '<':
-            return t[i] < b[i];
-        }
-
-        return false;
-    }
-
-    /**
-     * test the data against a short
-     *
-     * @param data the data we are testing
-     *
-     * @return if we have a match
-     */
-    private boolean testShort(ByteBuffer data)
-    {
-        log.debug("testShort()");
-
-        short val = 0;
-        String test = new String(match.getTest().array());
-        char comparator = match.getComparator();
-        long bitmask = match.getBitmask();
-
-        val = byteArrayToShort(data);
-
-        // apply bitmask before the comparison
-        val = (short) (val & (short) bitmask);
-
-        short tst = 0;
-
-        try {
-            tst = Integer.decode(test).shortValue();
-        } catch (NumberFormatException e) {
-            log.error("testShort(): " + e);
-
-            return false;
-
-            //if (test.length() == 1) {	
-            //	tst = new Integer(Character.getNumericValue(test.charAt(0))).shortValue();
-            //}
-        }
-
-        log.debug("testShort(): testing '" + Long.toHexString(val) + "' against '" +
-            Long.toHexString(tst) + "'");
-
-        switch (comparator) {
-        case '=':
-            return val == tst;
-
-        case '!':
-            return val != tst;
-
-        case '>':
-            return val > tst;
-
-        case '<':
-            return val < tst;
-        }
-
-        return false;
-    }
-
-    /**
-     * test the data against a long
-     *
-     * @param data the data we are testing
-     *
-     * @return if we have a match
-     */
-    private boolean testLong(ByteBuffer data)
-    {
-        log.debug("testLong()");
-
-        long val = 0;
-        String test = new String(match.getTest().array());
-        char comparator = match.getComparator();
-        long bitmask = match.getBitmask();
-
-        val = byteArrayToLong(data);
-
-        // apply bitmask before the comparison
-        val = val & bitmask;
-
-        long tst = Long.decode(test).longValue();
-
-        log.debug("testLong(): testing '" + Long.toHexString(val) + "' against '" + test +
-            "' => '" + Long.toHexString(tst) + "'");
-
-        switch (comparator) {
-        case '=':
-            return val == tst;
-
-        case '!':
-            return val != tst;
-
-        case '>':
-            return val > tst;
-
-        case '<':
-            return val < tst;
-        }
-
-        return false;
-    }
-
-    /**
-     * test the data against a regex
-     *
-     * @param text the data we are testing
-     *
-     * @return if we have a match
-     */
-    private boolean testRegex(String text)
-    {
-        log.debug("testRegex()");
-
-        String test = new String(match.getTest().array());
-        char comparator = match.getComparator();
-
-        Perl5Util utility = new Perl5Util();
-        log.debug("testRegex(): searching for '" + test + "'");
-
-        if (comparator == '=') {
-            if (utility.match(test, text)) {
-                return true;
-            } else {
-                return false;
-            }
-        } else if (comparator == '!') {
-            if (utility.match(test, text)) {
-                return false;
-            } else {
-                return true;
-            }
-        }
-
-        return false;
-    }
-
-    /**
-     * test the data using a detector
-     *
-     * @param data the data we are testing
-     *
-     * @return if we have a match
-     */
-    private boolean testDetector(ByteBuffer data)
-    {
-        log.debug("testDetector()");
-
-        String detectorClass = new String(match.getTest().array());
-
-        try {
-            log.debug("loading class: " + detectorClass);
-
-            Class c = Class.forName(detectorClass);
-            MagicDetector detector = (MagicDetector) c.newInstance();
-            String[] types = detector.process(data.array(), match.getOffset(), match.getLength(),
-                    match.getBitmask(), match.getComparator(), match.getMimeType(),
-                    match.getProperties());
-
-            if ((types != null) && (types.length > 0)) {
-                // the match object has no mime type set, so set from the detector class processing
-                match.setMimeType(types[0]);
-
-                return true;
-            }
-        } catch (ClassNotFoundException e) {
-            log.error("failed to load detector: " + detectorClass, e);
-        } catch (InstantiationException e) {
-            log.error("specified class is not a valid detector class: " + detectorClass, e);
-        } catch (IllegalAccessException e) {
-            log.error("specified class cannot be accessed: " + detectorClass, e);
-        }
-
-        return false;
-    }
-
-    /**
-     * Get the extensions for the underlying detectory
-     *
-     * @return DOCUMENT ME!
-     */
-    public String[] getDetectorExtensions()
-    {
-        log.debug("testDetector()");
-
-        String detectorClass = new String(match.getTest().array());
-
-        try {
-            log.debug("loading class: " + detectorClass);
-
-            Class c = Class.forName(detectorClass);
-            MagicDetector detector = (MagicDetector) c.newInstance();
-
-            return detector.getHandledTypes();
-        } catch (ClassNotFoundException e) {
-            log.error("failed to load detector: " + detectorClass, e);
-        } catch (InstantiationException e) {
-            log.error("specified class is not a valid detector class: " + detectorClass, e);
-        } catch (IllegalAccessException e) {
-            log.error("specified class cannot be accessed: " + detectorClass, e);
-        }
-
-        return new String[0];
-    }
-
-    /**
-     * encode a byte as an octal string
-     *
-     * @param b a byte of data
-     *
-     * @return an octal representation of the byte data
-     */
-    private String byteToOctalString(byte b)
-    {
-        int n1;
-        int n2;
-        int n3;
-        n1 = (b / 32) & 7;
-        n2 = (b / 8) & 7;
-        n3 = b & 7;
-
-        return String.valueOf(n1) + String.valueOf(n2) + String.valueOf(n3);
-    }
-
-    /**
-     * convert a byte array to a short
-     *
-     * @param data buffer of byte data
-     *
-     * @return byte array converted to a short
-     */
-    private short byteArrayToShort(ByteBuffer data)
-    {
-        return data.getShort(0);
-    }
-
-    /**
-     * convert a byte array to a long
-     *
-     * @param data buffer of byte data
-     *
-     * @return byte arrays (high and low bytes) converted to a long value
-     */
-    private long byteArrayToLong(ByteBuffer data)
-    {
-        return (long) data.getInt(0);
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     *
-     * @throws CloneNotSupportedException DOCUMENT ME!
-     */
-    protected Object clone()
-        throws CloneNotSupportedException
-    {
-        MagicMatcher clone = new MagicMatcher();
-
-        clone.setMatch((MagicMatch) match.clone());
-
-        Iterator i = subMatchers.iterator();
-        ArrayList sub = new ArrayList();
-
-        while (i.hasNext()) {
-            MagicMatcher m = (MagicMatcher) i.next();
-            sub.add(m.clone());
-        }
-
-        clone.setSubMatchers(sub);
-
-        return clone;
-    }
-}
diff -Nru old\net\sf\jmimemagic\.svn\text-base\MagicMatchNotFoundException.java.svn-base new\net\sf\jmimemagic\.svn\text-base\MagicMatchNotFoundException.java.svn-base
--- old\net\sf\jmimemagic\.svn\text-base\MagicMatchNotFoundException.java.svn-base	Tue Sep 05 22:38:46 2006
+++ new\net\sf\jmimemagic\.svn\text-base\MagicMatchNotFoundException.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1,72 +0,0 @@
-/*
-jMimeMagic(TM) is a Java library for determining the content type of files or
-streams.
-
-Copyright (C) 2004 David Castro
-
-This library is free software; you can redistribute it and/or
-modify it under the terms of the GNU Lesser General Public
-License as published by the Free Software Foundation; either
-version 2.1 of the License, or (at your option) any later version.
-
-This library is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-Lesser General Public License for more details.
-
-You should have received a copy of the GNU Lesser General Public
-License along with this library; if not, write to the Free Software
-Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-
-For more information, please email arimus@users.sourceforge.net
-*/
-package net.sf.jmimemagic;
-
-/**
- * Basic JMimeMagic parse exception. This is simply a holder to identify a parsing problem. It
- * should be extended to identify more specific issues.
- *
- * @author $Author: arimus $
- * @version $Revision: 1.1 $
- */
-public class MagicMatchNotFoundException extends Exception
-{
-    /** 
-     * constructor 
-     */
-    public MagicMatchNotFoundException()
-    {
-        super();
-    }
-
-    /**
-     * Create exception with error message
-     * 
-     * @param message The error message for this exception
-     */
-    public MagicMatchNotFoundException(String message)
-    {
-        super(message);
-    }
-
-    /**
-     * Create exception based on an existing Throwable
-     * 
-     * @param cause The throwable on which we'll base this exception
-     */
-    public MagicMatchNotFoundException(Throwable cause)
-    {
-        super(cause);
-    }
-
-    /**
-     * Create an exception with custom message and throwable info
-     * 
-     * @param message The message
-     * @param cause The target Throwable
-     */
-    public MagicMatchNotFoundException(String message, Throwable cause)
-    {
-        super(message, cause);
-    }
-}
diff -Nru old\net\sf\jmimemagic\.svn\text-base\MagicParseException.java.svn-base new\net\sf\jmimemagic\.svn\text-base\MagicParseException.java.svn-base
--- old\net\sf\jmimemagic\.svn\text-base\MagicParseException.java.svn-base	Tue Sep 05 22:38:46 2006
+++ new\net\sf\jmimemagic\.svn\text-base\MagicParseException.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1,72 +0,0 @@
-/*
-jMimeMagic(TM) is a Java library for determining the content type of files or
-streams.
-
-Copyright (C) 2004 David Castro
-
-This library is free software; you can redistribute it and/or
-modify it under the terms of the GNU Lesser General Public
-License as published by the Free Software Foundation; either
-version 2.1 of the License, or (at your option) any later version.
-
-This library is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-Lesser General Public License for more details.
-
-You should have received a copy of the GNU Lesser General Public
-License along with this library; if not, write to the Free Software
-Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-
-For more information, please email arimus@users.sourceforge.net
-*/
-package net.sf.jmimemagic;
-
-/**
- * Basic JMimeMagic parse exception. This is simply a holder to identify a parsing problem. It
- * should be extended to identify more specific issues.
- *
- * @author $Author: arimus $
- * @version $Revision: 1.1 $
- */
-public class MagicParseException extends Exception
-{
-    /**
-     * Default constructor
-     */
-    public MagicParseException()
-    {
-        super();
-    }
-
-    /**
-     * Create exception with error message
-     * 
-     * @param message The error message for this exception
-     */
-    public MagicParseException(String message)
-    {
-        super(message);
-    }
-
-    /**
-     * Create exception based on an existing Throwable
-     * 
-     * @param cause The throwable on which we'll base this exception
-     */
-    public MagicParseException(Throwable cause)
-    {
-        super(cause);
-    }
-
-    /**
-     * Create an exception with custom message and throwable info
-     * 
-     * @param message The message
-     * @param cause The target Throwable
-     */
-    public MagicParseException(String message, Throwable cause)
-    {
-        super(message, cause);
-    }
-}
diff -Nru old\net\sf\jmimemagic\.svn\text-base\MagicParser.java.svn-base new\net\sf\jmimemagic\.svn\text-base\MagicParser.java.svn-base
--- old\net\sf\jmimemagic\.svn\text-base\MagicParser.java.svn-base	Tue Sep 05 22:38:46 2006
+++ new\net\sf\jmimemagic\.svn\text-base\MagicParser.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1,586 +0,0 @@
-/*
-jMimeMagic(TM) is a Java library for determining the content type of files or
-streams.
-
-Copyright (C) 2004 David Castro
-
-This library is free software; you can redistribute it and/or
-modify it under the terms of the GNU Lesser General Public
-License as published by the Free Software Foundation; either
-version 2.1 of the License, or (at your option) any later version.
-
-This library is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-Lesser General Public License for more details.
-
-You should have received a copy of the GNU Lesser General Public
-License along with this library; if not, write to the Free Software
-Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-
-For more information, please email arimus@users.sourceforge.net
-*/
-package net.sf.jmimemagic;
-
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-
-import org.xml.sax.Attributes;
-import org.xml.sax.ContentHandler;
-import org.xml.sax.ErrorHandler;
-import org.xml.sax.SAXException;
-import org.xml.sax.SAXNotRecognizedException;
-import org.xml.sax.SAXNotSupportedException;
-import org.xml.sax.SAXParseException;
-import org.xml.sax.XMLReader;
-import org.xml.sax.helpers.DefaultHandler;
-import org.xml.sax.helpers.XMLReaderFactory;
-
-import java.io.ByteArrayOutputStream;
-
-import java.nio.ByteBuffer;
-
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.HashMap;
-
-
-/**
- * DOCUMENT ME!
- *
- * @author $Author$
- * @version $Revision$
-  */
-public class MagicParser extends DefaultHandler implements ContentHandler, ErrorHandler
-{
-    private static String magicFile = "/magic.xml";
-    private static Log log = LogFactory.getLog(MagicParser.class);
-
-    // Namespaces feature id (http://xml.org/sax/features/namespaces).
-    protected static final String NAMESPACES_FEATURE_ID = "http://xml.org/sax/features/namespaces";
-
-    // Validation feature id (http://xml.org/sax/features/validation). 
-    protected static final String VALIDATION_FEATURE_ID = "http://xml.org/sax/features/validation";
-
-    // Schema validation feature id (http://apache.org/xml/features/validation/schema). 
-    protected static final String SCHEMA_VALIDATION_FEATURE_ID = "http://apache.org/xml/features/validation/schema";
-
-    // Schema full checking feature id (http://apache.org/xml/features/validation/schema-full-checking). 
-    protected static final String SCHEMA_FULL_CHECKING_FEATURE_ID = "http://apache.org/xml/features/validation/schema-full-checking";
-
-    // Default parser name. 
-    protected static final String DEFAULT_PARSER_NAME = "org.apache.xerces.parsers.SAXParser";
-
-    // Default namespaces support (true). 
-    protected static final boolean DEFAULT_NAMESPACES = true;
-
-    // Default validation support (false). 
-    protected static final boolean DEFAULT_VALIDATION = false;
-
-    // Default Schema validation support (false). 
-    protected static final boolean DEFAULT_SCHEMA_VALIDATION = false;
-
-    // Default Schema full checking support (false). 
-    protected static final boolean DEFAULT_SCHEMA_FULL_CHECKING = false;
-    private boolean initialized = false;
-    private XMLReader parser = null;
-    private ArrayList stack = new ArrayList();
-    private Collection matchers = new ArrayList();
-    private MagicMatcher matcher = null;
-    private MagicMatch match = null;
-    private HashMap properties = null;
-    private String finalValue = "";
-    private boolean isMimeType = false;
-    private boolean isExtension = false;
-    private boolean isDescription = false;
-    private boolean isTest = false;
-
-    /** 
-     * constructor 
-     */
-    public MagicParser()
-    {
-        log.debug("instantiated");
-    }
-
-    /**
-     * parse the xml file and create our MagicMatcher object list
-     *
-     * @throws MagicParseException DOCUMENT ME!
-     */
-    public synchronized void initialize()
-        throws MagicParseException
-    {
-        boolean namespaces = DEFAULT_NAMESPACES;
-        boolean validation = DEFAULT_VALIDATION;
-        boolean schemaValidation = DEFAULT_SCHEMA_VALIDATION;
-        boolean schemaFullChecking = DEFAULT_SCHEMA_FULL_CHECKING;
-
-        if (!initialized) {
-            // use default parser
-            try {
-                parser = XMLReaderFactory.createXMLReader();
-            } catch (Exception e) {
-                try {
-                    log.debug("falling back to default parser: " + DEFAULT_PARSER_NAME);
-                    parser = XMLReaderFactory.createXMLReader(DEFAULT_PARSER_NAME);
-                } catch (Exception ee) {
-                    throw new MagicParseException("unable to instantiate parser");
-                }
-            }
-
-            // set parser features
-            try {
-                parser.setFeature(NAMESPACES_FEATURE_ID, namespaces);
-            } catch (SAXException e) {
-                log.debug("initialize(): warning: Parser does not support feature (" +
-                    NAMESPACES_FEATURE_ID + ")");
-            }
-
-            try {
-                parser.setFeature(VALIDATION_FEATURE_ID, validation);
-            } catch (SAXException e) {
-                log.debug("initialize(): warning: Parser does not support feature (" +
-                    VALIDATION_FEATURE_ID + ")");
-            }
-
-            try {
-                parser.setFeature(SCHEMA_VALIDATION_FEATURE_ID, schemaValidation);
-            } catch (SAXNotRecognizedException e) {
-                // ignore
-            } catch (SAXNotSupportedException e) {
-                log.debug("initialize(): warning: Parser does not support feature (" +
-                    SCHEMA_VALIDATION_FEATURE_ID + ")");
-            }
-
-            try {
-                parser.setFeature(SCHEMA_FULL_CHECKING_FEATURE_ID, schemaFullChecking);
-            } catch (SAXNotRecognizedException e) {
-                // ignore
-            } catch (SAXNotSupportedException e) {
-                log.debug("initialize(): warning: Parser does not support feature (" +
-                    SCHEMA_FULL_CHECKING_FEATURE_ID + ")");
-            }
-
-            // set handlers
-            parser.setErrorHandler(this);
-            parser.setContentHandler(this);
-
-            // parse file
-            try {
-                // get the magic file URL
-                String magicURL = MagicParser.class.getResource(magicFile).toString();
-
-                if (magicURL == null) {
-                    log.error("initialize(): couldn't load '" + magicURL + "'");
-                    throw new MagicParseException("couldn't load '" + magicURL + "'");
-                }
-
-                parser.parse(magicURL);
-            } catch (SAXParseException e) {
-                // ignore
-            } catch (Exception e) {
-                e.printStackTrace();
-                throw new MagicParseException("parse error occurred - " + e.getMessage());
-            }
-
-            initialized = true;
-        }
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     */
-    public Collection getMatchers()
-    {
-        return matchers;
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @throws SAXException DOCUMENT ME!
-     */
-    public void startDocument()
-        throws SAXException
-    {
-        log.debug("startDocument()");
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @throws SAXException DOCUMENT ME!
-     */
-    public void endDocument()
-        throws SAXException
-    {
-        log.debug("endDocument()");
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @param target DOCUMENT ME!
-     * @param data DOCUMENT ME!
-     *
-     * @throws SAXException DOCUMENT ME!
-     */
-    public void processingInstruction(String target, String data)
-        throws SAXException
-    {
-        // do nothing
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @param ch DOCUMENT ME!
-     * @param offset DOCUMENT ME!
-     * @param length DOCUMENT ME!
-     *
-     * @throws SAXException DOCUMENT ME!
-     */
-    public void characters(char[] ch, int offset, int length)
-        throws SAXException
-    {
-        String value = new String(ch, offset, length);
-        log.debug("characters(): value is '" + value + "'");
-
-        finalValue += value;
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @param ch DOCUMENT ME!
-     * @param offset DOCUMENT ME!
-     * @param length DOCUMENT ME!
-     *
-     * @throws SAXException DOCUMENT ME!
-     */
-    public void ignorableWhitespace(char[] ch, int offset, int length)
-        throws SAXException
-    {
-        // do nothing
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @param uri DOCUMENT ME!
-     * @param localName DOCUMENT ME!
-     * @param qname DOCUMENT ME!
-     * @param attributes DOCUMENT ME!
-     *
-     * @throws SAXException DOCUMENT ME!
-     */
-    public void startElement(String uri, String localName, String qname, Attributes attributes)
-        throws SAXException
-    {
-        log.debug("startElement()");
-        log.debug("startElement(): localName is '" + localName + "'");
-
-        // create a new matcher
-        if (localName.equals("match")) {
-            log.debug("startElement(): creating new matcher");
-            // match to hold data
-            match = new MagicMatch();
-            // our matcher
-            matcher = new MagicMatcher();
-            matcher.setMatch(match);
-        }
-
-        // these are subelements of matcher, but also occur elsewhere
-        if (matcher != null) {
-            if (localName.equals("mimetype")) {
-                isMimeType = true;
-            } else if (localName.equals("extension")) {
-                isExtension = true;
-            } else if (localName.equals("description")) {
-                isDescription = true;
-            } else if (localName.equals("test")) {
-                isTest = true;
-
-                int length = attributes.getLength();
-
-                for (int i = 0; i < length; i++) {
-                    String attrLocalName = attributes.getLocalName(i);
-                    String attrValue = attributes.getValue(i);
-
-                    if (attrLocalName.equals("offset")) {
-                        if (!attrValue.equals("")) {
-                            match.setOffset(new Integer(attrValue).intValue());
-                            log.debug("startElement():   setting offset to '" + attrValue + "'");
-                        }
-                    } else if (attrLocalName.equals("length")) {
-                        if (!attrValue.equals("")) {
-                            match.setLength(new Integer(attrValue).intValue());
-                            log.debug("startElement():   setting length to '" + attrValue + "'");
-                        }
-                    } else if (attrLocalName.equals("type")) {
-                        match.setType(attrValue);
-                        log.debug("startElement():   setting type to '" + attrValue + "'");
-                    } else if (attrLocalName.equals("bitmask")) {
-                        if (!attrValue.equals("")) {
-                            match.setBitmask(attrValue);
-                            log.debug("startElement():   setting bitmask to '" + attrValue + "'");
-                        }
-                    } else if (attrLocalName.equals("comparator")) {
-                        match.setComparator(attrValue);
-                        log.debug("startElement():   setting comparator to '" + attrValue + "'");
-                    }
-                }
-            } else if (localName.equals("property")) {
-                int length = attributes.getLength();
-                String name = null;
-                String value = null;
-
-                for (int i = 0; i < length; i++) {
-                    String attrLocalName = attributes.getLocalName(i);
-                    String attrValue = attributes.getValue(i);
-
-                    if (attrLocalName.equals("name")) {
-                        if (!attrValue.equals("")) {
-                            name = attrValue;
-                        }
-                    } else if (attrLocalName.equals("value")) {
-                        if (!attrValue.equals("")) {
-                            value = attrValue;
-                        }
-                    }
-                }
-
-                // save the property to our map
-                if ((name != null) && (value != null)) {
-                    if (properties == null) {
-                        properties = new HashMap();
-                    }
-
-                    if (!properties.containsKey(name)) {
-                        properties.put(name, value);
-                        log.debug("startElement():   setting property '" + name + "'='" + value +
-                            "'");
-                    } else {
-                        log.debug("startElement():   not setting property '" + name +
-                            "', duplicate key");
-                    }
-                }
-            } else if (localName.equals("match-list")) {
-                log.debug("startElement(): found submatcher list");
-
-                // this means we are processing a child match, so we need to push
-                // the existing match on the stack
-                log.debug("startElement(): pushing current matcher to stack");
-                stack.add(matcher);
-            } else {
-                // we don't care about this type
-            }
-        }
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @param uri DOCUMENT ME!
-     * @param localName DOCUMENT ME!
-     * @param qname DOCUMENT ME!
-     *
-     * @throws SAXException DOCUMENT ME!
-     */
-    public void endElement(String uri, String localName, String qname)
-        throws SAXException
-    {
-        log.debug("endElement()");
-        log.debug("endElement(): localName is '" + localName + "'");
-
-        // determine which tag these chars are for and save them
-        if (isMimeType) {
-            isMimeType = false;
-            match.setMimeType(finalValue);
-            log.debug("characters(): setting mimetype to '" + finalValue + "'");
-        } else if (isExtension) {
-            isExtension = false;
-            match.setExtension(finalValue);
-            log.debug("characters(): setting extension to '" + finalValue + "'");
-        } else if (isDescription) {
-            isDescription = false;
-            match.setDescription(finalValue);
-            log.debug("characters(): setting description to '" + finalValue + "'");
-        } else if (isTest) {
-            isTest = false;
-            match.setTest(convertOctals(finalValue));
-            log.debug("characters(): setting test to '" + convertOctals(finalValue) + "'");
-        } else {
-            // do nothing
-        }
-
-        finalValue = "";
-
-        // need to save the current matcher here if it is filled out enough and
-        // we have an /matcher
-        if (localName.equals("match")) {
-            // FIXME - make sure the MagicMatcher isValid() test works
-            if (matcher.isValid()) {
-                // set the collected properties on this matcher
-                match.setProperties(properties);
-
-                // add root match
-                if (stack.size() == 0) {
-                    log.debug("endElement(): adding root matcher");
-                    matchers.add(matcher);
-                } else {
-                    // we need to add the match to it's parent which is on the
-                    // stack
-                    log.debug("endElement(): adding sub matcher");
-
-                    MagicMatcher m = (MagicMatcher) stack.get(stack.size() - 1);
-                    m.addSubMatcher(matcher);
-                }
-            } else {
-                // don't add invalid matchers
-                log.info("endElement(): not adding invalid matcher '" + match.getDescription() +
-                    "'");
-            }
-
-            matcher = null;
-            properties = null;
-
-            // restore matcher from the stack if we have an /matcher-list
-        } else if (localName.equals("match-list")) {
-            if (stack.size() > 0) {
-                log.debug("endElement(): popping from the stack");
-                matcher = (MagicMatcher) stack.get(stack.size() - 1);
-                // pop from the stack
-                stack.remove(matcher);
-            }
-        } else if (localName.equals("mimetype")) {
-            isMimeType = false;
-        } else if (localName.equals("extension")) {
-            isExtension = false;
-        } else if (localName.equals("description")) {
-            isDescription = false;
-        } else if (localName.equals("test")) {
-            isTest = false;
-        }
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @param ex DOCUMENT ME!
-     *
-     * @throws SAXException DOCUMENT ME!
-     */
-    public void warning(SAXParseException ex)
-        throws SAXException
-    {
-        // FIXME
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @param ex DOCUMENT ME!
-     *
-     * @throws SAXException DOCUMENT ME!
-     */
-    public void error(SAXParseException ex)
-        throws SAXException
-    {
-        // FIXME
-        throw ex;
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @param ex DOCUMENT ME!
-     *
-     * @throws SAXException DOCUMENT ME!
-     */
-    public void fatalError(SAXParseException ex)
-        throws SAXException
-    {
-        // FIXME
-        throw ex;
-    }
-
-    /**
-     * replaces octal representations of bytes, written as \ddd to actual byte values.
-     *
-     * @param s a string with encoded octals
-     *
-     * @return string with all octals decoded
-     */
-    private ByteBuffer convertOctals(String s)
-    {
-        int beg = 0;
-        int end = 0;
-        int c1;
-        int c2;
-        int c3;
-        int chr;
-        ByteArrayOutputStream buf = new ByteArrayOutputStream();
-
-        while ((end = s.indexOf('\\', beg)) != -1) {
-            if (s.charAt(end + 1) != '\\') {
-                //log.debug("appending chunk '"+s.substring(beg, end)+"'");
-                for (int z = beg; z < end; z++) {
-                    buf.write((int) s.charAt(z));
-                }
-
-                //log.debug("found \\ at position "+end);
-                //log.debug("converting octal '"+s.substring(end, end+4)+"'");
-                if ((end + 4) <= s.length()) {
-                    try {
-                        chr = Integer.parseInt(s.substring(end + 1, end + 4), 8);
-
-                        //log.debug("converted octal '"+s.substring(end+1,end+4)+"' to '"+chr);
-                        //log.debug("converted octal back to '"+Integer.toOctalString(chr));
-
-                        //log.debug("converted '"+s.substring(end+1,end+4)+"' to "+chr+"/"+((char)chr));
-                        buf.write(chr);
-                        beg = end + 4;
-                        end = beg;
-                    } catch (NumberFormatException nfe) {
-                        //log.debug("not an octal");
-                        buf.write((int) '\\');
-                        beg = end + 1;
-                        end = beg;
-                    }
-                } else {
-                    //log.debug("not an octal, not enough chars left in string");
-                    buf.write((int) '\\');
-                    beg = end + 1;
-                    end = beg;
-                }
-            } else {
-                //log.debug("appending \\");
-                buf.write((int) '\\');
-                beg = end + 1;
-                end = beg;
-            }
-        }
-
-        if (end < s.length()) {
-            for (int z = beg; z < s.length(); z++) {
-                buf.write((int) s.charAt(z));
-            }
-        }
-
-        try {
-            log.debug("convertOctals(): returning buffer size '" + buf.size() + "'");
-
-            ByteBuffer b = ByteBuffer.allocate(buf.size());
-
-            return b.put(buf.toByteArray());
-        } catch (Exception e) {
-            log.error("convertOctals(): error parsing string: " + e);
-
-            return ByteBuffer.allocate(0);
-        }
-    }
-}
diff -Nru old\net\sf\jmimemagic\.svn\text-base\UnsupportedTypeException.java.svn-base new\net\sf\jmimemagic\.svn\text-base\UnsupportedTypeException.java.svn-base
--- old\net\sf\jmimemagic\.svn\text-base\UnsupportedTypeException.java.svn-base	Tue Sep 05 22:38:46 2006
+++ new\net\sf\jmimemagic\.svn\text-base\UnsupportedTypeException.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1,72 +0,0 @@
-/*
-jMimeMagic(TM) is a Java library for determining the content type of files or
-streams.
-
-Copyright (C) 2004 David Castro
-
-This library is free software; you can redistribute it and/or
-modify it under the terms of the GNU Lesser General Public
-License as published by the Free Software Foundation; either
-version 2.1 of the License, or (at your option) any later version.
-
-This library is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-Lesser General Public License for more details.
-
-You should have received a copy of the GNU Lesser General Public
-License along with this library; if not, write to the Free Software
-Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-
-For more information, please email arimus@users.sourceforge.net
-*/
-package net.sf.jmimemagic;
-
-/**
- * JMimeMagic unsupported test type exception. This exception is thrown when an unsupported
- * test type is specified in a mime magic test
- *
- * @author $Author: arimus $
- * @version $Revision: 1.1 $
- */
-public class UnsupportedTypeException extends Exception
-{
-    /**
-     * Default constructor
-     */
-    public UnsupportedTypeException()
-    {
-        super();
-    }
-
-    /**
-     * Create exception with error message
-     * 
-     * @param message The error message for this exception
-     */
-    public UnsupportedTypeException(String message)
-    {
-        super(message);
-    }
-
-    /**
-     * Create exception based on an existing Throwable
-     * 
-     * @param cause The throwable on which we'll base this exception
-     */
-    public UnsupportedTypeException(Throwable cause)
-    {
-        super(cause);
-    }
-
-    /**
-     * Create an exception with custom message and throwable info
-     * 
-     * @param message The message
-     * @param cause The target Throwable
-     */
-    public UnsupportedTypeException(String message, Throwable cause)
-    {
-        super(message, cause);
-    }
-}
diff -Nru old\net\sf\jmimemagic\.svn\wcprops\Magic.java.svn-work new\net\sf\jmimemagic\.svn\wcprops\Magic.java.svn-work
--- old\net\sf\jmimemagic\.svn\wcprops\Magic.java.svn-work	Tue Sep 05 22:38:48 2006
+++ new\net\sf\jmimemagic\.svn\wcprops\Magic.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1,5 +0,0 @@
-K 25
-svn:wc:ra_dav:version-url
-V 74
-/svnroot/jmimemagic/!svn/ver/5/trunk/src/java/net/sf/jmimemagic/Magic.java
-END
diff -Nru old\net\sf\jmimemagic\.svn\wcprops\MagicDetector.java.svn-work new\net\sf\jmimemagic\.svn\wcprops\MagicDetector.java.svn-work
--- old\net\sf\jmimemagic\.svn\wcprops\MagicDetector.java.svn-work	Tue Sep 05 22:38:48 2006
+++ new\net\sf\jmimemagic\.svn\wcprops\MagicDetector.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1,5 +0,0 @@
-K 25
-svn:wc:ra_dav:version-url
-V 82
-/svnroot/jmimemagic/!svn/ver/5/trunk/src/java/net/sf/jmimemagic/MagicDetector.java
-END
diff -Nru old\net\sf\jmimemagic\.svn\wcprops\MagicException.java.svn-work new\net\sf\jmimemagic\.svn\wcprops\MagicException.java.svn-work
--- old\net\sf\jmimemagic\.svn\wcprops\MagicException.java.svn-work	Tue Sep 05 22:38:48 2006
+++ new\net\sf\jmimemagic\.svn\wcprops\MagicException.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1,5 +0,0 @@
-K 25
-svn:wc:ra_dav:version-url
-V 83
-/svnroot/jmimemagic/!svn/ver/5/trunk/src/java/net/sf/jmimemagic/MagicException.java
-END
diff -Nru old\net\sf\jmimemagic\.svn\wcprops\MagicMatch.java.svn-work new\net\sf\jmimemagic\.svn\wcprops\MagicMatch.java.svn-work
--- old\net\sf\jmimemagic\.svn\wcprops\MagicMatch.java.svn-work	Tue Sep 05 22:38:48 2006
+++ new\net\sf\jmimemagic\.svn\wcprops\MagicMatch.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1,5 +0,0 @@
-K 25
-svn:wc:ra_dav:version-url
-V 79
-/svnroot/jmimemagic/!svn/ver/5/trunk/src/java/net/sf/jmimemagic/MagicMatch.java
-END
diff -Nru old\net\sf\jmimemagic\.svn\wcprops\MagicMatcher.java.svn-work new\net\sf\jmimemagic\.svn\wcprops\MagicMatcher.java.svn-work
--- old\net\sf\jmimemagic\.svn\wcprops\MagicMatcher.java.svn-work	Tue Sep 05 22:38:48 2006
+++ new\net\sf\jmimemagic\.svn\wcprops\MagicMatcher.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1,5 +0,0 @@
-K 25
-svn:wc:ra_dav:version-url
-V 81
-/svnroot/jmimemagic/!svn/ver/5/trunk/src/java/net/sf/jmimemagic/MagicMatcher.java
-END
diff -Nru old\net\sf\jmimemagic\.svn\wcprops\MagicMatchNotFoundException.java.svn-work new\net\sf\jmimemagic\.svn\wcprops\MagicMatchNotFoundException.java.svn-work
--- old\net\sf\jmimemagic\.svn\wcprops\MagicMatchNotFoundException.java.svn-work	Tue Sep 05 22:38:48 2006
+++ new\net\sf\jmimemagic\.svn\wcprops\MagicMatchNotFoundException.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1,5 +0,0 @@
-K 25
-svn:wc:ra_dav:version-url
-V 96
-/svnroot/jmimemagic/!svn/ver/5/trunk/src/java/net/sf/jmimemagic/MagicMatchNotFoundException.java
-END
diff -Nru old\net\sf\jmimemagic\.svn\wcprops\MagicParseException.java.svn-work new\net\sf\jmimemagic\.svn\wcprops\MagicParseException.java.svn-work
--- old\net\sf\jmimemagic\.svn\wcprops\MagicParseException.java.svn-work	Tue Sep 05 22:38:48 2006
+++ new\net\sf\jmimemagic\.svn\wcprops\MagicParseException.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1,5 +0,0 @@
-K 25
-svn:wc:ra_dav:version-url
-V 88
-/svnroot/jmimemagic/!svn/ver/5/trunk/src/java/net/sf/jmimemagic/MagicParseException.java
-END
diff -Nru old\net\sf\jmimemagic\.svn\wcprops\MagicParser.java.svn-work new\net\sf\jmimemagic\.svn\wcprops\MagicParser.java.svn-work
--- old\net\sf\jmimemagic\.svn\wcprops\MagicParser.java.svn-work	Tue Sep 05 22:38:48 2006
+++ new\net\sf\jmimemagic\.svn\wcprops\MagicParser.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1,5 +0,0 @@
-K 25
-svn:wc:ra_dav:version-url
-V 80
-/svnroot/jmimemagic/!svn/ver/5/trunk/src/java/net/sf/jmimemagic/MagicParser.java
-END
diff -Nru old\net\sf\jmimemagic\.svn\wcprops\UnsupportedTypeException.java.svn-work new\net\sf\jmimemagic\.svn\wcprops\UnsupportedTypeException.java.svn-work
--- old\net\sf\jmimemagic\.svn\wcprops\UnsupportedTypeException.java.svn-work	Tue Sep 05 22:38:48 2006
+++ new\net\sf\jmimemagic\.svn\wcprops\UnsupportedTypeException.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1,5 +0,0 @@
-K 25
-svn:wc:ra_dav:version-url
-V 93
-/svnroot/jmimemagic/!svn/ver/5/trunk/src/java/net/sf/jmimemagic/UnsupportedTypeException.java
-END
diff -Nru old\net\sf\jmimemagic\detectors\.svn\dir-wcprops new\net\sf\jmimemagic\detectors\.svn\dir-wcprops
--- old\net\sf\jmimemagic\detectors\.svn\dir-wcprops	Tue Sep 05 22:54:40 2006
+++ new\net\sf\jmimemagic\detectors\.svn\dir-wcprops	Thu Jan 01 01:00:00 1970
@@ -1,5 +0,0 @@
-K 25
-svn:wc:ra_dav:version-url
-V 73
-/svnroot/jmimemagic/!svn/ver/5/trunk/src/java/net/sf/jmimemagic/detectors
-END
diff -Nru old\net\sf\jmimemagic\detectors\.svn\entries new\net\sf\jmimemagic\detectors\.svn\entries
--- old\net\sf\jmimemagic\detectors\.svn\entries	Tue Sep 05 22:54:40 2006
+++ new\net\sf\jmimemagic\detectors\.svn\entries	Thu Jan 01 01:00:00 1970
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<wc-entries
-   xmlns="svn:">
-<entry
-   committed-rev="5"
-   name=""
-   committed-date="2006-09-06T05:38:42.573029Z"
-   url="https://svn.sourceforge.net/svnroot/jmimemagic/trunk/src/java/net/sf/jmimemagic/detectors"
-   last-author="arimus"
-   kind="dir"
-   uuid="e6599ef2-c01c-0410-b8c8-fa748ffdab45"
-   revision="5"/>
-<entry
-   committed-rev="5"
-   name="TextFileDetector.java"
-   text-time="2006-09-06T05:11:36.000000Z"
-   committed-date="2006-09-06T05:38:42.573029Z"
-   checksum="6a40ea1ec468e16e024293279c43b9e4"
-   last-author="arimus"
-   kind="file"
-   prop-time="2006-09-06T04:18:04.000000Z"/>
-</wc-entries>
diff -Nru old\net\sf\jmimemagic\detectors\.svn\format new\net\sf\jmimemagic\detectors\.svn\format
--- old\net\sf\jmimemagic\detectors\.svn\format	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\detectors\.svn\format	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-4
diff -Nru old\net\sf\jmimemagic\detectors\.svn\prop-base\TextFileDetector.java.svn-base new\net\sf\jmimemagic\detectors\.svn\prop-base\TextFileDetector.java.svn-base
--- old\net\sf\jmimemagic\detectors\.svn\prop-base\TextFileDetector.java.svn-base	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\detectors\.svn\prop-base\TextFileDetector.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\detectors\.svn\props\TextFileDetector.java.svn-work new\net\sf\jmimemagic\detectors\.svn\props\TextFileDetector.java.svn-work
--- old\net\sf\jmimemagic\detectors\.svn\props\TextFileDetector.java.svn-work	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\detectors\.svn\props\TextFileDetector.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1 +0,0 @@
-END
diff -Nru old\net\sf\jmimemagic\detectors\.svn\README.txt new\net\sf\jmimemagic\detectors\.svn\README.txt
--- old\net\sf\jmimemagic\detectors\.svn\README.txt	Tue Sep 05 21:18:04 2006
+++ new\net\sf\jmimemagic\detectors\.svn\README.txt	Thu Jan 01 01:00:00 1970
@@ -1,2 +0,0 @@
-This is a Subversion working copy administrative directory.
-Visit http://subversion.tigris.org/ for more information.
diff -Nru old\net\sf\jmimemagic\detectors\.svn\text-base\TextFileDetector.java.svn-base new\net\sf\jmimemagic\detectors\.svn\text-base\TextFileDetector.java.svn-base
--- old\net\sf\jmimemagic\detectors\.svn\text-base\TextFileDetector.java.svn-base	Tue Sep 05 22:38:46 2006
+++ new\net\sf\jmimemagic\detectors\.svn\text-base\TextFileDetector.java.svn-base	Thu Jan 01 01:00:00 1970
@@ -1,160 +0,0 @@
-/*
-jMimeMagic(TM) is a Java library for determining the content type of files or
-streams.
-
-Copyright (C) 2004 David Castro
-
-This library is free software; you can redistribute it and/or
-modify it under the terms of the GNU Lesser General Public
-License as published by the Free Software Foundation; either
-version 2.1 of the License, or (at your option) any later version.
-
-This library is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-Lesser General Public License for more details.
-
-You should have received a copy of the GNU Lesser General Public
-License along with this library; if not, write to the Free Software
-Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-
-For more information, please email arimus@users.sourceforge.net
-*/
-package net.sf.jmimemagic.detectors;
-
-import net.sf.jmimemagic.MagicDetector;
-
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.apache.oro.text.perl.Perl5Util;
-
-import java.io.File;
-import java.io.UnsupportedEncodingException;
-
-import java.util.Map;
-
-
-/**
- * DOCUMENT ME!
- *
- * @author $Author$
- * @version $Revision$
-  */
-public class TextFileDetector implements MagicDetector
-{
-    private static Log log = LogFactory.getLog(TextFileDetector.class);
-
-    /**
-     * Creates a new TextFileDetector object.
-     */
-    public TextFileDetector()
-    {
-        super();
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     */
-    public String getDisplayName()
-    {
-        return "Text File Detector";
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     */
-    public String getVersion()
-    {
-        return "0.1";
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     */
-    public String[] getHandledExtensions()
-    {
-        return new String[] { "txt", "text" };
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     */
-    public String[] getHandledTypes()
-    {
-        return new String[] { "text/plain" };
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     */
-    public String getName()
-    {
-        return "textfiledetector";
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @param data DOCUMENT ME!
-     * @param offset DOCUMENT ME!
-     * @param length DOCUMENT ME!
-     * @param bitmask DOCUMENT ME!
-     * @param comparator DOCUMENT ME!
-     * @param mimeType DOCUMENT ME!
-     * @param params DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     */
-    public String[] process(byte[] data, int offset, int length, long bitmask, char comparator,
-        String mimeType, Map params)
-    {
-        log.debug("processing stream data");
-
-        Perl5Util util = new Perl5Util();
-
-        try {
-            String s = new String(data, "UTF-8");
-
-            if (!util.match("/[^[:ascii:][:space:]]/", s)) {
-                return new String[] { "text/plain" };
-            }
-
-            return null;
-        } catch (UnsupportedEncodingException e) {
-            log.error("TextFileDetector: failed to process data");
-
-            return null;
-        }
-    }
-
-    /**
-     * DOCUMENT ME!
-     *
-     * @param file DOCUMENT ME!
-     * @param offset DOCUMENT ME!
-     * @param length DOCUMENT ME!
-     * @param bitmask DOCUMENT ME!
-     * @param comparator DOCUMENT ME!
-     * @param mimeType DOCUMENT ME!
-     * @param params DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     */
-    public String[] process(File file, int offset, int length, long bitmask, char comparator,
-        String mimeType, Map params)
-    {
-        log.debug("processing file data");
-
-        return new String[] {  };
-    }
-}
diff -Nru old\net\sf\jmimemagic\detectors\.svn\wcprops\TextFileDetector.java.svn-work new\net\sf\jmimemagic\detectors\.svn\wcprops\TextFileDetector.java.svn-work
--- old\net\sf\jmimemagic\detectors\.svn\wcprops\TextFileDetector.java.svn-work	Tue Sep 05 22:38:48 2006
+++ new\net\sf\jmimemagic\detectors\.svn\wcprops\TextFileDetector.java.svn-work	Thu Jan 01 01:00:00 1970
@@ -1,5 +0,0 @@
-K 25
-svn:wc:ra_dav:version-url
-V 95
-/svnroot/jmimemagic/!svn/ver/5/trunk/src/java/net/sf/jmimemagic/detectors/TextFileDetector.java
-END
diff -Nru old\net\sf\jmimemagic\detectors\package.html new\net\sf\jmimemagic\detectors\package.html
--- old\net\sf\jmimemagic\detectors\package.html	Tue Sep 05 22:19:20 2006
+++ new\net\sf\jmimemagic\detectors\package.html	Thu Jan 01 01:00:00 1970
@@ -1,6 +0,0 @@
-<html>
-<body>
-	<h1>net.sf.jmimemagic</h1>
-	This package contains detectors for jmimemagic
-</body>
-</html>
diff -Nru old\net\sf\jmimemagic\detectors\TextFileDetector.java new\net\sf\jmimemagic\detectors\TextFileDetector.java
--- old\net\sf\jmimemagic\detectors\TextFileDetector.java	Tue Sep 05 22:11:36 2006
+++ new\net\sf\jmimemagic\detectors\TextFileDetector.java	Tue Nov 10 18:49:04 2009
@@ -24,8 +24,6 @@
 
 import net.sf.jmimemagic.MagicDetector;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
 import org.apache.oro.text.perl.Perl5Util;
 
 import java.io.File;
@@ -42,7 +40,6 @@
   */
 public class TextFileDetector implements MagicDetector
 {
-    private static Log log = LogFactory.getLog(TextFileDetector.class);
 
     /**
      * Creates a new TextFileDetector object.
@@ -118,7 +115,6 @@
     public String[] process(byte[] data, int offset, int length, long bitmask, char comparator,
         String mimeType, Map params)
     {
-        log.debug("processing stream data");
 
         Perl5Util util = new Perl5Util();
 
@@ -131,7 +127,6 @@
 
             return null;
         } catch (UnsupportedEncodingException e) {
-            log.error("TextFileDetector: failed to process data");
 
             return null;
         }
@@ -153,7 +148,6 @@
     public String[] process(File file, int offset, int length, long bitmask, char comparator,
         String mimeType, Map params)
     {
-        log.debug("processing file data");
 
         return new String[] {  };
     }
diff -Nru old\net\sf\jmimemagic\Magic.java new\net\sf\jmimemagic\Magic.java
--- old\net\sf\jmimemagic\Magic.java	Tue Sep 05 22:09:06 2006
+++ new\net\sf\jmimemagic\Magic.java	Tue Nov 24 18:34:00 2009
@@ -22,13 +22,8 @@
 */
 package net.sf.jmimemagic;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-
 import java.io.File;
-import java.io.IOException;
 import java.io.PrintStream;
-
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.HashMap;
@@ -37,33 +32,21 @@
 
 /**
  * This class is the primary class for jMimeMagic
- *
  * @author $Author: arimus $
  * @version $Revision: 1.8 $
  */
-public class Magic
-{
-    private static Log log = LogFactory.getLog(Magic.class);
+public class Magic {
     private static boolean initialized = false;
     private static MagicParser magicParser = null;
     private static HashMap hintMap = new HashMap();
 
     /**
-     * constructor
-     */
-    public Magic()
-    {
-        log.debug("instantiated");
-    }
-
-    /**
      * Add a hint to use the specified matcher for the given extension
      * 
      * @param extension DOCUMENT ME!
      * @param matcher DOCUMENT ME!
      */
-    private static void addHint(String extension, MagicMatcher matcher)
-    {
+    private static void addHint(String extension, MagicMatcher matcher) {
         if (hintMap.keySet().contains(extension)) {
             ArrayList a = (ArrayList) hintMap.get(extension);
             a.add(matcher);
@@ -74,18 +57,10 @@
         }
     }
 
-    /**
-     * create a parser and initialize it
-     *
-     * @throws MagicParseException DOCUMENT ME!
-     */
-    public static synchronized void initialize()
-        throws MagicParseException
-    {
-        log.debug("initialize()");
+    /** Create a parser and initialize it. */
+    public static synchronized void initialize() throws MagicParseException {
 
         if (!initialized) {
-            log.debug("initializing");
             magicParser = new MagicParser();
             magicParser.initialize();
 
@@ -96,22 +71,10 @@
                 MagicMatcher matcher = (MagicMatcher) i.next();
                 String ext = matcher.getMatch().getExtension();
 
-                if ((ext != null) && !ext.trim().equals("")) {
-                    if (log.isDebugEnabled()) {
-                        log.debug("adding hint mapping for extension '" + ext + "'");
-                    }
-
-                    addHint(ext, matcher);
-                } else if (matcher.getMatch().getType().equals("detector")) {
+                if ((ext != null) && !ext.trim().equals("")) addHint(ext, matcher);
+                else if (matcher.getMatch().getType().equals("detector")) {
                     String[] exts = matcher.getDetectorExtensions();
-
-                    for (int j = 0; j < exts.length; j++) {
-                        if (log.isDebugEnabled()) {
-                            log.debug("adding hint mapping for extension '" + exts[j] + "'");
-                        }
-
-                        addHint(exts[j], matcher);
-                    }
+                    for (int j = 0; j < exts.length; j++) addHint(exts[j], matcher);
                 }
             }
 
@@ -122,19 +85,12 @@
     /**
      * return the parsed MagicMatch objects that were created from the magic.xml
      * definitions
-     *
      * @return the parsed MagicMatch objects
-     *
      * @throws MagicParseException DOCUMENT ME!
      */
-    public static Collection getMatchers()
-        throws MagicParseException
-    {
-        log.debug("getMatchers()");
+    public static Collection getMatchers() throws MagicParseException {
 
-        if (!initialized) {
-            initialize();
-        }
+        if (!initialized) initialize();
 
         Iterator i = magicParser.getMatchers().iterator();
         ArrayList m = new ArrayList();
@@ -144,8 +100,8 @@
 
             try {
                 m.add(matcher.clone());
-            } catch (CloneNotSupportedException e) {
-                log.error("failed to clone matchers");
+            } 
+            catch (CloneNotSupportedException e) {
                 throw new MagicParseException("failed to clone matchers");
             }
         }
@@ -153,46 +109,17 @@
         return m;
     }
 
-    /**
-     * get a match from a stream of data
-     *
-     * @param data DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     *
-     * @throws MagicParseException DOCUMENT ME!
-     * @throws MagicMatchNotFoundException DOCUMENT ME!
-     * @throws MagicException DOCUMENT ME!
-     */
-    public static MagicMatch getMagicMatch(byte[] data)
-        throws MagicParseException, MagicMatchNotFoundException, MagicException
-    {
+    /** Get a match from a stream of data. */
+    public static MagicMatch getMagicMatch(byte[] data) throws MagicParseException, MagicMatchNotFoundException, MagicException {
         return getMagicMatch(data, false);
     }
 
-    /**
-     * get a match from a stream of data
-     *
-     * @param data DOCUMENT ME!
-     * @param onlyMimeMatch DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     *
-     * @throws MagicParseException DOCUMENT ME!
-     * @throws MagicMatchNotFoundException DOCUMENT ME!
-     * @throws MagicException DOCUMENT ME!
-     */
-    public static MagicMatch getMagicMatch(byte[] data, boolean onlyMimeMatch)
-        throws MagicParseException, MagicMatchNotFoundException, MagicException
-    {
-        log.debug("getMagicMatch(byte[])");
+    /** Get a match from a stream of data. */
+    public static MagicMatch getMagicMatch(byte[] data, boolean onlyMimeMatch) throws MagicParseException, MagicMatchNotFoundException, MagicException {
 
-        if (!initialized) {
-            initialize();
-        }
+        if (!initialized) initialize();
 
         Collection matchers = magicParser.getMatchers();
-        log.debug("getMagicMatch(byte[]): have " + matchers.size() + " matchers");
 
         MagicMatcher matcher = null;
         MagicMatch match = null;
@@ -200,25 +127,13 @@
 
         while (i.hasNext()) {
             matcher = (MagicMatcher) i.next();
-
-            log.debug("getMagicMatch(byte[]): trying to match: " +
-                matcher.getMatch().getMimeType());
-
             try {
-                if ((match = matcher.test(data, onlyMimeMatch)) != null) {
-                    log.debug("getMagicMatch(byte[]): matched " + matcher.getMatch().getMimeType());
-
-                    return match;
-                }
-            } catch (IOException e) {
-                log.error("getMagicMatch(byte[]): " + e);
-                throw new MagicException(e);
-            } catch (UnsupportedTypeException e) {
-                log.error("getMagicMatch(byte[]): " + e);
+                if ((match = matcher.test(data, onlyMimeMatch)) != null) return match;
+            } 
+            catch (Throwable e) {
                 throw new MagicException(e);
             }
         }
-
         throw new MagicMatchNotFoundException();
     }
 
@@ -227,16 +142,10 @@
      *
      * @param file the file to match content in
      * @param extensionHints whether or not to use extension to optimize order of content tests
-     *
      * @return the MagicMatch object representing a match in the file
      *
-     * @throws MagicParseException DOCUMENT ME!
-     * @throws MagicMatchNotFoundException DOCUMENT ME!
-     * @throws MagicException DOCUMENT ME!
      */
-    public static MagicMatch getMagicMatch(File file, boolean extensionHints)
-        throws MagicParseException, MagicMatchNotFoundException, MagicException
-    {
+    public static MagicMatch getMagicMatch(File file, boolean extensionHints) throws MagicParseException, MagicMatchNotFoundException, MagicException {
         return getMagicMatch(file, extensionHints, false);
     }
 
@@ -246,23 +155,15 @@
      * @param file the file to match content in
      * @param extensionHints whether or not to use extension to optimize order of content tests
      * @param onlyMimeMatch only try to get mime type, no submatches are processed when true
-     *
      * @return the MagicMatch object representing a match in the file
      *
      * @throws MagicParseException DOCUMENT ME!
      * @throws MagicMatchNotFoundException DOCUMENT ME!
      * @throws MagicException DOCUMENT ME!
      */
-    public static MagicMatch getMagicMatch(File file, boolean extensionHints, boolean onlyMimeMatch)
-        throws MagicParseException, MagicMatchNotFoundException, MagicException
-    {
-        log.debug("getMagicMatch(File)");
-
-        if (!initialized) {
-            initialize();
-        }
+    public static MagicMatch getMagicMatch(File file, boolean extensionHints, boolean onlyMimeMatch) throws MagicParseException, MagicMatchNotFoundException, MagicException {
 
-        long start = System.currentTimeMillis();
+        if (!initialized) initialize();
 
         MagicMatcher matcher = null;
         MagicMatch match = null;
@@ -271,7 +172,6 @@
         ArrayList checked = new ArrayList();
 
         if (extensionHints) {
-            log.debug("trying to use hints first");
 
             String name = file.getName();
             int pos = name.lastIndexOf('.');
@@ -280,150 +180,69 @@
                 String ext = name.substring(pos + 1, name.length());
 
                 if ((ext != null) && !ext.equals("")) {
-                    if (log.isDebugEnabled()) {
-                        log.debug("using extension '" + ext + "' for hinting");
-                    }
-
                     Collection c = (Collection) hintMap.get(ext);
-
                     if (c != null) {
                         Iterator i = c.iterator();
-
                         while (i.hasNext()) {
                             matcher = (MagicMatcher) i.next();
-
-                            log.debug("getMagicMatch(File): trying to match: " +
-                                matcher.getMatch().getDescription());
-
                             try {
-                                if ((match = matcher.test(file, onlyMimeMatch)) != null) {
-                                    log.debug("getMagicMatch(File): matched " +
-                                        matcher.getMatch().getDescription());
-
-                                    if (log.isDebugEnabled()) {
-                                        long end = System.currentTimeMillis();
-                                        log.debug("found match in '" + (end - start) +
-                                            "' milliseconds");
-                                    }
-
-                                    return match;
-                                }
-                            } catch (UnsupportedTypeException e) {
-                                log.error("getMagicMatch(File): " + e);
-                                throw new MagicException(e);
-                            } catch (IOException e) {
-                                log.error("getMagicMatch(File): " + e);
+                                if ((match = matcher.test(file, onlyMimeMatch)) != null) return match;
+                            } 
+                            catch (Throwable e) {
                                 throw new MagicException(e);
                             }
-
                             // add to the already checked list
                             checked.add(matcher);
                         }
                     }
-                } else {
-                    log.debug("no file extension, ignoring hints");
-                }
-            } else {
-                log.debug("no file extension, ignoring hints");
-            }
+                } 
+            } 
         }
 
         Collection matchers = magicParser.getMatchers();
-        log.debug("getMagicMatch(File): have " + matchers.size() + " matches");
-
         Iterator i = matchers.iterator();
 
         while (i.hasNext()) {
             matcher = (MagicMatcher) i.next();
-
             if (!checked.contains(matcher)) {
-                log.debug("getMagicMatch(File): trying to match: " +
-                    matcher.getMatch().getDescription());
-
                 try {
-                    if ((match = matcher.test(file, onlyMimeMatch)) != null) {
-                        log.debug("getMagicMatch(File): matched " +
-                            matcher.getMatch().getDescription());
-
-                        if (log.isDebugEnabled()) {
-                            long end = System.currentTimeMillis();
-                            log.debug("found match in '" + (end - start) + "' milliseconds");
-                        }
-
-                        return match;
-                    }
-                } catch (UnsupportedTypeException e) {
-                    log.error("getMagicMatch(File): " + e);
-                    throw new MagicException(e);
-                } catch (IOException e) {
-                    log.error("getMagicMatch(File): " + e);
+                    if ((match = matcher.test(file, onlyMimeMatch)) != null) return match;
+                } 
+                catch (Throwable e) {
                     throw new MagicException(e);
                 }
-            } else {
-                log.debug("getMagicMatch(File): already checked, skipping: " +
-                    matcher.getMatch().getDescription());
-            }
+            } 
         }
 
         throw new MagicMatchNotFoundException();
     }
 
-    /**
-     * print the contents of a magic file
-     *
-     * @param stream DOCUMENT ME!
-     *
-     * @throws MagicParseException DOCUMENT ME!
-     */
-    public static void printMagicFile(PrintStream stream)
-        throws MagicParseException
-    {
-        if (!initialized) {
-            initialize();
-        }
+    /** Print the contents of a magic file. */
+    public static void printMagicFile(PrintStream stream) throws MagicParseException {
+        if (!initialized) initialize();
 
         Collection matchers = Magic.getMatchers();
-        log.debug("have " + matchers.size() + " matches");
 
         MagicMatcher matcher = null;
         Iterator i = matchers.iterator();
 
         while (i.hasNext()) {
             matcher = (MagicMatcher) i.next();
-            log.debug("printing");
             printMagicMatcher(stream, matcher, "");
         }
     }
 
-    /**
-     * print a magic match
-     *
-     * @param stream DOCUMENT ME!
-     * @param matcher DOCUMENT ME!
-     * @param spacing DOCUMENT ME!
-     */
-    private static void printMagicMatcher(PrintStream stream, MagicMatcher matcher, String spacing)
-    {
+    /** Print a magic match. */
+    private static void printMagicMatcher(PrintStream stream, MagicMatcher matcher, String spacing) {
         stream.println(spacing + "name: " + matcher.getMatch().getDescription());
         stream.println(spacing + "children: ");
-
         Collection matchers = matcher.getSubMatchers();
         Iterator i = matchers.iterator();
-
-        while (i.hasNext()) {
-            printMagicMatcher(stream, (MagicMatcher) i.next(), spacing + "  ");
-        }
+        while (i.hasNext()) printMagicMatcher(stream, (MagicMatcher) i.next(), spacing + "  ");
     }
 
-    /**
-     * print a magic match
-     *
-     * @param stream DOCUMENT ME!
-     * @param match DOCUMENT ME!
-     * @param spacing DOCUMENT ME!
-     */
-    public static void printMagicMatch(PrintStream stream, MagicMatch match, String spacing)
-    {
+    /** Print a magic match. */
+    public static void printMagicMatch(PrintStream stream, MagicMatch match, String spacing) {
         stream.println(spacing + "=============================");
         stream.println(spacing + "mime type: " + match.getMimeType());
         stream.println(spacing + "description: " + match.getDescription());
@@ -439,27 +258,24 @@
         Collection submatches = match.getSubMatches();
         Iterator i = submatches.iterator();
 
-        while (i.hasNext()) {
-            printMagicMatch(stream, (MagicMatch) i.next(), spacing + "    ");
-        }
+        while (i.hasNext()) printMagicMatch(stream, (MagicMatch) i.next(), spacing + "    ");
     }
 
-    /**
-     * DOCUMENT ME!
-     *
-     * @param args DOCUMENT ME!
-     */
     public static void main(String[] args)
     {
         //		Magic magic = new Magic();
         try {
+            
+            String filename = "C:/Entrada2.txt";
+//            String filename = "C:/jmagick.dll";
+            
             //Magic.initialize();
-            File f = new File(args[0]);
+            File f = new File(filename);
 
             if (f.exists()) {
                 MagicMatch match = Magic.getMagicMatch(f, true, false);
-
-                System.out.println("filename: " + args[0]);
+                
+                System.out.println("filename: " + filename);
                 printMagicMatch(System.out, match, "");
 
                 //				Collection submatches = match.getSubMatches();
diff -Nru old\net\sf\jmimemagic\MagicMatch.java new\net\sf\jmimemagic\MagicMatch.java
--- old\net\sf\jmimemagic\MagicMatch.java	Tue Sep 05 22:15:52 2006
+++ new\net\sf\jmimemagic\MagicMatch.java	Tue Nov 10 18:49:04 2009
@@ -22,9 +22,6 @@
 */
 package net.sf.jmimemagic;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-
 import java.nio.ByteBuffer;
 
 import java.util.ArrayList;
@@ -40,9 +37,7 @@
  * @author $Author: arimus $
  * @version $Revision: 1.10 $
  */
-public class MagicMatch implements Cloneable
-{
-    private static Log log = LogFactory.getLog(MagicMatch.class);
+public class MagicMatch implements Cloneable {
     private String mimeType = null;
     private String extension = null;
     private String description = null;
@@ -59,21 +54,8 @@
     private ArrayList subMatches = new ArrayList(0);
     private Map properties;
 
-    /** 
-     * constructor 
-     */
-    public MagicMatch()
-    {
-        log.debug("instantiated");
-    }
-
-    /**
-     * print information about this match
-     *
-     * @return DOCUMENT ME!
-     */
-    public String print()
-    {
+    /** Print information about this match. */
+    public String print() {
         StringBuffer string = new StringBuffer();
         string.append("\n");
         string.append("mime type: ").append(mimeType).append("\n");
@@ -85,67 +67,42 @@
         string.append("type: ").append(type).append("\n");
         string.append("comparator: ").append(comparator).append("\n");
         string.append("bitmask: ").append(bitmask);
-
         return string.toString();
     }
 
-    /**
-     * set the mime type for this magic match
-     *
-     * @param value DOCUMENT ME!
-     */
-    public void setMimeType(String value)
-    {
+    /** Set the mime type for this magic match. */
+    public void setMimeType(String value) {
         mimeType = value;
     }
 
-    /**
-     * get the magic match for this magic match
-     *
-     * @return the mime type for this magic match
-     */
-    public String getMimeType()
-    {
+    /** Get the magic match for this magic match. */
+    public String getMimeType() {
         return mimeType;
     }
 
-    /**
-     * set the extension for this magic match
-     *
-     * @param value DOCUMENT ME!
-     */
-    public void setExtension(String value)
-    {
+    /** Set the extension for this magic match. */
+    public void setExtension(String value) {
         extension = value;
     }
 
     /**
-     * get the extension for this magic match
-     *
+     * Get the extension for this magic match.
      * @return the extension for this magic match
      */
-    public String getExtension()
-    {
+    public String getExtension() {
         return extension;
     }
 
-    /**
-     * set the description for this magic match
-     *
-     * @param value DOCUMENT ME!
-     */
-    public void setDescription(String value)
-    {
+    /** Set the description for this magic match. */
+    public void setDescription(String value) {
         description = value;
     }
 
     /**
-     * get the description for this magic match
-     *
+     * Get the description for this magic match.
      * @return the description for thie magic match
      */
-    public String getDescription()
-    {
+    public String getDescription() {
         return description;
     }
 
@@ -292,24 +249,18 @@
     }
 
     /**
-     * add a submatch to this magic match
-     *
+     * Add a submatch to this magic match.
      * @param m a magic match
      */
-    public void addSubMatch(MagicMatch m)
-    {
-        log.debug("adding submatch '" + m.getDescription() + "' to '" + getDescription() + "'");
+    public void addSubMatch(MagicMatch m) {
         subMatches.add(m);
     }
 
     /**
-     * set all submatches
-     *
+     * Set all submatches.
      * @param a a collection of submatches
      */
-    public void setSubMatches(Collection a)
-    {
-        log.debug("setting submatches for '" + getDescription() + "'");
+    public void setSubMatches(Collection a) {
         subMatches.clear();
         subMatches.addAll(a);
     }
diff -Nru old\net\sf\jmimemagic\MagicMatcher.java new\net\sf\jmimemagic\MagicMatcher.java
--- old\net\sf\jmimemagic\MagicMatcher.java	Tue Sep 05 22:17:00 2006
+++ new\net\sf\jmimemagic\MagicMatcher.java	Tue Nov 10 18:49:04 2009
@@ -22,10 +22,6 @@
 */
 package net.sf.jmimemagic;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.apache.oro.text.perl.Perl5Util;
-
 import java.io.File;
 import java.io.IOException;
 import java.io.RandomAccessFile;
@@ -37,6 +33,8 @@
 import java.util.Collection;
 import java.util.Iterator;
 
+import org.apache.oro.text.perl.Perl5Util;
+
 
 /**
  * This class represents a single match test
@@ -44,40 +42,17 @@
  * @author $Author: arimus $
  * @version $Revision: 1.1 $
  */
-public class MagicMatcher implements Cloneable
-{
-    private static Log log = LogFactory.getLog(MagicMatcher.class);
+public class MagicMatcher implements Cloneable {
+
     private ArrayList subMatchers = new ArrayList(0);
     private MagicMatch match = null;
 
-    /** 
-     * constructor 
-     */
-    public MagicMatcher()
-    {
-        log.debug("instantiated");
-    }
 
-    /**
-     * DOCUMENT ME!
-     *
-     * @param match DOCUMENT ME!
-     */
-    public void setMatch(MagicMatch match)
-    {
-        log.debug("setMatch()");
+    public void setMatch(MagicMatch match) {
         this.match = match;
     }
 
-    /**
-     * DOCUMENT ME!
-     *
-     * @return DOCUMENT ME!
-     */
-    public MagicMatch getMatch()
-    {
-        log.debug("getMatch()");
-
+    public MagicMatch getMatch() {
         return this.match;
     }
 
@@ -86,9 +61,7 @@
      *
      * @return whether or not this match has enough data to be valid
      */
-    public boolean isValid()
-    {
-        log.debug("isValid()");
+    public boolean isValid() {
 
         if ((match == null) || (match.getTest() == null)) {
             return false;
@@ -114,9 +87,7 @@
      *
      * @param m a magic match
      */
-    public void addSubMatcher(MagicMatcher m)
-    {
-        log.debug("addSubMatcher()");
+    public void addSubMatcher(MagicMatcher m) {
         subMatchers.add(m);
     }
 
@@ -127,7 +98,6 @@
      */
     public void setSubMatchers(Collection a)
     {
-        log.debug("setSubMatchers(): for match '" + match.getDescription() + "'");
         subMatchers.clear();
         subMatchers.addAll(a);
     }
@@ -137,10 +107,7 @@
      *
      * @return a collection of submatches
      */
-    public Collection getSubMatchers()
-    {
-        log.debug("getSubMatchers()");
-
+    public Collection getSubMatchers() {
         return subMatchers;
     }
 
@@ -155,22 +122,13 @@
      * @throws IOException DOCUMENT ME!
      * @throws UnsupportedTypeException DOCUMENT ME!
      */
-    public MagicMatch test(File f, boolean onlyMimeMatch)
-        throws IOException, UnsupportedTypeException
-    {
-        log.debug("test(File)");
+    public MagicMatch test(File f, boolean onlyMimeMatch) throws IOException, UnsupportedTypeException {
 
         int offset = match.getOffset();
         String description = match.getDescription();
         String type = match.getType();
         String mimeType = match.getMimeType();
 
-        log.debug("test(File): testing '" + f.getName() + "' for '" + description + "'");
-
-        log.debug("test(File): \n=== BEGIN MATCH INFO ==");
-        log.debug(match.print());
-        log.debug("test(File): \n=== END MATCH INFO ====\n");
-
         RandomAccessFile file = null;
         file = new RandomAccessFile(f, "r");
 
@@ -229,8 +187,6 @@
                 }
             }
 
-            log.debug("test(File): stream size is '" + buf.length + "'");
-
             MagicMatch match = null;
             MagicMatch submatch = null;
 
@@ -238,24 +194,15 @@
                 // set the top level match to this one
                 match = getMatch();
 
-                log.debug("test(File): testing matched '" + description + "'");
-
                 // set the data on this match
                 if ((onlyMimeMatch == false) && (subMatchers != null) && (subMatchers.size() > 0)) {
-                    log.debug("test(File): testing " + subMatchers.size() + " submatches for '" +
-                        description + "'");
 
                     for (int i = 0; i < subMatchers.size(); i++) {
-                        log.debug("test(File): testing submatch " + i);
 
                         MagicMatcher m = (MagicMatcher) subMatchers.get(i);
 
                         if ((submatch = m.test(f, false)) != null) {
-                            log.debug("test(File): submatch " + i + " matched with '" +
-                                submatch.getDescription() + "'");
                             match.addSubMatch(submatch);
-                        } else {
-                            log.debug("test(File): submatch " + i + " doesn't match");
                         }
                     }
                 }
@@ -284,7 +231,6 @@
     public MagicMatch test(byte[] data, boolean onlyMimeMatch)
         throws IOException, UnsupportedTypeException
     {
-        log.debug("test(byte[])");
 
         int offset = match.getOffset();
         String description = match.getDescription();
@@ -292,12 +238,6 @@
         String test = new String(match.getTest().array());
         String mimeType = match.getMimeType();
 
-        log.debug("test(byte[]): testing byte[] data for '" + description + "'");
-
-        log.debug("test(byte[]): \n=== BEGIN MATCH INFO ==");
-        log.debug(match.print());
-        log.debug("test(byte[]): \n=== END MATCH INFO ====\n");
-
         int length = 0;
 
         if (type.equals("byte")) {
@@ -327,14 +267,10 @@
         }
 
         byte[] buf = new byte[length];
-        log.debug("test(byte[]): offset=" + offset + ",length=" + length + ",data length=" +
-            data.length);
 
         if ((offset + length) < data.length) {
             System.arraycopy(data, offset, buf, 0, length);
 
-            log.debug("test(byte[]): stream size is '" + buf.length + "'");
-
             MagicMatch match = null;
             MagicMatch submatch = null;
 
@@ -342,24 +278,15 @@
                 // set the top level match to this one
                 match = getMatch();
 
-                log.debug("test(byte[]): testing matched '" + description + "'");
-
                 // set the data on this match
                 if ((onlyMimeMatch == false) && (subMatchers != null) && (subMatchers.size() > 0)) {
-                    log.debug("test(byte[]): testing " + subMatchers.size() + " submatches for '" +
-                        description + "'");
 
                     for (int i = 0; i < subMatchers.size(); i++) {
-                        log.debug("test(byte[]): testing submatch " + i);
 
                         MagicMatcher m = (MagicMatcher) subMatchers.get(i);
 
                         if ((submatch = m.test(data, false)) != null) {
-                            log.debug("test(byte[]): submatch " + i + " matched with '" +
-                                submatch.getDescription() + "'");
                             match.addSubMatch(submatch);
-                        } else {
-                            log.debug("test(byte[]): submatch " + i + " doesn't match");
                         }
                     }
                 }
@@ -379,7 +306,6 @@
      */
     private boolean testInternal(byte[] data)
     {
-        log.debug("testInternal(byte[])");
 
         if (data.length == 0) {
             return false;
@@ -442,12 +368,7 @@
                 //				return testDate(data, LITTLE_ENDIAN);
                 //			} else if (type.equals("bedate")) {
                 //				return testDate(data, BIG_ENDIAN);
-            } else {
-                log.error("testInternal(byte[]): invalid test type '" + type + "'");
             }
-        } else {
-            log.error("testInternal(byte[]): type or test is empty for '" + mimeType + " - " +
-                description + "'");
         }
 
         return false;
@@ -462,8 +383,6 @@
      */
     private boolean testByte(ByteBuffer data)
     {
-        log.debug("testByte()");
-
         String test = new String(match.getTest().array());
         char comparator = match.getComparator();
         long bitmask = match.getBitmask();
@@ -471,13 +390,9 @@
         String s = test;
         byte b = data.get(0);
         b = (byte) (b & bitmask);
-        log.debug("testByte(): decoding '" + test + "' to byte");
 
         int tst = Integer.decode(test).byteValue();
         byte t = (byte) (tst & 0xff);
-        log.debug("testByte(): applying bitmask '" + bitmask + "' to '" + tst + "', result is '" +
-            t + "'");
-        log.debug("testByte(): comparing byte '" + b + "' to '" + t + "'");
 
         switch (comparator) {
         case '=':
@@ -505,7 +420,6 @@
      */
     private boolean testString(ByteBuffer data)
     {
-        log.debug("testString()");
 
         ByteBuffer test = match.getTest();
         char comparator = match.getComparator();
@@ -517,8 +431,6 @@
         int i = 0;
 
         for (i = 0; i < t.length; i++) {
-            log.debug("testing byte '" + b[i] + "' from '" + new String(data.array()) +
-                "' against byte '" + t[i] + "' from '" + new String(test.array()) + "'");
 
             if (t[i] != b[i]) {
                 diff = true;
@@ -553,7 +465,6 @@
      */
     private boolean testShort(ByteBuffer data)
     {
-        log.debug("testShort()");
 
         short val = 0;
         String test = new String(match.getTest().array());
@@ -570,7 +481,6 @@
         try {
             tst = Integer.decode(test).shortValue();
         } catch (NumberFormatException e) {
-            log.error("testShort(): " + e);
 
             return false;
 
@@ -579,9 +489,6 @@
             //}
         }
 
-        log.debug("testShort(): testing '" + Long.toHexString(val) + "' against '" +
-            Long.toHexString(tst) + "'");
-
         switch (comparator) {
         case '=':
             return val == tst;
@@ -608,7 +515,6 @@
      */
     private boolean testLong(ByteBuffer data)
     {
-        log.debug("testLong()");
 
         long val = 0;
         String test = new String(match.getTest().array());
@@ -622,9 +528,6 @@
 
         long tst = Long.decode(test).longValue();
 
-        log.debug("testLong(): testing '" + Long.toHexString(val) + "' against '" + test +
-            "' => '" + Long.toHexString(tst) + "'");
-
         switch (comparator) {
         case '=':
             return val == tst;
@@ -651,13 +554,11 @@
      */
     private boolean testRegex(String text)
     {
-        log.debug("testRegex()");
 
         String test = new String(match.getTest().array());
         char comparator = match.getComparator();
 
         Perl5Util utility = new Perl5Util();
-        log.debug("testRegex(): searching for '" + test + "'");
 
         if (comparator == '=') {
             if (utility.match(test, text)) {
@@ -685,12 +586,10 @@
      */
     private boolean testDetector(ByteBuffer data)
     {
-        log.debug("testDetector()");
 
         String detectorClass = new String(match.getTest().array());
 
         try {
-            log.debug("loading class: " + detectorClass);
 
             Class c = Class.forName(detectorClass);
             MagicDetector detector = (MagicDetector) c.newInstance();
@@ -704,12 +603,9 @@
 
                 return true;
             }
-        } catch (ClassNotFoundException e) {
-            log.error("failed to load detector: " + detectorClass, e);
-        } catch (InstantiationException e) {
-            log.error("specified class is not a valid detector class: " + detectorClass, e);
-        } catch (IllegalAccessException e) {
-            log.error("specified class cannot be accessed: " + detectorClass, e);
+        } 
+        catch (Throwable e) {
+        	java.util.logging.Logger.getAnonymousLogger().warning(e.toString());
         }
 
         return false;
@@ -722,23 +618,17 @@
      */
     public String[] getDetectorExtensions()
     {
-        log.debug("testDetector()");
 
         String detectorClass = new String(match.getTest().array());
 
         try {
-            log.debug("loading class: " + detectorClass);
 
             Class c = Class.forName(detectorClass);
             MagicDetector detector = (MagicDetector) c.newInstance();
 
             return detector.getHandledTypes();
-        } catch (ClassNotFoundException e) {
-            log.error("failed to load detector: " + detectorClass, e);
-        } catch (InstantiationException e) {
-            log.error("specified class is not a valid detector class: " + detectorClass, e);
-        } catch (IllegalAccessException e) {
-            log.error("specified class cannot be accessed: " + detectorClass, e);
+        } catch (Throwable e) {
+        	java.util.logging.Logger.getAnonymousLogger().warning(e.toString());
         }
 
         return new String[0];
diff -Nru old\net\sf\jmimemagic\MagicParser.java new\net\sf\jmimemagic\MagicParser.java
--- old\net\sf\jmimemagic\MagicParser.java	Tue Sep 05 22:17:46 2006
+++ new\net\sf\jmimemagic\MagicParser.java	Tue Nov 10 18:49:04 2009
@@ -22,9 +22,6 @@
 */
 package net.sf.jmimemagic;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-
 import org.xml.sax.Attributes;
 import org.xml.sax.ContentHandler;
 import org.xml.sax.ErrorHandler;
@@ -54,7 +51,6 @@
 public class MagicParser extends DefaultHandler implements ContentHandler, ErrorHandler
 {
     private static String magicFile = "/magic.xml";
-    private static Log log = LogFactory.getLog(MagicParser.class);
 
     // Namespaces feature id (http://xml.org/sax/features/namespaces).
     protected static final String NAMESPACES_FEATURE_ID = "http://xml.org/sax/features/namespaces";
@@ -95,13 +91,6 @@
     private boolean isDescription = false;
     private boolean isTest = false;
 
-    /** 
-     * constructor 
-     */
-    public MagicParser()
-    {
-        log.debug("instantiated");
-    }
 
     /**
      * parse the xml file and create our MagicMatcher object list
@@ -122,7 +111,6 @@
                 parser = XMLReaderFactory.createXMLReader();
             } catch (Exception e) {
                 try {
-                    log.debug("falling back to default parser: " + DEFAULT_PARSER_NAME);
                     parser = XMLReaderFactory.createXMLReader(DEFAULT_PARSER_NAME);
                 } catch (Exception ee) {
                     throw new MagicParseException("unable to instantiate parser");
@@ -132,34 +120,35 @@
             // set parser features
             try {
                 parser.setFeature(NAMESPACES_FEATURE_ID, namespaces);
-            } catch (SAXException e) {
-                log.debug("initialize(): warning: Parser does not support feature (" +
-                    NAMESPACES_FEATURE_ID + ")");
+            } 
+            catch (SAXException e) {
+                java.util.logging.Logger.getAnonymousLogger().warning("Parser does not support feature (" + NAMESPACES_FEATURE_ID + ")");
             }
 
             try {
                 parser.setFeature(VALIDATION_FEATURE_ID, validation);
             } catch (SAXException e) {
-                log.debug("initialize(): warning: Parser does not support feature (" +
-                    VALIDATION_FEATURE_ID + ")");
+            	java.util.logging.Logger.getAnonymousLogger().warning("Parser does not support feature (" + VALIDATION_FEATURE_ID + ")");
             }
 
             try {
                 parser.setFeature(SCHEMA_VALIDATION_FEATURE_ID, schemaValidation);
-            } catch (SAXNotRecognizedException e) {
+            } 
+            catch (SAXNotRecognizedException e) {
                 // ignore
-            } catch (SAXNotSupportedException e) {
-                log.debug("initialize(): warning: Parser does not support feature (" +
-                    SCHEMA_VALIDATION_FEATURE_ID + ")");
+            } 
+            catch (SAXNotSupportedException e) {
+            	java.util.logging.Logger.getAnonymousLogger().warning("Parser does not support feature (" + SCHEMA_VALIDATION_FEATURE_ID + ")");
             }
 
             try {
                 parser.setFeature(SCHEMA_FULL_CHECKING_FEATURE_ID, schemaFullChecking);
-            } catch (SAXNotRecognizedException e) {
+            } 
+            catch (SAXNotRecognizedException e) {
                 // ignore
-            } catch (SAXNotSupportedException e) {
-                log.debug("initialize(): warning: Parser does not support feature (" +
-                    SCHEMA_FULL_CHECKING_FEATURE_ID + ")");
+            } 
+            catch (SAXNotSupportedException e) {
+            	java.util.logging.Logger.getAnonymousLogger().warning("Parser does not support feature (" + SCHEMA_FULL_CHECKING_FEATURE_ID + ")");
             }
 
             // set handlers
@@ -172,7 +161,6 @@
                 String magicURL = MagicParser.class.getResource(magicFile).toString();
 
                 if (magicURL == null) {
-                    log.error("initialize(): couldn't load '" + magicURL + "'");
                     throw new MagicParseException("couldn't load '" + magicURL + "'");
                 }
 
@@ -198,39 +186,11 @@
         return matchers;
     }
 
-    /**
-     * DOCUMENT ME!
-     *
-     * @throws SAXException DOCUMENT ME!
-     */
-    public void startDocument()
-        throws SAXException
-    {
-        log.debug("startDocument()");
-    }
+    public void startDocument() throws SAXException {}
 
-    /**
-     * DOCUMENT ME!
-     *
-     * @throws SAXException DOCUMENT ME!
-     */
-    public void endDocument()
-        throws SAXException
-    {
-        log.debug("endDocument()");
-    }
+    public void endDocument() throws SAXException {}
 
-    /**
-     * DOCUMENT ME!
-     *
-     * @param target DOCUMENT ME!
-     * @param data DOCUMENT ME!
-     *
-     * @throws SAXException DOCUMENT ME!
-     */
-    public void processingInstruction(String target, String data)
-        throws SAXException
-    {
+    public void processingInstruction(String target, String data) throws SAXException {
         // do nothing
     }
 
@@ -247,8 +207,6 @@
         throws SAXException
     {
         String value = new String(ch, offset, length);
-        log.debug("characters(): value is '" + value + "'");
-
         finalValue += value;
     }
 
@@ -280,12 +238,9 @@
     public void startElement(String uri, String localName, String qname, Attributes attributes)
         throws SAXException
     {
-        log.debug("startElement()");
-        log.debug("startElement(): localName is '" + localName + "'");
 
         // create a new matcher
         if (localName.equals("match")) {
-            log.debug("startElement(): creating new matcher");
             // match to hold data
             match = new MagicMatch();
             // our matcher
@@ -313,24 +268,19 @@
                     if (attrLocalName.equals("offset")) {
                         if (!attrValue.equals("")) {
                             match.setOffset(new Integer(attrValue).intValue());
-                            log.debug("startElement():   setting offset to '" + attrValue + "'");
                         }
                     } else if (attrLocalName.equals("length")) {
                         if (!attrValue.equals("")) {
                             match.setLength(new Integer(attrValue).intValue());
-                            log.debug("startElement():   setting length to '" + attrValue + "'");
                         }
                     } else if (attrLocalName.equals("type")) {
                         match.setType(attrValue);
-                        log.debug("startElement():   setting type to '" + attrValue + "'");
                     } else if (attrLocalName.equals("bitmask")) {
                         if (!attrValue.equals("")) {
                             match.setBitmask(attrValue);
-                            log.debug("startElement():   setting bitmask to '" + attrValue + "'");
                         }
                     } else if (attrLocalName.equals("comparator")) {
                         match.setComparator(attrValue);
-                        log.debug("startElement():   setting comparator to '" + attrValue + "'");
                     }
                 }
             } else if (localName.equals("property")) {
@@ -361,19 +311,11 @@
 
                     if (!properties.containsKey(name)) {
                         properties.put(name, value);
-                        log.debug("startElement():   setting property '" + name + "'='" + value +
-                            "'");
-                    } else {
-                        log.debug("startElement():   not setting property '" + name +
-                            "', duplicate key");
                     }
                 }
             } else if (localName.equals("match-list")) {
-                log.debug("startElement(): found submatcher list");
-
                 // this means we are processing a child match, so we need to push
                 // the existing match on the stack
-                log.debug("startElement(): pushing current matcher to stack");
                 stack.add(matcher);
             } else {
                 // we don't care about this type
@@ -393,26 +335,20 @@
     public void endElement(String uri, String localName, String qname)
         throws SAXException
     {
-        log.debug("endElement()");
-        log.debug("endElement(): localName is '" + localName + "'");
 
         // determine which tag these chars are for and save them
         if (isMimeType) {
             isMimeType = false;
             match.setMimeType(finalValue);
-            log.debug("characters(): setting mimetype to '" + finalValue + "'");
         } else if (isExtension) {
             isExtension = false;
             match.setExtension(finalValue);
-            log.debug("characters(): setting extension to '" + finalValue + "'");
         } else if (isDescription) {
             isDescription = false;
             match.setDescription(finalValue);
-            log.debug("characters(): setting description to '" + finalValue + "'");
         } else if (isTest) {
             isTest = false;
             match.setTest(convertOctals(finalValue));
-            log.debug("characters(): setting test to '" + convertOctals(finalValue) + "'");
         } else {
             // do nothing
         }
@@ -429,20 +365,13 @@
 
                 // add root match
                 if (stack.size() == 0) {
-                    log.debug("endElement(): adding root matcher");
                     matchers.add(matcher);
                 } else {
                     // we need to add the match to it's parent which is on the
                     // stack
-                    log.debug("endElement(): adding sub matcher");
-
                     MagicMatcher m = (MagicMatcher) stack.get(stack.size() - 1);
                     m.addSubMatcher(matcher);
                 }
-            } else {
-                // don't add invalid matchers
-                log.info("endElement(): not adding invalid matcher '" + match.getDescription() +
-                    "'");
             }
 
             matcher = null;
@@ -451,7 +380,6 @@
             // restore matcher from the stack if we have an /matcher-list
         } else if (localName.equals("match-list")) {
             if (stack.size() > 0) {
-                log.debug("endElement(): popping from the stack");
                 matcher = (MagicMatcher) stack.get(stack.size() - 1);
                 // pop from the stack
                 stack.remove(matcher);
@@ -572,14 +500,9 @@
         }
 
         try {
-            log.debug("convertOctals(): returning buffer size '" + buf.size() + "'");
-
             ByteBuffer b = ByteBuffer.allocate(buf.size());
-
             return b.put(buf.toByteArray());
         } catch (Exception e) {
-            log.error("convertOctals(): error parsing string: " + e);
-
             return ByteBuffer.allocate(0);
         }
     }
diff -Nru old\net\sf\jmimemagic\package.html new\net\sf\jmimemagic\package.html
--- old\net\sf\jmimemagic\package.html	Tue Sep 05 22:19:26 2006
+++ new\net\sf\jmimemagic\package.html	Thu Jan 01 01:00:00 1970
@@ -1,6 +0,0 @@
-<html>
-<body>
-	<h1>net.sf.jmimemagic.detectors</h1>
-	This package contains the main classes for jmimemagic
-</body>
-</html>
diff -Nru old\template.xml new\template.xml
--- old\template.xml	Thu Jan 01 01:00:00 1970
+++ new\template.xml	Tue Nov 10 18:49:04 2009
@@ -0,0 +1,97 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE magic PUBLIC "-//jmimemagic//DTD magic config 1.0//EN" "magic_1_0.dtd">
+<magic>
+<info>
+<version></version>
+<author></author>
+<description>file</description>
+</info>
+
+<match-list>
+<!--
+<match>
+	<mimetype></mimetype>        # the mime type if matched 
+	<extension></extension>      # the likely extension for this matched stream 
+	<description></description>  # description if matched 
+	<test type="" 
+	      offset="" 
+		  length="" 
+		  bitmask="" 
+		  comparator="">
+	</test>                      # the test which defines this match 
+		# test   - this value may contain a '.', which represents any value
+		#          '.' must be replaced with '\.'.  
+		#          \xNN where N is [0-9] represents a hex value
+		# type   - one of:
+		#			 long        - long, platform byte order
+		#			 lelong      - long, little endian
+		#			 belong      - long, big endian
+		#			 short       - short
+		#			 leshort     - short, little endian
+		#			 beshort     - short, big endian
+		#			 string      - string
+		#			 string-ZZZZ - string with encoding defined by ZZZZ (any 
+		#			               length encoding name)
+		#			 byte        - byte
+		#			 regex       - regular expression in perl 5 style
+		#			 plugin      - call the specified class to determine if
+		#			               the stream is of this mime type
+		# offset     - location match should start from on the stream
+		#              normal offset - n (0-indexed byte position in stream)
+		#              indirect offset - for which types???
+		# length     - this is implicit when data is specified in <test/>, but
+		# 			   for regex and plugin this will limit the amount of data
+		# 			   used for comparison, as if the rest of the stream didn't
+		# 			   exist
+		# bitmask    - a bitmask that should be applied to the stream segment
+		# 			   before it is tested against the value or passed to
+		# 			   regex/plugin
+		# comparator - one of:
+		#                = - equals
+		#				 ! - not equals
+		#				 > - greater than
+		#				 < - less than
+		#				 & - all bits set
+		#				 ^ - all bit cleared
+	
+	<match-list>                    # example sub-match
+		<match>
+		<mimetype></mimetype>       # if submatch has diff mime type
+		<extension></extension>     # if submatch has diff ext 
+		<description 
+			  supplemental="">      # defined if this is a supplemental desc
+		</description>              # description if matched
+		<test offset=""
+			  length=""
+			  type=""
+			  bitmask=""
+			  comparator="">
+		</test>                     # the test which defines this match 
+		</match>
+	</match-list>
+</match>
+
+-->
+<match>
+	<mimetype></mimetype>
+	<extension></extension>
+	<description></description>
+	<test type="" offset="" length="" bitmask="" comparator=""></test>
+	<match-list>
+		<match>
+			<mimetype></mimetype>
+			<extension></extension>
+			<description supplemental=""></description>
+			<test offset="" length="" type="" bitmask="" comparator=""></test>
+		</match>
+		<match>
+			<mimetype></mimetype>
+			<extension></extension>
+			<description supplemental=""></description>
+			<test offset="" length="" type="" bitmask="" comparator=""></test>
+		</match>
+	</match-list>
+</match>
+</match-list>
+</magic>
+
